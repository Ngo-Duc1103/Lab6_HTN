
Bai6_ADC_PWM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a520  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003318  0800a6b0  0800a6b0  0000b6b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d9c8  0800d9c8  0000f1e8  2**0
                  CONTENTS
  4 .ARM          00000008  0800d9c8  0800d9c8  0000e9c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d9d0  0800d9d0  0000f1e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d9d0  0800d9d0  0000e9d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800d9d4  0800d9d4  0000e9d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  0800d9d8  0000f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000f1e8  2**0
                  CONTENTS
 10 .bss          000005ac  200001e8  200001e8  0000f1e8  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000794  20000794  0000f1e8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000f1e8  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001a51f  00000000  00000000  0000f218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000046f1  00000000  00000000  00029737  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000017b0  00000000  00000000  0002de28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000124c  00000000  00000000  0002f5d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00027462  00000000  00000000  00030824  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0002162a  00000000  00000000  00057c86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000e2102  00000000  00000000  000792b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0015b3b2  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000725c  00000000  00000000  0015b3f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000070  00000000  00000000  00162654  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001e8 	.word	0x200001e8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800a698 	.word	0x0800a698

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001ec 	.word	0x200001ec
 80001cc:	0800a698 	.word	0x0800a698

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2f>:
 8000ba8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bac:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bb0:	bf24      	itt	cs
 8000bb2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bb6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bba:	d90d      	bls.n	8000bd8 <__aeabi_d2f+0x30>
 8000bbc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bc0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bc4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bcc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bd0:	bf08      	it	eq
 8000bd2:	f020 0001 	biceq.w	r0, r0, #1
 8000bd6:	4770      	bx	lr
 8000bd8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bdc:	d121      	bne.n	8000c22 <__aeabi_d2f+0x7a>
 8000bde:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000be2:	bfbc      	itt	lt
 8000be4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000be8:	4770      	bxlt	lr
 8000bea:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bee:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bf2:	f1c2 0218 	rsb	r2, r2, #24
 8000bf6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bfa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bfe:	fa20 f002 	lsr.w	r0, r0, r2
 8000c02:	bf18      	it	ne
 8000c04:	f040 0001 	orrne.w	r0, r0, #1
 8000c08:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c0c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c10:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c14:	ea40 000c 	orr.w	r0, r0, ip
 8000c18:	fa23 f302 	lsr.w	r3, r3, r2
 8000c1c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c20:	e7cc      	b.n	8000bbc <__aeabi_d2f+0x14>
 8000c22:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c26:	d107      	bne.n	8000c38 <__aeabi_d2f+0x90>
 8000c28:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c2c:	bf1e      	ittt	ne
 8000c2e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c32:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c36:	4770      	bxne	lr
 8000c38:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c3c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c40:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c44:	4770      	bx	lr
 8000c46:	bf00      	nop

08000c48 <__aeabi_uldivmod>:
 8000c48:	b953      	cbnz	r3, 8000c60 <__aeabi_uldivmod+0x18>
 8000c4a:	b94a      	cbnz	r2, 8000c60 <__aeabi_uldivmod+0x18>
 8000c4c:	2900      	cmp	r1, #0
 8000c4e:	bf08      	it	eq
 8000c50:	2800      	cmpeq	r0, #0
 8000c52:	bf1c      	itt	ne
 8000c54:	f04f 31ff 	movne.w	r1, #4294967295
 8000c58:	f04f 30ff 	movne.w	r0, #4294967295
 8000c5c:	f000 b96a 	b.w	8000f34 <__aeabi_idiv0>
 8000c60:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c64:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c68:	f000 f806 	bl	8000c78 <__udivmoddi4>
 8000c6c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c70:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c74:	b004      	add	sp, #16
 8000c76:	4770      	bx	lr

08000c78 <__udivmoddi4>:
 8000c78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c7c:	9d08      	ldr	r5, [sp, #32]
 8000c7e:	460c      	mov	r4, r1
 8000c80:	2b00      	cmp	r3, #0
 8000c82:	d14e      	bne.n	8000d22 <__udivmoddi4+0xaa>
 8000c84:	4694      	mov	ip, r2
 8000c86:	458c      	cmp	ip, r1
 8000c88:	4686      	mov	lr, r0
 8000c8a:	fab2 f282 	clz	r2, r2
 8000c8e:	d962      	bls.n	8000d56 <__udivmoddi4+0xde>
 8000c90:	b14a      	cbz	r2, 8000ca6 <__udivmoddi4+0x2e>
 8000c92:	f1c2 0320 	rsb	r3, r2, #32
 8000c96:	4091      	lsls	r1, r2
 8000c98:	fa20 f303 	lsr.w	r3, r0, r3
 8000c9c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ca0:	4319      	orrs	r1, r3
 8000ca2:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ca6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000caa:	fa1f f68c 	uxth.w	r6, ip
 8000cae:	fbb1 f4f7 	udiv	r4, r1, r7
 8000cb2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cb6:	fb07 1114 	mls	r1, r7, r4, r1
 8000cba:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cbe:	fb04 f106 	mul.w	r1, r4, r6
 8000cc2:	4299      	cmp	r1, r3
 8000cc4:	d90a      	bls.n	8000cdc <__udivmoddi4+0x64>
 8000cc6:	eb1c 0303 	adds.w	r3, ip, r3
 8000cca:	f104 30ff 	add.w	r0, r4, #4294967295
 8000cce:	f080 8112 	bcs.w	8000ef6 <__udivmoddi4+0x27e>
 8000cd2:	4299      	cmp	r1, r3
 8000cd4:	f240 810f 	bls.w	8000ef6 <__udivmoddi4+0x27e>
 8000cd8:	3c02      	subs	r4, #2
 8000cda:	4463      	add	r3, ip
 8000cdc:	1a59      	subs	r1, r3, r1
 8000cde:	fa1f f38e 	uxth.w	r3, lr
 8000ce2:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ce6:	fb07 1110 	mls	r1, r7, r0, r1
 8000cea:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cee:	fb00 f606 	mul.w	r6, r0, r6
 8000cf2:	429e      	cmp	r6, r3
 8000cf4:	d90a      	bls.n	8000d0c <__udivmoddi4+0x94>
 8000cf6:	eb1c 0303 	adds.w	r3, ip, r3
 8000cfa:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cfe:	f080 80fc 	bcs.w	8000efa <__udivmoddi4+0x282>
 8000d02:	429e      	cmp	r6, r3
 8000d04:	f240 80f9 	bls.w	8000efa <__udivmoddi4+0x282>
 8000d08:	4463      	add	r3, ip
 8000d0a:	3802      	subs	r0, #2
 8000d0c:	1b9b      	subs	r3, r3, r6
 8000d0e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d12:	2100      	movs	r1, #0
 8000d14:	b11d      	cbz	r5, 8000d1e <__udivmoddi4+0xa6>
 8000d16:	40d3      	lsrs	r3, r2
 8000d18:	2200      	movs	r2, #0
 8000d1a:	e9c5 3200 	strd	r3, r2, [r5]
 8000d1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d905      	bls.n	8000d32 <__udivmoddi4+0xba>
 8000d26:	b10d      	cbz	r5, 8000d2c <__udivmoddi4+0xb4>
 8000d28:	e9c5 0100 	strd	r0, r1, [r5]
 8000d2c:	2100      	movs	r1, #0
 8000d2e:	4608      	mov	r0, r1
 8000d30:	e7f5      	b.n	8000d1e <__udivmoddi4+0xa6>
 8000d32:	fab3 f183 	clz	r1, r3
 8000d36:	2900      	cmp	r1, #0
 8000d38:	d146      	bne.n	8000dc8 <__udivmoddi4+0x150>
 8000d3a:	42a3      	cmp	r3, r4
 8000d3c:	d302      	bcc.n	8000d44 <__udivmoddi4+0xcc>
 8000d3e:	4290      	cmp	r0, r2
 8000d40:	f0c0 80f0 	bcc.w	8000f24 <__udivmoddi4+0x2ac>
 8000d44:	1a86      	subs	r6, r0, r2
 8000d46:	eb64 0303 	sbc.w	r3, r4, r3
 8000d4a:	2001      	movs	r0, #1
 8000d4c:	2d00      	cmp	r5, #0
 8000d4e:	d0e6      	beq.n	8000d1e <__udivmoddi4+0xa6>
 8000d50:	e9c5 6300 	strd	r6, r3, [r5]
 8000d54:	e7e3      	b.n	8000d1e <__udivmoddi4+0xa6>
 8000d56:	2a00      	cmp	r2, #0
 8000d58:	f040 8090 	bne.w	8000e7c <__udivmoddi4+0x204>
 8000d5c:	eba1 040c 	sub.w	r4, r1, ip
 8000d60:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d64:	fa1f f78c 	uxth.w	r7, ip
 8000d68:	2101      	movs	r1, #1
 8000d6a:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d6e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d72:	fb08 4416 	mls	r4, r8, r6, r4
 8000d76:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d7a:	fb07 f006 	mul.w	r0, r7, r6
 8000d7e:	4298      	cmp	r0, r3
 8000d80:	d908      	bls.n	8000d94 <__udivmoddi4+0x11c>
 8000d82:	eb1c 0303 	adds.w	r3, ip, r3
 8000d86:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d8a:	d202      	bcs.n	8000d92 <__udivmoddi4+0x11a>
 8000d8c:	4298      	cmp	r0, r3
 8000d8e:	f200 80cd 	bhi.w	8000f2c <__udivmoddi4+0x2b4>
 8000d92:	4626      	mov	r6, r4
 8000d94:	1a1c      	subs	r4, r3, r0
 8000d96:	fa1f f38e 	uxth.w	r3, lr
 8000d9a:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d9e:	fb08 4410 	mls	r4, r8, r0, r4
 8000da2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000da6:	fb00 f707 	mul.w	r7, r0, r7
 8000daa:	429f      	cmp	r7, r3
 8000dac:	d908      	bls.n	8000dc0 <__udivmoddi4+0x148>
 8000dae:	eb1c 0303 	adds.w	r3, ip, r3
 8000db2:	f100 34ff 	add.w	r4, r0, #4294967295
 8000db6:	d202      	bcs.n	8000dbe <__udivmoddi4+0x146>
 8000db8:	429f      	cmp	r7, r3
 8000dba:	f200 80b0 	bhi.w	8000f1e <__udivmoddi4+0x2a6>
 8000dbe:	4620      	mov	r0, r4
 8000dc0:	1bdb      	subs	r3, r3, r7
 8000dc2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dc6:	e7a5      	b.n	8000d14 <__udivmoddi4+0x9c>
 8000dc8:	f1c1 0620 	rsb	r6, r1, #32
 8000dcc:	408b      	lsls	r3, r1
 8000dce:	fa22 f706 	lsr.w	r7, r2, r6
 8000dd2:	431f      	orrs	r7, r3
 8000dd4:	fa20 fc06 	lsr.w	ip, r0, r6
 8000dd8:	fa04 f301 	lsl.w	r3, r4, r1
 8000ddc:	ea43 030c 	orr.w	r3, r3, ip
 8000de0:	40f4      	lsrs	r4, r6
 8000de2:	fa00 f801 	lsl.w	r8, r0, r1
 8000de6:	0c38      	lsrs	r0, r7, #16
 8000de8:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000dec:	fbb4 fef0 	udiv	lr, r4, r0
 8000df0:	fa1f fc87 	uxth.w	ip, r7
 8000df4:	fb00 441e 	mls	r4, r0, lr, r4
 8000df8:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dfc:	fb0e f90c 	mul.w	r9, lr, ip
 8000e00:	45a1      	cmp	r9, r4
 8000e02:	fa02 f201 	lsl.w	r2, r2, r1
 8000e06:	d90a      	bls.n	8000e1e <__udivmoddi4+0x1a6>
 8000e08:	193c      	adds	r4, r7, r4
 8000e0a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000e0e:	f080 8084 	bcs.w	8000f1a <__udivmoddi4+0x2a2>
 8000e12:	45a1      	cmp	r9, r4
 8000e14:	f240 8081 	bls.w	8000f1a <__udivmoddi4+0x2a2>
 8000e18:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e1c:	443c      	add	r4, r7
 8000e1e:	eba4 0409 	sub.w	r4, r4, r9
 8000e22:	fa1f f983 	uxth.w	r9, r3
 8000e26:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e2a:	fb00 4413 	mls	r4, r0, r3, r4
 8000e2e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e32:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e36:	45a4      	cmp	ip, r4
 8000e38:	d907      	bls.n	8000e4a <__udivmoddi4+0x1d2>
 8000e3a:	193c      	adds	r4, r7, r4
 8000e3c:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e40:	d267      	bcs.n	8000f12 <__udivmoddi4+0x29a>
 8000e42:	45a4      	cmp	ip, r4
 8000e44:	d965      	bls.n	8000f12 <__udivmoddi4+0x29a>
 8000e46:	3b02      	subs	r3, #2
 8000e48:	443c      	add	r4, r7
 8000e4a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e4e:	fba0 9302 	umull	r9, r3, r0, r2
 8000e52:	eba4 040c 	sub.w	r4, r4, ip
 8000e56:	429c      	cmp	r4, r3
 8000e58:	46ce      	mov	lr, r9
 8000e5a:	469c      	mov	ip, r3
 8000e5c:	d351      	bcc.n	8000f02 <__udivmoddi4+0x28a>
 8000e5e:	d04e      	beq.n	8000efe <__udivmoddi4+0x286>
 8000e60:	b155      	cbz	r5, 8000e78 <__udivmoddi4+0x200>
 8000e62:	ebb8 030e 	subs.w	r3, r8, lr
 8000e66:	eb64 040c 	sbc.w	r4, r4, ip
 8000e6a:	fa04 f606 	lsl.w	r6, r4, r6
 8000e6e:	40cb      	lsrs	r3, r1
 8000e70:	431e      	orrs	r6, r3
 8000e72:	40cc      	lsrs	r4, r1
 8000e74:	e9c5 6400 	strd	r6, r4, [r5]
 8000e78:	2100      	movs	r1, #0
 8000e7a:	e750      	b.n	8000d1e <__udivmoddi4+0xa6>
 8000e7c:	f1c2 0320 	rsb	r3, r2, #32
 8000e80:	fa20 f103 	lsr.w	r1, r0, r3
 8000e84:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e88:	fa24 f303 	lsr.w	r3, r4, r3
 8000e8c:	4094      	lsls	r4, r2
 8000e8e:	430c      	orrs	r4, r1
 8000e90:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e94:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e98:	fa1f f78c 	uxth.w	r7, ip
 8000e9c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ea0:	fb08 3110 	mls	r1, r8, r0, r3
 8000ea4:	0c23      	lsrs	r3, r4, #16
 8000ea6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eaa:	fb00 f107 	mul.w	r1, r0, r7
 8000eae:	4299      	cmp	r1, r3
 8000eb0:	d908      	bls.n	8000ec4 <__udivmoddi4+0x24c>
 8000eb2:	eb1c 0303 	adds.w	r3, ip, r3
 8000eb6:	f100 36ff 	add.w	r6, r0, #4294967295
 8000eba:	d22c      	bcs.n	8000f16 <__udivmoddi4+0x29e>
 8000ebc:	4299      	cmp	r1, r3
 8000ebe:	d92a      	bls.n	8000f16 <__udivmoddi4+0x29e>
 8000ec0:	3802      	subs	r0, #2
 8000ec2:	4463      	add	r3, ip
 8000ec4:	1a5b      	subs	r3, r3, r1
 8000ec6:	b2a4      	uxth	r4, r4
 8000ec8:	fbb3 f1f8 	udiv	r1, r3, r8
 8000ecc:	fb08 3311 	mls	r3, r8, r1, r3
 8000ed0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000ed4:	fb01 f307 	mul.w	r3, r1, r7
 8000ed8:	42a3      	cmp	r3, r4
 8000eda:	d908      	bls.n	8000eee <__udivmoddi4+0x276>
 8000edc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ee0:	f101 36ff 	add.w	r6, r1, #4294967295
 8000ee4:	d213      	bcs.n	8000f0e <__udivmoddi4+0x296>
 8000ee6:	42a3      	cmp	r3, r4
 8000ee8:	d911      	bls.n	8000f0e <__udivmoddi4+0x296>
 8000eea:	3902      	subs	r1, #2
 8000eec:	4464      	add	r4, ip
 8000eee:	1ae4      	subs	r4, r4, r3
 8000ef0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ef4:	e739      	b.n	8000d6a <__udivmoddi4+0xf2>
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	e6f0      	b.n	8000cdc <__udivmoddi4+0x64>
 8000efa:	4608      	mov	r0, r1
 8000efc:	e706      	b.n	8000d0c <__udivmoddi4+0x94>
 8000efe:	45c8      	cmp	r8, r9
 8000f00:	d2ae      	bcs.n	8000e60 <__udivmoddi4+0x1e8>
 8000f02:	ebb9 0e02 	subs.w	lr, r9, r2
 8000f06:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f0a:	3801      	subs	r0, #1
 8000f0c:	e7a8      	b.n	8000e60 <__udivmoddi4+0x1e8>
 8000f0e:	4631      	mov	r1, r6
 8000f10:	e7ed      	b.n	8000eee <__udivmoddi4+0x276>
 8000f12:	4603      	mov	r3, r0
 8000f14:	e799      	b.n	8000e4a <__udivmoddi4+0x1d2>
 8000f16:	4630      	mov	r0, r6
 8000f18:	e7d4      	b.n	8000ec4 <__udivmoddi4+0x24c>
 8000f1a:	46d6      	mov	lr, sl
 8000f1c:	e77f      	b.n	8000e1e <__udivmoddi4+0x1a6>
 8000f1e:	4463      	add	r3, ip
 8000f20:	3802      	subs	r0, #2
 8000f22:	e74d      	b.n	8000dc0 <__udivmoddi4+0x148>
 8000f24:	4606      	mov	r6, r0
 8000f26:	4623      	mov	r3, r4
 8000f28:	4608      	mov	r0, r1
 8000f2a:	e70f      	b.n	8000d4c <__udivmoddi4+0xd4>
 8000f2c:	3e02      	subs	r6, #2
 8000f2e:	4463      	add	r3, ip
 8000f30:	e730      	b.n	8000d94 <__udivmoddi4+0x11c>
 8000f32:	bf00      	nop

08000f34 <__aeabi_idiv0>:
 8000f34:	4770      	bx	lr
 8000f36:	bf00      	nop

08000f38 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8000f38:	b580      	push	{r7, lr}
 8000f3a:	b084      	sub	sp, #16
 8000f3c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000f3e:	463b      	mov	r3, r7
 8000f40:	2200      	movs	r2, #0
 8000f42:	601a      	str	r2, [r3, #0]
 8000f44:	605a      	str	r2, [r3, #4]
 8000f46:	609a      	str	r2, [r3, #8]
 8000f48:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000f4a:	4b3d      	ldr	r3, [pc, #244]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f4c:	4a3d      	ldr	r2, [pc, #244]	@ (8001044 <MX_ADC1_Init+0x10c>)
 8000f4e:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000f50:	4b3b      	ldr	r3, [pc, #236]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f52:	2200      	movs	r2, #0
 8000f54:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000f56:	4b3a      	ldr	r3, [pc, #232]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f58:	2200      	movs	r2, #0
 8000f5a:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8000f5c:	4b38      	ldr	r3, [pc, #224]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f5e:	2201      	movs	r2, #1
 8000f60:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000f62:	4b37      	ldr	r3, [pc, #220]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f64:	2200      	movs	r2, #0
 8000f66:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000f68:	4b35      	ldr	r3, [pc, #212]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000f70:	4b33      	ldr	r3, [pc, #204]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f72:	2200      	movs	r2, #0
 8000f74:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000f76:	4b32      	ldr	r3, [pc, #200]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f78:	4a33      	ldr	r2, [pc, #204]	@ (8001048 <MX_ADC1_Init+0x110>)
 8000f7a:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000f7c:	4b30      	ldr	r3, [pc, #192]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f7e:	2200      	movs	r2, #0
 8000f80:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 5;
 8000f82:	4b2f      	ldr	r3, [pc, #188]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f84:	2205      	movs	r2, #5
 8000f86:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000f88:	4b2d      	ldr	r3, [pc, #180]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f8a:	2200      	movs	r2, #0
 8000f8c:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000f90:	4b2b      	ldr	r3, [pc, #172]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f92:	2201      	movs	r2, #1
 8000f94:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000f96:	482a      	ldr	r0, [pc, #168]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000f98:	f002 f830 	bl	8002ffc <HAL_ADC_Init>
 8000f9c:	4603      	mov	r3, r0
 8000f9e:	2b00      	cmp	r3, #0
 8000fa0:	d001      	beq.n	8000fa6 <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8000fa2:	f001 fadf 	bl	8002564 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8000fa6:	2308      	movs	r3, #8
 8000fa8:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000faa:	2301      	movs	r3, #1
 8000fac:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000fae:	2300      	movs	r3, #0
 8000fb0:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000fb2:	463b      	mov	r3, r7
 8000fb4:	4619      	mov	r1, r3
 8000fb6:	4822      	ldr	r0, [pc, #136]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000fb8:	f002 f992 	bl	80032e0 <HAL_ADC_ConfigChannel>
 8000fbc:	4603      	mov	r3, r0
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	d001      	beq.n	8000fc6 <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 8000fc2:	f001 facf 	bl	8002564 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8000fc6:	2309      	movs	r3, #9
 8000fc8:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 8000fca:	2302      	movs	r3, #2
 8000fcc:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000fce:	463b      	mov	r3, r7
 8000fd0:	4619      	mov	r1, r3
 8000fd2:	481b      	ldr	r0, [pc, #108]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000fd4:	f002 f984 	bl	80032e0 <HAL_ADC_ConfigChannel>
 8000fd8:	4603      	mov	r3, r0
 8000fda:	2b00      	cmp	r3, #0
 8000fdc:	d001      	beq.n	8000fe2 <MX_ADC1_Init+0xaa>
  {
    Error_Handler();
 8000fde:	f001 fac1 	bl	8002564 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 8000fe2:	230a      	movs	r3, #10
 8000fe4:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 3;
 8000fe6:	2303      	movs	r3, #3
 8000fe8:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000fea:	463b      	mov	r3, r7
 8000fec:	4619      	mov	r1, r3
 8000fee:	4814      	ldr	r0, [pc, #80]	@ (8001040 <MX_ADC1_Init+0x108>)
 8000ff0:	f002 f976 	bl	80032e0 <HAL_ADC_ConfigChannel>
 8000ff4:	4603      	mov	r3, r0
 8000ff6:	2b00      	cmp	r3, #0
 8000ff8:	d001      	beq.n	8000ffe <MX_ADC1_Init+0xc6>
  {
    Error_Handler();
 8000ffa:	f001 fab3 	bl	8002564 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_11;
 8000ffe:	230b      	movs	r3, #11
 8001000:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 4;
 8001002:	2304      	movs	r3, #4
 8001004:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001006:	463b      	mov	r3, r7
 8001008:	4619      	mov	r1, r3
 800100a:	480d      	ldr	r0, [pc, #52]	@ (8001040 <MX_ADC1_Init+0x108>)
 800100c:	f002 f968 	bl	80032e0 <HAL_ADC_ConfigChannel>
 8001010:	4603      	mov	r3, r0
 8001012:	2b00      	cmp	r3, #0
 8001014:	d001      	beq.n	800101a <MX_ADC1_Init+0xe2>
  {
    Error_Handler();
 8001016:	f001 faa5 	bl	8002564 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_12;
 800101a:	230c      	movs	r3, #12
 800101c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 5;
 800101e:	2305      	movs	r3, #5
 8001020:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001022:	463b      	mov	r3, r7
 8001024:	4619      	mov	r1, r3
 8001026:	4806      	ldr	r0, [pc, #24]	@ (8001040 <MX_ADC1_Init+0x108>)
 8001028:	f002 f95a 	bl	80032e0 <HAL_ADC_ConfigChannel>
 800102c:	4603      	mov	r3, r0
 800102e:	2b00      	cmp	r3, #0
 8001030:	d001      	beq.n	8001036 <MX_ADC1_Init+0xfe>
  {
    Error_Handler();
 8001032:	f001 fa97 	bl	8002564 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001036:	bf00      	nop
 8001038:	3710      	adds	r7, #16
 800103a:	46bd      	mov	sp, r7
 800103c:	bd80      	pop	{r7, pc}
 800103e:	bf00      	nop
 8001040:	20000204 	.word	0x20000204
 8001044:	40012000 	.word	0x40012000
 8001048:	0f000001 	.word	0x0f000001

0800104c <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 800104c:	b580      	push	{r7, lr}
 800104e:	b08a      	sub	sp, #40	@ 0x28
 8001050:	af00      	add	r7, sp, #0
 8001052:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001054:	f107 0314 	add.w	r3, r7, #20
 8001058:	2200      	movs	r2, #0
 800105a:	601a      	str	r2, [r3, #0]
 800105c:	605a      	str	r2, [r3, #4]
 800105e:	609a      	str	r2, [r3, #8]
 8001060:	60da      	str	r2, [r3, #12]
 8001062:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC1)
 8001064:	687b      	ldr	r3, [r7, #4]
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	4a3c      	ldr	r2, [pc, #240]	@ (800115c <HAL_ADC_MspInit+0x110>)
 800106a:	4293      	cmp	r3, r2
 800106c:	d171      	bne.n	8001152 <HAL_ADC_MspInit+0x106>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800106e:	2300      	movs	r3, #0
 8001070:	613b      	str	r3, [r7, #16]
 8001072:	4b3b      	ldr	r3, [pc, #236]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 8001074:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001076:	4a3a      	ldr	r2, [pc, #232]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 8001078:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800107c:	6453      	str	r3, [r2, #68]	@ 0x44
 800107e:	4b38      	ldr	r3, [pc, #224]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 8001080:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001082:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001086:	613b      	str	r3, [r7, #16]
 8001088:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800108a:	2300      	movs	r3, #0
 800108c:	60fb      	str	r3, [r7, #12]
 800108e:	4b34      	ldr	r3, [pc, #208]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 8001090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001092:	4a33      	ldr	r2, [pc, #204]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 8001094:	f043 0304 	orr.w	r3, r3, #4
 8001098:	6313      	str	r3, [r2, #48]	@ 0x30
 800109a:	4b31      	ldr	r3, [pc, #196]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 800109c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800109e:	f003 0304 	and.w	r3, r3, #4
 80010a2:	60fb      	str	r3, [r7, #12]
 80010a4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80010a6:	2300      	movs	r3, #0
 80010a8:	60bb      	str	r3, [r7, #8]
 80010aa:	4b2d      	ldr	r3, [pc, #180]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 80010ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ae:	4a2c      	ldr	r2, [pc, #176]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 80010b0:	f043 0302 	orr.w	r3, r3, #2
 80010b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80010b6:	4b2a      	ldr	r3, [pc, #168]	@ (8001160 <HAL_ADC_MspInit+0x114>)
 80010b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ba:	f003 0302 	and.w	r3, r3, #2
 80010be:	60bb      	str	r3, [r7, #8]
 80010c0:	68bb      	ldr	r3, [r7, #8]
    PC1     ------> ADC1_IN11
    PC2     ------> ADC1_IN12
    PB0     ------> ADC1_IN8
    PB1     ------> ADC1_IN9
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 80010c2:	2307      	movs	r3, #7
 80010c4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010c6:	2303      	movs	r3, #3
 80010c8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010ca:	2300      	movs	r3, #0
 80010cc:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80010ce:	f107 0314 	add.w	r3, r7, #20
 80010d2:	4619      	mov	r1, r3
 80010d4:	4823      	ldr	r0, [pc, #140]	@ (8001164 <HAL_ADC_MspInit+0x118>)
 80010d6:	f003 f8b7 	bl	8004248 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80010da:	2303      	movs	r3, #3
 80010dc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010de:	2303      	movs	r3, #3
 80010e0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010e2:	2300      	movs	r3, #0
 80010e4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80010e6:	f107 0314 	add.w	r3, r7, #20
 80010ea:	4619      	mov	r1, r3
 80010ec:	481e      	ldr	r0, [pc, #120]	@ (8001168 <HAL_ADC_MspInit+0x11c>)
 80010ee:	f003 f8ab 	bl	8004248 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 80010f2:	4b1e      	ldr	r3, [pc, #120]	@ (800116c <HAL_ADC_MspInit+0x120>)
 80010f4:	4a1e      	ldr	r2, [pc, #120]	@ (8001170 <HAL_ADC_MspInit+0x124>)
 80010f6:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 80010f8:	4b1c      	ldr	r3, [pc, #112]	@ (800116c <HAL_ADC_MspInit+0x120>)
 80010fa:	2200      	movs	r2, #0
 80010fc:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80010fe:	4b1b      	ldr	r3, [pc, #108]	@ (800116c <HAL_ADC_MspInit+0x120>)
 8001100:	2200      	movs	r2, #0
 8001102:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001104:	4b19      	ldr	r3, [pc, #100]	@ (800116c <HAL_ADC_MspInit+0x120>)
 8001106:	2200      	movs	r2, #0
 8001108:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 800110a:	4b18      	ldr	r3, [pc, #96]	@ (800116c <HAL_ADC_MspInit+0x120>)
 800110c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001110:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001112:	4b16      	ldr	r3, [pc, #88]	@ (800116c <HAL_ADC_MspInit+0x120>)
 8001114:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001118:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800111a:	4b14      	ldr	r3, [pc, #80]	@ (800116c <HAL_ADC_MspInit+0x120>)
 800111c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001120:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8001122:	4b12      	ldr	r3, [pc, #72]	@ (800116c <HAL_ADC_MspInit+0x120>)
 8001124:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001128:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 800112a:	4b10      	ldr	r3, [pc, #64]	@ (800116c <HAL_ADC_MspInit+0x120>)
 800112c:	2200      	movs	r2, #0
 800112e:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001130:	4b0e      	ldr	r3, [pc, #56]	@ (800116c <HAL_ADC_MspInit+0x120>)
 8001132:	2200      	movs	r2, #0
 8001134:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001136:	480d      	ldr	r0, [pc, #52]	@ (800116c <HAL_ADC_MspInit+0x120>)
 8001138:	f002 fc84 	bl	8003a44 <HAL_DMA_Init>
 800113c:	4603      	mov	r3, r0
 800113e:	2b00      	cmp	r3, #0
 8001140:	d001      	beq.n	8001146 <HAL_ADC_MspInit+0xfa>
    {
      Error_Handler();
 8001142:	f001 fa0f 	bl	8002564 <Error_Handler>
    }

    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 8001146:	687b      	ldr	r3, [r7, #4]
 8001148:	4a08      	ldr	r2, [pc, #32]	@ (800116c <HAL_ADC_MspInit+0x120>)
 800114a:	639a      	str	r2, [r3, #56]	@ 0x38
 800114c:	4a07      	ldr	r2, [pc, #28]	@ (800116c <HAL_ADC_MspInit+0x120>)
 800114e:	687b      	ldr	r3, [r7, #4]
 8001150:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 8001152:	bf00      	nop
 8001154:	3728      	adds	r7, #40	@ 0x28
 8001156:	46bd      	mov	sp, r7
 8001158:	bd80      	pop	{r7, pc}
 800115a:	bf00      	nop
 800115c:	40012000 	.word	0x40012000
 8001160:	40023800 	.word	0x40023800
 8001164:	40020800 	.word	0x40020800
 8001168:	40020400 	.word	0x40020400
 800116c:	2000024c 	.word	0x2000024c
 8001170:	40026410 	.word	0x40026410

08001174 <button_init>:
#include "button.h"

uint16_t button_count[16];
uint16_t spi_button = 0x0000;

void button_init(){
 8001174:	b580      	push	{r7, lr}
 8001176:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(BTN_LOAD_GPIO_Port, BTN_LOAD_Pin, 1);
 8001178:	2201      	movs	r2, #1
 800117a:	2108      	movs	r1, #8
 800117c:	4802      	ldr	r0, [pc, #8]	@ (8001188 <button_init+0x14>)
 800117e:	f003 f9ff 	bl	8004580 <HAL_GPIO_WritePin>
}
 8001182:	bf00      	nop
 8001184:	bd80      	pop	{r7, pc}
 8001186:	bf00      	nop
 8001188:	40020c00 	.word	0x40020c00

0800118c <buzzer_init>:

#include "buzzer.h"

uint8_t duty_cycle = 0;

void buzzer_init(){
 800118c:	b580      	push	{r7, lr}
 800118e:	af00      	add	r7, sp, #0
	HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8001190:	2100      	movs	r1, #0
 8001192:	4802      	ldr	r0, [pc, #8]	@ (800119c <buzzer_init+0x10>)
 8001194:	f004 fbf4 	bl	8005980 <HAL_TIM_PWM_Start>
}
 8001198:	bf00      	nop
 800119a:	bd80      	pop	{r7, pc}
 800119c:	200005b0 	.word	0x200005b0

080011a0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b082      	sub	sp, #8
 80011a4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 80011a6:	2300      	movs	r3, #0
 80011a8:	607b      	str	r3, [r7, #4]
 80011aa:	4b0c      	ldr	r3, [pc, #48]	@ (80011dc <MX_DMA_Init+0x3c>)
 80011ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011ae:	4a0b      	ldr	r2, [pc, #44]	@ (80011dc <MX_DMA_Init+0x3c>)
 80011b0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80011b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80011b6:	4b09      	ldr	r3, [pc, #36]	@ (80011dc <MX_DMA_Init+0x3c>)
 80011b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011ba:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80011be:	607b      	str	r3, [r7, #4]
 80011c0:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80011c2:	2200      	movs	r2, #0
 80011c4:	2100      	movs	r1, #0
 80011c6:	2038      	movs	r0, #56	@ 0x38
 80011c8:	f002 fc05 	bl	80039d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80011cc:	2038      	movs	r0, #56	@ 0x38
 80011ce:	f002 fc1e 	bl	8003a0e <HAL_NVIC_EnableIRQ>

}
 80011d2:	bf00      	nop
 80011d4:	3708      	adds	r7, #8
 80011d6:	46bd      	mov	sp, r7
 80011d8:	bd80      	pop	{r7, pc}
 80011da:	bf00      	nop
 80011dc:	40023800 	.word	0x40023800

080011e0 <draw_line_chart>:
int history_index = 0;
int current_index = 0;
int status = 0;
int current_position = DATA_POINTS_SIZE - 10; // Start showing the last 10 points

void draw_line_chart() {
 80011e0:	b590      	push	{r4, r7, lr}
 80011e2:	b095      	sub	sp, #84	@ 0x54
 80011e4:	af04      	add	r7, sp, #16
    // Clear the LCD
    lcd_Fill(0, 0, 240, 320, BLACK);
 80011e6:	2300      	movs	r3, #0
 80011e8:	9300      	str	r3, [sp, #0]
 80011ea:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80011ee:	22f0      	movs	r2, #240	@ 0xf0
 80011f0:	2100      	movs	r1, #0
 80011f2:	2000      	movs	r0, #0
 80011f4:	f000 fc60 	bl	8001ab8 <lcd_Fill>

    // Define chart area
    int chart_x0 = 30;   // x-origin of the chart
 80011f8:	231e      	movs	r3, #30
 80011fa:	633b      	str	r3, [r7, #48]	@ 0x30
    int chart_y0 = 270;  // y-origin of the chart
 80011fc:	f44f 7387 	mov.w	r3, #270	@ 0x10e
 8001200:	62fb      	str	r3, [r7, #44]	@ 0x2c
    int chart_width = 200;  // Width of the chart area
 8001202:	23c8      	movs	r3, #200	@ 0xc8
 8001204:	62bb      	str	r3, [r7, #40]	@ 0x28
    int chart_height = 200; // Height of the chart area
 8001206:	23c8      	movs	r3, #200	@ 0xc8
 8001208:	627b      	str	r3, [r7, #36]	@ 0x24

    // Draw the axes
    lcd_DrawLine(chart_x0, chart_y0, chart_x0, 0, WHITE);  // Y axis
 800120a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800120c:	b298      	uxth	r0, r3
 800120e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001210:	b299      	uxth	r1, r3
 8001212:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001214:	b29a      	uxth	r2, r3
 8001216:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800121a:	9300      	str	r3, [sp, #0]
 800121c:	2300      	movs	r3, #0
 800121e:	f000 fc98 	bl	8001b52 <lcd_DrawLine>
    lcd_DrawLine(chart_x0, chart_y0, chart_x0 + chart_width, chart_y0, WHITE); // X axis
 8001222:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001224:	b298      	uxth	r0, r3
 8001226:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001228:	b299      	uxth	r1, r3
 800122a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800122c:	b29a      	uxth	r2, r3
 800122e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001230:	b29b      	uxth	r3, r3
 8001232:	4413      	add	r3, r2
 8001234:	b29a      	uxth	r2, r3
 8001236:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001238:	b29b      	uxth	r3, r3
 800123a:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 800123e:	9400      	str	r4, [sp, #0]
 8001240:	f000 fc87 	bl	8001b52 <lcd_DrawLine>


    // Draw y-axis labels
    for (int i = 0; i <= 13; i++) {
 8001244:	2300      	movs	r3, #0
 8001246:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001248:	e042      	b.n	80012d0 <draw_line_chart+0xf0>
        int y = chart_y0 - i * (chart_height / 10);						// divide the axis into equally-sized pieces
 800124a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800124c:	4a6e      	ldr	r2, [pc, #440]	@ (8001408 <draw_line_chart+0x228>)
 800124e:	fb82 1203 	smull	r1, r2, r2, r3
 8001252:	1092      	asrs	r2, r2, #2
 8001254:	17db      	asrs	r3, r3, #31
 8001256:	1ad3      	subs	r3, r2, r3
 8001258:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800125a:	fb02 f303 	mul.w	r3, r2, r3
 800125e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001260:	1ad3      	subs	r3, r2, r3
 8001262:	60fb      	str	r3, [r7, #12]
        char label[4];
        sprintf(label, "%d", i * 20);
 8001264:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8001266:	4613      	mov	r3, r2
 8001268:	009b      	lsls	r3, r3, #2
 800126a:	4413      	add	r3, r2
 800126c:	009b      	lsls	r3, r3, #2
 800126e:	461a      	mov	r2, r3
 8001270:	f107 0308 	add.w	r3, r7, #8
 8001274:	4965      	ldr	r1, [pc, #404]	@ (800140c <draw_line_chart+0x22c>)
 8001276:	4618      	mov	r0, r3
 8001278:	f007 f8e0 	bl	800843c <siprintf>
        lcd_ShowStr(chart_x0 - 30, y - 10, label, WHITE, BLACK, 16, 0);
 800127c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800127e:	b29b      	uxth	r3, r3
 8001280:	3b1e      	subs	r3, #30
 8001282:	b298      	uxth	r0, r3
 8001284:	68fb      	ldr	r3, [r7, #12]
 8001286:	b29b      	uxth	r3, r3
 8001288:	3b0a      	subs	r3, #10
 800128a:	b299      	uxth	r1, r3
 800128c:	f107 0208 	add.w	r2, r7, #8
 8001290:	2300      	movs	r3, #0
 8001292:	9302      	str	r3, [sp, #8]
 8001294:	2310      	movs	r3, #16
 8001296:	9301      	str	r3, [sp, #4]
 8001298:	2300      	movs	r3, #0
 800129a:	9300      	str	r3, [sp, #0]
 800129c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80012a0:	f000 ff30 	bl	8002104 <lcd_ShowStr>
        lcd_ShowChar(chart_x0 - 5, y - 8, '-', WHITE, BLACK, 16, 1);
 80012a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80012a6:	b29b      	uxth	r3, r3
 80012a8:	3b05      	subs	r3, #5
 80012aa:	b298      	uxth	r0, r3
 80012ac:	68fb      	ldr	r3, [r7, #12]
 80012ae:	b29b      	uxth	r3, r3
 80012b0:	3b08      	subs	r3, #8
 80012b2:	b299      	uxth	r1, r3
 80012b4:	2301      	movs	r3, #1
 80012b6:	9302      	str	r3, [sp, #8]
 80012b8:	2310      	movs	r3, #16
 80012ba:	9301      	str	r3, [sp, #4]
 80012bc:	2300      	movs	r3, #0
 80012be:	9300      	str	r3, [sp, #0]
 80012c0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80012c4:	222d      	movs	r2, #45	@ 0x2d
 80012c6:	f000 fcc9 	bl	8001c5c <lcd_ShowChar>
    for (int i = 0; i <= 13; i++) {
 80012ca:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80012cc:	3301      	adds	r3, #1
 80012ce:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80012d0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80012d2:	2b0d      	cmp	r3, #13
 80012d4:	ddb9      	ble.n	800124a <draw_line_chart+0x6a>
    }

    // Draw x-axis labels
    for (int i = 0; i <= 10; i++) {
 80012d6:	2300      	movs	r3, #0
 80012d8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80012da:	e018      	b.n	800130e <draw_line_chart+0x12e>
        int x = chart_x0 + i * (chart_width / 10);
 80012dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80012de:	4a4a      	ldr	r2, [pc, #296]	@ (8001408 <draw_line_chart+0x228>)
 80012e0:	fb82 1203 	smull	r1, r2, r2, r3
 80012e4:	1092      	asrs	r2, r2, #2
 80012e6:	17db      	asrs	r3, r3, #31
 80012e8:	1ad3      	subs	r3, r2, r3
 80012ea:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80012ec:	fb02 f303 	mul.w	r3, r2, r3
 80012f0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80012f2:	4413      	add	r3, r2
 80012f4:	613b      	str	r3, [r7, #16]
        char label[3];
        sprintf(label, "%d", i + current_position);
 80012f6:	4b46      	ldr	r3, [pc, #280]	@ (8001410 <draw_line_chart+0x230>)
 80012f8:	681a      	ldr	r2, [r3, #0]
 80012fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80012fc:	441a      	add	r2, r3
 80012fe:	1d3b      	adds	r3, r7, #4
 8001300:	4942      	ldr	r1, [pc, #264]	@ (800140c <draw_line_chart+0x22c>)
 8001302:	4618      	mov	r0, r3
 8001304:	f007 f89a 	bl	800843c <siprintf>
    for (int i = 0; i <= 10; i++) {
 8001308:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800130a:	3301      	adds	r3, #1
 800130c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800130e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001310:	2b0a      	cmp	r3, #10
 8001312:	dde3      	ble.n	80012dc <draw_line_chart+0xfc>
        //lcd_ShowStr(x - 5, chart_y0 + 10, label, WHITE, BLACK, 16, 0); // số thứ tự
    }

    // Plot the data points within the current window
    for (int i = 0; i < 10; i++) {
 8001314:	2300      	movs	r3, #0
 8001316:	637b      	str	r3, [r7, #52]	@ 0x34
 8001318:	e06e      	b.n	80013f8 <draw_line_chart+0x218>
        int x1 = chart_x0 + i * (chart_width / 10);											// x-coordinate of 1st point
 800131a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800131c:	4a3a      	ldr	r2, [pc, #232]	@ (8001408 <draw_line_chart+0x228>)
 800131e:	fb82 1203 	smull	r1, r2, r2, r3
 8001322:	1092      	asrs	r2, r2, #2
 8001324:	17db      	asrs	r3, r3, #31
 8001326:	1ad3      	subs	r3, r2, r3
 8001328:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800132a:	fb02 f303 	mul.w	r3, r2, r3
 800132e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001330:	4413      	add	r3, r2
 8001332:	623b      	str	r3, [r7, #32]
        int y1 = chart_y0 - data_points[current_position + i] * (chart_height / 200);		// y-coordinate of 1st point
 8001334:	4b36      	ldr	r3, [pc, #216]	@ (8001410 <draw_line_chart+0x230>)
 8001336:	681a      	ldr	r2, [r3, #0]
 8001338:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800133a:	4413      	add	r3, r2
 800133c:	4a35      	ldr	r2, [pc, #212]	@ (8001414 <draw_line_chart+0x234>)
 800133e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001342:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001344:	4934      	ldr	r1, [pc, #208]	@ (8001418 <draw_line_chart+0x238>)
 8001346:	fb81 0103 	smull	r0, r1, r1, r3
 800134a:	1189      	asrs	r1, r1, #6
 800134c:	17db      	asrs	r3, r3, #31
 800134e:	1acb      	subs	r3, r1, r3
 8001350:	fb02 f303 	mul.w	r3, r2, r3
 8001354:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001356:	1ad3      	subs	r3, r2, r3
 8001358:	61fb      	str	r3, [r7, #28]
        int x2 = chart_x0 + (i + 1) * (chart_width / 10);									// x-coordinate of 2nd point
 800135a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800135c:	1c5a      	adds	r2, r3, #1
 800135e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001360:	4929      	ldr	r1, [pc, #164]	@ (8001408 <draw_line_chart+0x228>)
 8001362:	fb81 0103 	smull	r0, r1, r1, r3
 8001366:	1089      	asrs	r1, r1, #2
 8001368:	17db      	asrs	r3, r3, #31
 800136a:	1acb      	subs	r3, r1, r3
 800136c:	fb02 f303 	mul.w	r3, r2, r3
 8001370:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001372:	4413      	add	r3, r2
 8001374:	61bb      	str	r3, [r7, #24]
        int y2 = chart_y0 - data_points[current_position + i + 1] * (chart_height / 200);	// y-coordinate of 2nd point
 8001376:	4b26      	ldr	r3, [pc, #152]	@ (8001410 <draw_line_chart+0x230>)
 8001378:	681a      	ldr	r2, [r3, #0]
 800137a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800137c:	4413      	add	r3, r2
 800137e:	3301      	adds	r3, #1
 8001380:	4a24      	ldr	r2, [pc, #144]	@ (8001414 <draw_line_chart+0x234>)
 8001382:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001386:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001388:	4923      	ldr	r1, [pc, #140]	@ (8001418 <draw_line_chart+0x238>)
 800138a:	fb81 0103 	smull	r0, r1, r1, r3
 800138e:	1189      	asrs	r1, r1, #6
 8001390:	17db      	asrs	r3, r3, #31
 8001392:	1acb      	subs	r3, r1, r3
 8001394:	fb02 f303 	mul.w	r3, r2, r3
 8001398:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800139a:	1ad3      	subs	r3, r2, r3
 800139c:	617b      	str	r3, [r7, #20]
        lcd_DrawLine(x1, y1, x2, y2, WHITE);
 800139e:	6a3b      	ldr	r3, [r7, #32]
 80013a0:	b298      	uxth	r0, r3
 80013a2:	69fb      	ldr	r3, [r7, #28]
 80013a4:	b299      	uxth	r1, r3
 80013a6:	69bb      	ldr	r3, [r7, #24]
 80013a8:	b29a      	uxth	r2, r3
 80013aa:	697b      	ldr	r3, [r7, #20]
 80013ac:	b29b      	uxth	r3, r3
 80013ae:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 80013b2:	9400      	str	r4, [sp, #0]
 80013b4:	f000 fbcd 	bl	8001b52 <lcd_DrawLine>

        char value_label[4];
        sprintf(value_label, "%d", data_points[current_position + i]);
 80013b8:	4b15      	ldr	r3, [pc, #84]	@ (8001410 <draw_line_chart+0x230>)
 80013ba:	681a      	ldr	r2, [r3, #0]
 80013bc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80013be:	4413      	add	r3, r2
 80013c0:	4a14      	ldr	r2, [pc, #80]	@ (8001414 <draw_line_chart+0x234>)
 80013c2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80013c6:	463b      	mov	r3, r7
 80013c8:	4910      	ldr	r1, [pc, #64]	@ (800140c <draw_line_chart+0x22c>)
 80013ca:	4618      	mov	r0, r3
 80013cc:	f007 f836 	bl	800843c <siprintf>
        lcd_ShowStr(x1, y1 - 20, value_label, WHITE, BLACK, 16, 0);					// show value at each data
 80013d0:	6a3b      	ldr	r3, [r7, #32]
 80013d2:	b298      	uxth	r0, r3
 80013d4:	69fb      	ldr	r3, [r7, #28]
 80013d6:	b29b      	uxth	r3, r3
 80013d8:	3b14      	subs	r3, #20
 80013da:	b299      	uxth	r1, r3
 80013dc:	463a      	mov	r2, r7
 80013de:	2300      	movs	r3, #0
 80013e0:	9302      	str	r3, [sp, #8]
 80013e2:	2310      	movs	r3, #16
 80013e4:	9301      	str	r3, [sp, #4]
 80013e6:	2300      	movs	r3, #0
 80013e8:	9300      	str	r3, [sp, #0]
 80013ea:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80013ee:	f000 fe89 	bl	8002104 <lcd_ShowStr>
    for (int i = 0; i < 10; i++) {
 80013f2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80013f4:	3301      	adds	r3, #1
 80013f6:	637b      	str	r3, [r7, #52]	@ 0x34
 80013f8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80013fa:	2b09      	cmp	r3, #9
 80013fc:	dd8d      	ble.n	800131a <draw_line_chart+0x13a>
    sprintf(current_value_label, "%d", data_points[current_position + 10]);
    int x_current = chart_x0 + 10 * (chart_width / 10);
    int y_current = chart_y0 - data_points[current_position + 10] * (chart_height / 100);
    lcd_ShowStr(x_current - 10, y_current - 20, current_value_label, YELLOW, BLACK, 16, 0); // Use YELLOW to highlight the current position
*/
}
 80013fe:	bf00      	nop
 8001400:	bf00      	nop
 8001402:	3744      	adds	r7, #68	@ 0x44
 8001404:	46bd      	mov	sp, r7
 8001406:	bd90      	pop	{r4, r7, pc}
 8001408:	66666667 	.word	0x66666667
 800140c:	0800a6b0 	.word	0x0800a6b0
 8001410:	20000000 	.word	0x20000000
 8001414:	200002ac 	.word	0x200002ac
 8001418:	51eb851f 	.word	0x51eb851f

0800141c <LineChart>:
        data_points[i] = history[history_index][i];
    }
    draw_line_chart();
}

void LineChart() {
 800141c:	b580      	push	{r7, lr}
 800141e:	ed2d 8b02 	vpush	{d8}
 8001422:	b082      	sub	sp, #8
 8001424:	af00      	add	r7, sp, #0
//            draw_line_chart();
//        }
//    }

//    if (isRandomActive) {
        if (status == 0) {
 8001426:	4b22      	ldr	r3, [pc, #136]	@ (80014b0 <LineChart+0x94>)
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	2b00      	cmp	r3, #0
 800142c:	d129      	bne.n	8001482 <LineChart+0x66>
//            SaveHistory();
            for (int i = 0; i < DATA_POINTS_SIZE - 1; i++) {
 800142e:	2300      	movs	r3, #0
 8001430:	607b      	str	r3, [r7, #4]
 8001432:	e00b      	b.n	800144c <LineChart+0x30>
                data_points[i] = data_points[i + 1];
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	3301      	adds	r3, #1
 8001438:	4a1e      	ldr	r2, [pc, #120]	@ (80014b4 <LineChart+0x98>)
 800143a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800143e:	491d      	ldr	r1, [pc, #116]	@ (80014b4 <LineChart+0x98>)
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
            for (int i = 0; i < DATA_POINTS_SIZE - 1; i++) {
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	3301      	adds	r3, #1
 800144a:	607b      	str	r3, [r7, #4]
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	2b62      	cmp	r3, #98	@ 0x62
 8001450:	ddf0      	ble.n	8001434 <LineChart+0x18>
            }
            sensor_Read();
 8001452:	f001 f89b 	bl	800258c <sensor_Read>
            data_points[DATA_POINTS_SIZE - 1] = sensor_GetVoltage() * sensor_GetCurrent();
 8001456:	f001 f8a7 	bl	80025a8 <sensor_GetVoltage>
 800145a:	eeb0 8a40 	vmov.f32	s16, s0
 800145e:	f001 f8df 	bl	8002620 <sensor_GetCurrent>
 8001462:	eef0 7a40 	vmov.f32	s15, s0
 8001466:	ee68 7a27 	vmul.f32	s15, s16, s15
 800146a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800146e:	ee17 2a90 	vmov	r2, s15
 8001472:	4b10      	ldr	r3, [pc, #64]	@ (80014b4 <LineChart+0x98>)
 8001474:	f8c3 218c 	str.w	r2, [r3, #396]	@ 0x18c
            current_position = DATA_POINTS_SIZE - 10; // Reset to the latest data points
 8001478:	4b0f      	ldr	r3, [pc, #60]	@ (80014b8 <LineChart+0x9c>)
 800147a:	225a      	movs	r2, #90	@ 0x5a
 800147c:	601a      	str	r2, [r3, #0]

            draw_line_chart();
 800147e:	f7ff feaf 	bl	80011e0 <draw_line_chart>
        }
        status = (status + 1) % 300;
 8001482:	4b0b      	ldr	r3, [pc, #44]	@ (80014b0 <LineChart+0x94>)
 8001484:	681b      	ldr	r3, [r3, #0]
 8001486:	1c5a      	adds	r2, r3, #1
 8001488:	4b0c      	ldr	r3, [pc, #48]	@ (80014bc <LineChart+0xa0>)
 800148a:	fb83 1302 	smull	r1, r3, r3, r2
 800148e:	1159      	asrs	r1, r3, #5
 8001490:	17d3      	asrs	r3, r2, #31
 8001492:	1acb      	subs	r3, r1, r3
 8001494:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 8001498:	fb01 f303 	mul.w	r3, r1, r3
 800149c:	1ad3      	subs	r3, r2, r3
 800149e:	4a04      	ldr	r2, [pc, #16]	@ (80014b0 <LineChart+0x94>)
 80014a0:	6013      	str	r3, [r2, #0]
//    }
}
 80014a2:	bf00      	nop
 80014a4:	3708      	adds	r7, #8
 80014a6:	46bd      	mov	sp, r7
 80014a8:	ecbd 8b02 	vpop	{d8}
 80014ac:	bd80      	pop	{r7, pc}
 80014ae:	bf00      	nop
 80014b0:	2000043c 	.word	0x2000043c
 80014b4:	200002ac 	.word	0x200002ac
 80014b8:	20000000 	.word	0x20000000
 80014bc:	1b4e81b5 	.word	0x1b4e81b5

080014c0 <MX_FSMC_Init>:

SRAM_HandleTypeDef hsram1;

/* FSMC initialization function */
void MX_FSMC_Init(void)
{
 80014c0:	b580      	push	{r7, lr}
 80014c2:	b08e      	sub	sp, #56	@ 0x38
 80014c4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FSMC_Init 0 */

  /* USER CODE END FSMC_Init 0 */

  FSMC_NORSRAM_TimingTypeDef Timing = {0};
 80014c6:	f107 031c 	add.w	r3, r7, #28
 80014ca:	2200      	movs	r2, #0
 80014cc:	601a      	str	r2, [r3, #0]
 80014ce:	605a      	str	r2, [r3, #4]
 80014d0:	609a      	str	r2, [r3, #8]
 80014d2:	60da      	str	r2, [r3, #12]
 80014d4:	611a      	str	r2, [r3, #16]
 80014d6:	615a      	str	r2, [r3, #20]
 80014d8:	619a      	str	r2, [r3, #24]
  FSMC_NORSRAM_TimingTypeDef ExtTiming = {0};
 80014da:	463b      	mov	r3, r7
 80014dc:	2200      	movs	r2, #0
 80014de:	601a      	str	r2, [r3, #0]
 80014e0:	605a      	str	r2, [r3, #4]
 80014e2:	609a      	str	r2, [r3, #8]
 80014e4:	60da      	str	r2, [r3, #12]
 80014e6:	611a      	str	r2, [r3, #16]
 80014e8:	615a      	str	r2, [r3, #20]
 80014ea:	619a      	str	r2, [r3, #24]

  /* USER CODE END FSMC_Init 1 */

  /** Perform the SRAM1 memory initialization sequence
  */
  hsram1.Instance = FSMC_NORSRAM_DEVICE;
 80014ec:	4b2f      	ldr	r3, [pc, #188]	@ (80015ac <MX_FSMC_Init+0xec>)
 80014ee:	f04f 4220 	mov.w	r2, #2684354560	@ 0xa0000000
 80014f2:	601a      	str	r2, [r3, #0]
  hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 80014f4:	4b2d      	ldr	r3, [pc, #180]	@ (80015ac <MX_FSMC_Init+0xec>)
 80014f6:	4a2e      	ldr	r2, [pc, #184]	@ (80015b0 <MX_FSMC_Init+0xf0>)
 80014f8:	605a      	str	r2, [r3, #4]
  /* hsram1.Init */
  hsram1.Init.NSBank = FSMC_NORSRAM_BANK1;
 80014fa:	4b2c      	ldr	r3, [pc, #176]	@ (80015ac <MX_FSMC_Init+0xec>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	609a      	str	r2, [r3, #8]
  hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 8001500:	4b2a      	ldr	r3, [pc, #168]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001502:	2200      	movs	r2, #0
 8001504:	60da      	str	r2, [r3, #12]
  hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 8001506:	4b29      	ldr	r3, [pc, #164]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001508:	2200      	movs	r2, #0
 800150a:	611a      	str	r2, [r3, #16]
  hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 800150c:	4b27      	ldr	r3, [pc, #156]	@ (80015ac <MX_FSMC_Init+0xec>)
 800150e:	2210      	movs	r2, #16
 8001510:	615a      	str	r2, [r3, #20]
  hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 8001512:	4b26      	ldr	r3, [pc, #152]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001514:	2200      	movs	r2, #0
 8001516:	619a      	str	r2, [r3, #24]
  hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 8001518:	4b24      	ldr	r3, [pc, #144]	@ (80015ac <MX_FSMC_Init+0xec>)
 800151a:	2200      	movs	r2, #0
 800151c:	61da      	str	r2, [r3, #28]
  hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 800151e:	4b23      	ldr	r3, [pc, #140]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001520:	2200      	movs	r2, #0
 8001522:	621a      	str	r2, [r3, #32]
  hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 8001524:	4b21      	ldr	r3, [pc, #132]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001526:	2200      	movs	r2, #0
 8001528:	625a      	str	r2, [r3, #36]	@ 0x24
  hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 800152a:	4b20      	ldr	r3, [pc, #128]	@ (80015ac <MX_FSMC_Init+0xec>)
 800152c:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001530:	629a      	str	r2, [r3, #40]	@ 0x28
  hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 8001532:	4b1e      	ldr	r3, [pc, #120]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001534:	2200      	movs	r2, #0
 8001536:	62da      	str	r2, [r3, #44]	@ 0x2c
  hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_ENABLE;
 8001538:	4b1c      	ldr	r3, [pc, #112]	@ (80015ac <MX_FSMC_Init+0xec>)
 800153a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800153e:	631a      	str	r2, [r3, #48]	@ 0x30
  hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 8001540:	4b1a      	ldr	r3, [pc, #104]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001542:	2200      	movs	r2, #0
 8001544:	635a      	str	r2, [r3, #52]	@ 0x34
  hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 8001546:	4b19      	ldr	r3, [pc, #100]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001548:	2200      	movs	r2, #0
 800154a:	639a      	str	r2, [r3, #56]	@ 0x38
  hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 800154c:	4b17      	ldr	r3, [pc, #92]	@ (80015ac <MX_FSMC_Init+0xec>)
 800154e:	2200      	movs	r2, #0
 8001550:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Timing */
  Timing.AddressSetupTime = 0xf;
 8001552:	230f      	movs	r3, #15
 8001554:	61fb      	str	r3, [r7, #28]
  Timing.AddressHoldTime = 15;
 8001556:	230f      	movs	r3, #15
 8001558:	623b      	str	r3, [r7, #32]
  Timing.DataSetupTime = 60;
 800155a:	233c      	movs	r3, #60	@ 0x3c
 800155c:	627b      	str	r3, [r7, #36]	@ 0x24
  Timing.BusTurnAroundDuration = 0;
 800155e:	2300      	movs	r3, #0
 8001560:	62bb      	str	r3, [r7, #40]	@ 0x28
  Timing.CLKDivision = 16;
 8001562:	2310      	movs	r3, #16
 8001564:	62fb      	str	r3, [r7, #44]	@ 0x2c
  Timing.DataLatency = 17;
 8001566:	2311      	movs	r3, #17
 8001568:	633b      	str	r3, [r7, #48]	@ 0x30
  Timing.AccessMode = FSMC_ACCESS_MODE_A;
 800156a:	2300      	movs	r3, #0
 800156c:	637b      	str	r3, [r7, #52]	@ 0x34
  /* ExtTiming */
  ExtTiming.AddressSetupTime = 8;
 800156e:	2308      	movs	r3, #8
 8001570:	603b      	str	r3, [r7, #0]
  ExtTiming.AddressHoldTime = 15;
 8001572:	230f      	movs	r3, #15
 8001574:	607b      	str	r3, [r7, #4]
  ExtTiming.DataSetupTime = 9;
 8001576:	2309      	movs	r3, #9
 8001578:	60bb      	str	r3, [r7, #8]
  ExtTiming.BusTurnAroundDuration = 0;
 800157a:	2300      	movs	r3, #0
 800157c:	60fb      	str	r3, [r7, #12]
  ExtTiming.CLKDivision = 16;
 800157e:	2310      	movs	r3, #16
 8001580:	613b      	str	r3, [r7, #16]
  ExtTiming.DataLatency = 17;
 8001582:	2311      	movs	r3, #17
 8001584:	617b      	str	r3, [r7, #20]
  ExtTiming.AccessMode = FSMC_ACCESS_MODE_A;
 8001586:	2300      	movs	r3, #0
 8001588:	61bb      	str	r3, [r7, #24]

  if (HAL_SRAM_Init(&hsram1, &Timing, &ExtTiming) != HAL_OK)
 800158a:	463a      	mov	r2, r7
 800158c:	f107 031c 	add.w	r3, r7, #28
 8001590:	4619      	mov	r1, r3
 8001592:	4806      	ldr	r0, [pc, #24]	@ (80015ac <MX_FSMC_Init+0xec>)
 8001594:	f004 f892 	bl	80056bc <HAL_SRAM_Init>
 8001598:	4603      	mov	r3, r0
 800159a:	2b00      	cmp	r3, #0
 800159c:	d001      	beq.n	80015a2 <MX_FSMC_Init+0xe2>
  {
    Error_Handler( );
 800159e:	f000 ffe1 	bl	8002564 <Error_Handler>
  }

  /* USER CODE BEGIN FSMC_Init 2 */

  /* USER CODE END FSMC_Init 2 */
}
 80015a2:	bf00      	nop
 80015a4:	3738      	adds	r7, #56	@ 0x38
 80015a6:	46bd      	mov	sp, r7
 80015a8:	bd80      	pop	{r7, pc}
 80015aa:	bf00      	nop
 80015ac:	20000440 	.word	0x20000440
 80015b0:	a0000104 	.word	0xa0000104

080015b4 <HAL_FSMC_MspInit>:

static uint32_t FSMC_Initialized = 0;

static void HAL_FSMC_MspInit(void){
 80015b4:	b580      	push	{r7, lr}
 80015b6:	b086      	sub	sp, #24
 80015b8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FSMC_MspInit 0 */

  /* USER CODE END FSMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015ba:	1d3b      	adds	r3, r7, #4
 80015bc:	2200      	movs	r2, #0
 80015be:	601a      	str	r2, [r3, #0]
 80015c0:	605a      	str	r2, [r3, #4]
 80015c2:	609a      	str	r2, [r3, #8]
 80015c4:	60da      	str	r2, [r3, #12]
 80015c6:	611a      	str	r2, [r3, #16]
  if (FSMC_Initialized) {
 80015c8:	4b1c      	ldr	r3, [pc, #112]	@ (800163c <HAL_FSMC_MspInit+0x88>)
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	d131      	bne.n	8001634 <HAL_FSMC_MspInit+0x80>
    return;
  }
  FSMC_Initialized = 1;
 80015d0:	4b1a      	ldr	r3, [pc, #104]	@ (800163c <HAL_FSMC_MspInit+0x88>)
 80015d2:	2201      	movs	r2, #1
 80015d4:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FSMC_CLK_ENABLE();
 80015d6:	2300      	movs	r3, #0
 80015d8:	603b      	str	r3, [r7, #0]
 80015da:	4b19      	ldr	r3, [pc, #100]	@ (8001640 <HAL_FSMC_MspInit+0x8c>)
 80015dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80015de:	4a18      	ldr	r2, [pc, #96]	@ (8001640 <HAL_FSMC_MspInit+0x8c>)
 80015e0:	f043 0301 	orr.w	r3, r3, #1
 80015e4:	6393      	str	r3, [r2, #56]	@ 0x38
 80015e6:	4b16      	ldr	r3, [pc, #88]	@ (8001640 <HAL_FSMC_MspInit+0x8c>)
 80015e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80015ea:	f003 0301 	and.w	r3, r3, #1
 80015ee:	603b      	str	r3, [r7, #0]
 80015f0:	683b      	ldr	r3, [r7, #0]
  PD4   ------> FSMC_NOE
  PD5   ------> FSMC_NWE
  PD7   ------> FSMC_NE1
  */
  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9
 80015f2:	f64f 7388 	movw	r3, #65416	@ 0xff88
 80015f6:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13
                          |GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015f8:	2302      	movs	r3, #2
 80015fa:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015fc:	2300      	movs	r3, #0
 80015fe:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001600:	2303      	movs	r3, #3
 8001602:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8001604:	230c      	movs	r3, #12
 8001606:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001608:	1d3b      	adds	r3, r7, #4
 800160a:	4619      	mov	r1, r3
 800160c:	480d      	ldr	r0, [pc, #52]	@ (8001644 <HAL_FSMC_MspInit+0x90>)
 800160e:	f002 fe1b 	bl	8004248 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001612:	f24c 73b3 	movw	r3, #51123	@ 0xc7b3
 8001616:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4
                          |GPIO_PIN_5|GPIO_PIN_7;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001618:	2302      	movs	r3, #2
 800161a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800161c:	2300      	movs	r3, #0
 800161e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001620:	2303      	movs	r3, #3
 8001622:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8001624:	230c      	movs	r3, #12
 8001626:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001628:	1d3b      	adds	r3, r7, #4
 800162a:	4619      	mov	r1, r3
 800162c:	4806      	ldr	r0, [pc, #24]	@ (8001648 <HAL_FSMC_MspInit+0x94>)
 800162e:	f002 fe0b 	bl	8004248 <HAL_GPIO_Init>
 8001632:	e000      	b.n	8001636 <HAL_FSMC_MspInit+0x82>
    return;
 8001634:	bf00      	nop

  /* USER CODE BEGIN FSMC_MspInit 1 */

  /* USER CODE END FSMC_MspInit 1 */
}
 8001636:	3718      	adds	r7, #24
 8001638:	46bd      	mov	sp, r7
 800163a:	bd80      	pop	{r7, pc}
 800163c:	20000490 	.word	0x20000490
 8001640:	40023800 	.word	0x40023800
 8001644:	40021000 	.word	0x40021000
 8001648:	40020c00 	.word	0x40020c00

0800164c <HAL_SRAM_MspInit>:

void HAL_SRAM_MspInit(SRAM_HandleTypeDef* sramHandle){
 800164c:	b580      	push	{r7, lr}
 800164e:	b082      	sub	sp, #8
 8001650:	af00      	add	r7, sp, #0
 8001652:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SRAM_MspInit 0 */

  /* USER CODE END SRAM_MspInit 0 */
  HAL_FSMC_MspInit();
 8001654:	f7ff ffae 	bl	80015b4 <HAL_FSMC_MspInit>
  /* USER CODE BEGIN SRAM_MspInit 1 */

  /* USER CODE END SRAM_MspInit 1 */
}
 8001658:	bf00      	nop
 800165a:	3708      	adds	r7, #8
 800165c:	46bd      	mov	sp, r7
 800165e:	bd80      	pop	{r7, pc}

08001660 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001660:	b580      	push	{r7, lr}
 8001662:	b08e      	sub	sp, #56	@ 0x38
 8001664:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001666:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800166a:	2200      	movs	r2, #0
 800166c:	601a      	str	r2, [r3, #0]
 800166e:	605a      	str	r2, [r3, #4]
 8001670:	609a      	str	r2, [r3, #8]
 8001672:	60da      	str	r2, [r3, #12]
 8001674:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001676:	2300      	movs	r3, #0
 8001678:	623b      	str	r3, [r7, #32]
 800167a:	4b76      	ldr	r3, [pc, #472]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 800167c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800167e:	4a75      	ldr	r2, [pc, #468]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001680:	f043 0310 	orr.w	r3, r3, #16
 8001684:	6313      	str	r3, [r2, #48]	@ 0x30
 8001686:	4b73      	ldr	r3, [pc, #460]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001688:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800168a:	f003 0310 	and.w	r3, r3, #16
 800168e:	623b      	str	r3, [r7, #32]
 8001690:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001692:	2300      	movs	r3, #0
 8001694:	61fb      	str	r3, [r7, #28]
 8001696:	4b6f      	ldr	r3, [pc, #444]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001698:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800169a:	4a6e      	ldr	r2, [pc, #440]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 800169c:	f043 0304 	orr.w	r3, r3, #4
 80016a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80016a2:	4b6c      	ldr	r3, [pc, #432]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016a6:	f003 0304 	and.w	r3, r3, #4
 80016aa:	61fb      	str	r3, [r7, #28]
 80016ac:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80016ae:	2300      	movs	r3, #0
 80016b0:	61bb      	str	r3, [r7, #24]
 80016b2:	4b68      	ldr	r3, [pc, #416]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016b6:	4a67      	ldr	r2, [pc, #412]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016b8:	f043 0320 	orr.w	r3, r3, #32
 80016bc:	6313      	str	r3, [r2, #48]	@ 0x30
 80016be:	4b65      	ldr	r3, [pc, #404]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016c2:	f003 0320 	and.w	r3, r3, #32
 80016c6:	61bb      	str	r3, [r7, #24]
 80016c8:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80016ca:	2300      	movs	r3, #0
 80016cc:	617b      	str	r3, [r7, #20]
 80016ce:	4b61      	ldr	r3, [pc, #388]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016d2:	4a60      	ldr	r2, [pc, #384]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016d4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80016d8:	6313      	str	r3, [r2, #48]	@ 0x30
 80016da:	4b5e      	ldr	r3, [pc, #376]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016de:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80016e2:	617b      	str	r3, [r7, #20]
 80016e4:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016e6:	2300      	movs	r3, #0
 80016e8:	613b      	str	r3, [r7, #16]
 80016ea:	4b5a      	ldr	r3, [pc, #360]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ee:	4a59      	ldr	r2, [pc, #356]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016f0:	f043 0301 	orr.w	r3, r3, #1
 80016f4:	6313      	str	r3, [r2, #48]	@ 0x30
 80016f6:	4b57      	ldr	r3, [pc, #348]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 80016f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016fa:	f003 0301 	and.w	r3, r3, #1
 80016fe:	613b      	str	r3, [r7, #16]
 8001700:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001702:	2300      	movs	r3, #0
 8001704:	60fb      	str	r3, [r7, #12]
 8001706:	4b53      	ldr	r3, [pc, #332]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001708:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800170a:	4a52      	ldr	r2, [pc, #328]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 800170c:	f043 0302 	orr.w	r3, r3, #2
 8001710:	6313      	str	r3, [r2, #48]	@ 0x30
 8001712:	4b50      	ldr	r3, [pc, #320]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001714:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001716:	f003 0302 	and.w	r3, r3, #2
 800171a:	60fb      	str	r3, [r7, #12]
 800171c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800171e:	2300      	movs	r3, #0
 8001720:	60bb      	str	r3, [r7, #8]
 8001722:	4b4c      	ldr	r3, [pc, #304]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001724:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001726:	4a4b      	ldr	r2, [pc, #300]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001728:	f043 0308 	orr.w	r3, r3, #8
 800172c:	6313      	str	r3, [r2, #48]	@ 0x30
 800172e:	4b49      	ldr	r3, [pc, #292]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001730:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001732:	f003 0308 	and.w	r3, r3, #8
 8001736:	60bb      	str	r3, [r7, #8]
 8001738:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800173a:	2300      	movs	r3, #0
 800173c:	607b      	str	r3, [r7, #4]
 800173e:	4b45      	ldr	r3, [pc, #276]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001740:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001742:	4a44      	ldr	r2, [pc, #272]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 8001744:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001748:	6313      	str	r3, [r2, #48]	@ 0x30
 800174a:	4b42      	ldr	r3, [pc, #264]	@ (8001854 <MX_GPIO_Init+0x1f4>)
 800174c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800174e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001752:	607b      	str	r3, [r7, #4]
 8001754:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, DEBUG_LED_Pin|OUTPUT_Y0_Pin|OUTPUT_Y1_Pin, GPIO_PIN_RESET);
 8001756:	2200      	movs	r2, #0
 8001758:	2170      	movs	r1, #112	@ 0x70
 800175a:	483f      	ldr	r0, [pc, #252]	@ (8001858 <MX_GPIO_Init+0x1f8>)
 800175c:	f002 ff10 	bl	8004580 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(FSMC_RES_GPIO_Port, FSMC_RES_Pin, GPIO_PIN_RESET);
 8001760:	2200      	movs	r2, #0
 8001762:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001766:	483d      	ldr	r0, [pc, #244]	@ (800185c <MX_GPIO_Init+0x1fc>)
 8001768:	f002 ff0a 	bl	8004580 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD_LATCH_GPIO_Port, LD_LATCH_Pin, GPIO_PIN_RESET);
 800176c:	2200      	movs	r2, #0
 800176e:	2140      	movs	r1, #64	@ 0x40
 8001770:	483b      	ldr	r0, [pc, #236]	@ (8001860 <MX_GPIO_Init+0x200>)
 8001772:	f002 ff05 	bl	8004580 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(FSMC_BLK_GPIO_Port, FSMC_BLK_Pin, GPIO_PIN_RESET);
 8001776:	2200      	movs	r2, #0
 8001778:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800177c:	4839      	ldr	r0, [pc, #228]	@ (8001864 <MX_GPIO_Init+0x204>)
 800177e:	f002 feff 	bl	8004580 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(BTN_LOAD_GPIO_Port, BTN_LOAD_Pin, GPIO_PIN_RESET);
 8001782:	2200      	movs	r2, #0
 8001784:	2108      	movs	r1, #8
 8001786:	4838      	ldr	r0, [pc, #224]	@ (8001868 <MX_GPIO_Init+0x208>)
 8001788:	f002 fefa 	bl	8004580 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PEPin PEPin PEPin */
  GPIO_InitStruct.Pin = DEBUG_LED_Pin|OUTPUT_Y0_Pin|OUTPUT_Y1_Pin;
 800178c:	2370      	movs	r3, #112	@ 0x70
 800178e:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001790:	2301      	movs	r3, #1
 8001792:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001794:	2300      	movs	r3, #0
 8001796:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001798:	2300      	movs	r3, #0
 800179a:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800179c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80017a0:	4619      	mov	r1, r3
 80017a2:	482d      	ldr	r0, [pc, #180]	@ (8001858 <MX_GPIO_Init+0x1f8>)
 80017a4:	f002 fd50 	bl	8004248 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = FSMC_RES_Pin;
 80017a8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80017ac:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017ae:	2301      	movs	r3, #1
 80017b0:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017b2:	2300      	movs	r3, #0
 80017b4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017b6:	2300      	movs	r3, #0
 80017b8:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(FSMC_RES_GPIO_Port, &GPIO_InitStruct);
 80017ba:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80017be:	4619      	mov	r1, r3
 80017c0:	4826      	ldr	r0, [pc, #152]	@ (800185c <MX_GPIO_Init+0x1fc>)
 80017c2:	f002 fd41 	bl	8004248 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin */
  GPIO_InitStruct.Pin = INPUT_X0_Pin|INPUT_X1_Pin;
 80017c6:	23c0      	movs	r3, #192	@ 0xc0
 80017c8:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80017ca:	2300      	movs	r3, #0
 80017cc:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ce:	2300      	movs	r3, #0
 80017d0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017d2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80017d6:	4619      	mov	r1, r3
 80017d8:	4822      	ldr	r0, [pc, #136]	@ (8001864 <MX_GPIO_Init+0x204>)
 80017da:	f002 fd35 	bl	8004248 <HAL_GPIO_Init>

  /*Configure GPIO pins : PCPin PCPin */
  GPIO_InitStruct.Pin = INPUT_X2_Pin|INPUT_X3_Pin;
 80017de:	2330      	movs	r3, #48	@ 0x30
 80017e0:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80017e2:	2300      	movs	r3, #0
 80017e4:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017e6:	2300      	movs	r3, #0
 80017e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017ea:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80017ee:	4619      	mov	r1, r3
 80017f0:	481a      	ldr	r0, [pc, #104]	@ (800185c <MX_GPIO_Init+0x1fc>)
 80017f2:	f002 fd29 	bl	8004248 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LD_LATCH_Pin;
 80017f6:	2340      	movs	r3, #64	@ 0x40
 80017f8:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017fa:	2301      	movs	r3, #1
 80017fc:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017fe:	2300      	movs	r3, #0
 8001800:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001802:	2300      	movs	r3, #0
 8001804:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(LD_LATCH_GPIO_Port, &GPIO_InitStruct);
 8001806:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800180a:	4619      	mov	r1, r3
 800180c:	4814      	ldr	r0, [pc, #80]	@ (8001860 <MX_GPIO_Init+0x200>)
 800180e:	f002 fd1b 	bl	8004248 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = FSMC_BLK_Pin;
 8001812:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001816:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001818:	2301      	movs	r3, #1
 800181a:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800181c:	2300      	movs	r3, #0
 800181e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001820:	2300      	movs	r3, #0
 8001822:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(FSMC_BLK_GPIO_Port, &GPIO_InitStruct);
 8001824:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001828:	4619      	mov	r1, r3
 800182a:	480e      	ldr	r0, [pc, #56]	@ (8001864 <MX_GPIO_Init+0x204>)
 800182c:	f002 fd0c 	bl	8004248 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = BTN_LOAD_Pin;
 8001830:	2308      	movs	r3, #8
 8001832:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001834:	2301      	movs	r3, #1
 8001836:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001838:	2300      	movs	r3, #0
 800183a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800183c:	2300      	movs	r3, #0
 800183e:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(BTN_LOAD_GPIO_Port, &GPIO_InitStruct);
 8001840:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001844:	4619      	mov	r1, r3
 8001846:	4808      	ldr	r0, [pc, #32]	@ (8001868 <MX_GPIO_Init+0x208>)
 8001848:	f002 fcfe 	bl	8004248 <HAL_GPIO_Init>

}
 800184c:	bf00      	nop
 800184e:	3738      	adds	r7, #56	@ 0x38
 8001850:	46bd      	mov	sp, r7
 8001852:	bd80      	pop	{r7, pc}
 8001854:	40023800 	.word	0x40023800
 8001858:	40021000 	.word	0x40021000
 800185c:	40020800 	.word	0x40020800
 8001860:	40021800 	.word	0x40021800
 8001864:	40020000 	.word	0x40020000
 8001868:	40020c00 	.word	0x40020c00

0800186c <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 800186c:	b580      	push	{r7, lr}
 800186e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001870:	4b12      	ldr	r3, [pc, #72]	@ (80018bc <MX_I2C1_Init+0x50>)
 8001872:	4a13      	ldr	r2, [pc, #76]	@ (80018c0 <MX_I2C1_Init+0x54>)
 8001874:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8001876:	4b11      	ldr	r3, [pc, #68]	@ (80018bc <MX_I2C1_Init+0x50>)
 8001878:	4a12      	ldr	r2, [pc, #72]	@ (80018c4 <MX_I2C1_Init+0x58>)
 800187a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800187c:	4b0f      	ldr	r3, [pc, #60]	@ (80018bc <MX_I2C1_Init+0x50>)
 800187e:	2200      	movs	r2, #0
 8001880:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001882:	4b0e      	ldr	r3, [pc, #56]	@ (80018bc <MX_I2C1_Init+0x50>)
 8001884:	2200      	movs	r2, #0
 8001886:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001888:	4b0c      	ldr	r3, [pc, #48]	@ (80018bc <MX_I2C1_Init+0x50>)
 800188a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800188e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001890:	4b0a      	ldr	r3, [pc, #40]	@ (80018bc <MX_I2C1_Init+0x50>)
 8001892:	2200      	movs	r2, #0
 8001894:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001896:	4b09      	ldr	r3, [pc, #36]	@ (80018bc <MX_I2C1_Init+0x50>)
 8001898:	2200      	movs	r2, #0
 800189a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800189c:	4b07      	ldr	r3, [pc, #28]	@ (80018bc <MX_I2C1_Init+0x50>)
 800189e:	2200      	movs	r2, #0
 80018a0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018a2:	4b06      	ldr	r3, [pc, #24]	@ (80018bc <MX_I2C1_Init+0x50>)
 80018a4:	2200      	movs	r2, #0
 80018a6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80018a8:	4804      	ldr	r0, [pc, #16]	@ (80018bc <MX_I2C1_Init+0x50>)
 80018aa:	f002 fe83 	bl	80045b4 <HAL_I2C_Init>
 80018ae:	4603      	mov	r3, r0
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d001      	beq.n	80018b8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80018b4:	f000 fe56 	bl	8002564 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80018b8:	bf00      	nop
 80018ba:	bd80      	pop	{r7, pc}
 80018bc:	20000494 	.word	0x20000494
 80018c0:	40005400 	.word	0x40005400
 80018c4:	000186a0 	.word	0x000186a0

080018c8 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 80018c8:	b580      	push	{r7, lr}
 80018ca:	b08a      	sub	sp, #40	@ 0x28
 80018cc:	af00      	add	r7, sp, #0
 80018ce:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018d0:	f107 0314 	add.w	r3, r7, #20
 80018d4:	2200      	movs	r2, #0
 80018d6:	601a      	str	r2, [r3, #0]
 80018d8:	605a      	str	r2, [r3, #4]
 80018da:	609a      	str	r2, [r3, #8]
 80018dc:	60da      	str	r2, [r3, #12]
 80018de:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a19      	ldr	r2, [pc, #100]	@ (800194c <HAL_I2C_MspInit+0x84>)
 80018e6:	4293      	cmp	r3, r2
 80018e8:	d12b      	bne.n	8001942 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80018ea:	2300      	movs	r3, #0
 80018ec:	613b      	str	r3, [r7, #16]
 80018ee:	4b18      	ldr	r3, [pc, #96]	@ (8001950 <HAL_I2C_MspInit+0x88>)
 80018f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018f2:	4a17      	ldr	r2, [pc, #92]	@ (8001950 <HAL_I2C_MspInit+0x88>)
 80018f4:	f043 0302 	orr.w	r3, r3, #2
 80018f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80018fa:	4b15      	ldr	r3, [pc, #84]	@ (8001950 <HAL_I2C_MspInit+0x88>)
 80018fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018fe:	f003 0302 	and.w	r3, r3, #2
 8001902:	613b      	str	r3, [r7, #16]
 8001904:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001906:	23c0      	movs	r3, #192	@ 0xc0
 8001908:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800190a:	2312      	movs	r3, #18
 800190c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800190e:	2300      	movs	r3, #0
 8001910:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001912:	2303      	movs	r3, #3
 8001914:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001916:	2304      	movs	r3, #4
 8001918:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800191a:	f107 0314 	add.w	r3, r7, #20
 800191e:	4619      	mov	r1, r3
 8001920:	480c      	ldr	r0, [pc, #48]	@ (8001954 <HAL_I2C_MspInit+0x8c>)
 8001922:	f002 fc91 	bl	8004248 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001926:	2300      	movs	r3, #0
 8001928:	60fb      	str	r3, [r7, #12]
 800192a:	4b09      	ldr	r3, [pc, #36]	@ (8001950 <HAL_I2C_MspInit+0x88>)
 800192c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800192e:	4a08      	ldr	r2, [pc, #32]	@ (8001950 <HAL_I2C_MspInit+0x88>)
 8001930:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001934:	6413      	str	r3, [r2, #64]	@ 0x40
 8001936:	4b06      	ldr	r3, [pc, #24]	@ (8001950 <HAL_I2C_MspInit+0x88>)
 8001938:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800193a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800193e:	60fb      	str	r3, [r7, #12]
 8001940:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8001942:	bf00      	nop
 8001944:	3728      	adds	r7, #40	@ 0x28
 8001946:	46bd      	mov	sp, r7
 8001948:	bd80      	pop	{r7, pc}
 800194a:	bf00      	nop
 800194c:	40005400 	.word	0x40005400
 8001950:	40023800 	.word	0x40023800
 8001954:	40020400 	.word	0x40020400

08001958 <LCD_WR_REG>:
unsigned char s[50];

_lcd_dev lcddev;

void LCD_WR_REG(uint16_t reg)
{
 8001958:	b480      	push	{r7}
 800195a:	b083      	sub	sp, #12
 800195c:	af00      	add	r7, sp, #0
 800195e:	4603      	mov	r3, r0
 8001960:	80fb      	strh	r3, [r7, #6]
	LCD->LCD_REG=reg;
 8001962:	4a04      	ldr	r2, [pc, #16]	@ (8001974 <LCD_WR_REG+0x1c>)
 8001964:	88fb      	ldrh	r3, [r7, #6]
 8001966:	8013      	strh	r3, [r2, #0]
}
 8001968:	bf00      	nop
 800196a:	370c      	adds	r7, #12
 800196c:	46bd      	mov	sp, r7
 800196e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001972:	4770      	bx	lr
 8001974:	600ffffe 	.word	0x600ffffe

08001978 <LCD_WR_DATA>:

void LCD_WR_DATA(uint16_t data)
{
 8001978:	b480      	push	{r7}
 800197a:	b083      	sub	sp, #12
 800197c:	af00      	add	r7, sp, #0
 800197e:	4603      	mov	r3, r0
 8001980:	80fb      	strh	r3, [r7, #6]
	LCD->LCD_RAM=data;
 8001982:	4a04      	ldr	r2, [pc, #16]	@ (8001994 <LCD_WR_DATA+0x1c>)
 8001984:	88fb      	ldrh	r3, [r7, #6]
 8001986:	8053      	strh	r3, [r2, #2]
}
 8001988:	bf00      	nop
 800198a:	370c      	adds	r7, #12
 800198c:	46bd      	mov	sp, r7
 800198e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001992:	4770      	bx	lr
 8001994:	600ffffe 	.word	0x600ffffe

08001998 <LCD_RD_DATA>:

uint16_t LCD_RD_DATA(void)
{
 8001998:	b480      	push	{r7}
 800199a:	b083      	sub	sp, #12
 800199c:	af00      	add	r7, sp, #0
	__IO uint16_t ram;
	ram=LCD->LCD_RAM;
 800199e:	4b06      	ldr	r3, [pc, #24]	@ (80019b8 <LCD_RD_DATA+0x20>)
 80019a0:	885b      	ldrh	r3, [r3, #2]
 80019a2:	b29b      	uxth	r3, r3
 80019a4:	80fb      	strh	r3, [r7, #6]
	return ram;
 80019a6:	88fb      	ldrh	r3, [r7, #6]
 80019a8:	b29b      	uxth	r3, r3
}
 80019aa:	4618      	mov	r0, r3
 80019ac:	370c      	adds	r7, #12
 80019ae:	46bd      	mov	sp, r7
 80019b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b4:	4770      	bx	lr
 80019b6:	bf00      	nop
 80019b8:	600ffffe 	.word	0x600ffffe

080019bc <lcd_AddressSet>:


void lcd_AddressSet(uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2)
{
 80019bc:	b590      	push	{r4, r7, lr}
 80019be:	b083      	sub	sp, #12
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	4604      	mov	r4, r0
 80019c4:	4608      	mov	r0, r1
 80019c6:	4611      	mov	r1, r2
 80019c8:	461a      	mov	r2, r3
 80019ca:	4623      	mov	r3, r4
 80019cc:	80fb      	strh	r3, [r7, #6]
 80019ce:	4603      	mov	r3, r0
 80019d0:	80bb      	strh	r3, [r7, #4]
 80019d2:	460b      	mov	r3, r1
 80019d4:	807b      	strh	r3, [r7, #2]
 80019d6:	4613      	mov	r3, r2
 80019d8:	803b      	strh	r3, [r7, #0]
		LCD_WR_REG(0x2a);
 80019da:	202a      	movs	r0, #42	@ 0x2a
 80019dc:	f7ff ffbc 	bl	8001958 <LCD_WR_REG>
		LCD_WR_DATA(x1>>8);
 80019e0:	88fb      	ldrh	r3, [r7, #6]
 80019e2:	0a1b      	lsrs	r3, r3, #8
 80019e4:	b29b      	uxth	r3, r3
 80019e6:	4618      	mov	r0, r3
 80019e8:	f7ff ffc6 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_DATA(x1&0xff);
 80019ec:	88fb      	ldrh	r3, [r7, #6]
 80019ee:	b2db      	uxtb	r3, r3
 80019f0:	b29b      	uxth	r3, r3
 80019f2:	4618      	mov	r0, r3
 80019f4:	f7ff ffc0 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_DATA(x2>>8);
 80019f8:	887b      	ldrh	r3, [r7, #2]
 80019fa:	0a1b      	lsrs	r3, r3, #8
 80019fc:	b29b      	uxth	r3, r3
 80019fe:	4618      	mov	r0, r3
 8001a00:	f7ff ffba 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_DATA(x2&0xff);
 8001a04:	887b      	ldrh	r3, [r7, #2]
 8001a06:	b2db      	uxtb	r3, r3
 8001a08:	b29b      	uxth	r3, r3
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	f7ff ffb4 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_REG(0x2b);
 8001a10:	202b      	movs	r0, #43	@ 0x2b
 8001a12:	f7ff ffa1 	bl	8001958 <LCD_WR_REG>
		LCD_WR_DATA(y1>>8);
 8001a16:	88bb      	ldrh	r3, [r7, #4]
 8001a18:	0a1b      	lsrs	r3, r3, #8
 8001a1a:	b29b      	uxth	r3, r3
 8001a1c:	4618      	mov	r0, r3
 8001a1e:	f7ff ffab 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_DATA(y1&0xff);
 8001a22:	88bb      	ldrh	r3, [r7, #4]
 8001a24:	b2db      	uxtb	r3, r3
 8001a26:	b29b      	uxth	r3, r3
 8001a28:	4618      	mov	r0, r3
 8001a2a:	f7ff ffa5 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_DATA(y2>>8);
 8001a2e:	883b      	ldrh	r3, [r7, #0]
 8001a30:	0a1b      	lsrs	r3, r3, #8
 8001a32:	b29b      	uxth	r3, r3
 8001a34:	4618      	mov	r0, r3
 8001a36:	f7ff ff9f 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_DATA(y2&0xff);
 8001a3a:	883b      	ldrh	r3, [r7, #0]
 8001a3c:	b2db      	uxtb	r3, r3
 8001a3e:	b29b      	uxth	r3, r3
 8001a40:	4618      	mov	r0, r3
 8001a42:	f7ff ff99 	bl	8001978 <LCD_WR_DATA>
		LCD_WR_REG(0x2c);
 8001a46:	202c      	movs	r0, #44	@ 0x2c
 8001a48:	f7ff ff86 	bl	8001958 <LCD_WR_REG>
}
 8001a4c:	bf00      	nop
 8001a4e:	370c      	adds	r7, #12
 8001a50:	46bd      	mov	sp, r7
 8001a52:	bd90      	pop	{r4, r7, pc}

08001a54 <lcd_Clear>:
  * @brief  Fill all pixels with a color
  * @param  color Color to fill the screen
  * @retval None
  */
void lcd_Clear(uint16_t color) //
{
 8001a54:	b580      	push	{r7, lr}
 8001a56:	b084      	sub	sp, #16
 8001a58:	af00      	add	r7, sp, #0
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	80fb      	strh	r3, [r7, #6]
	uint16_t i,j;
	lcd_AddressSet(0,0,lcddev.width-1,lcddev.height-1);
 8001a5e:	4b15      	ldr	r3, [pc, #84]	@ (8001ab4 <lcd_Clear+0x60>)
 8001a60:	881b      	ldrh	r3, [r3, #0]
 8001a62:	3b01      	subs	r3, #1
 8001a64:	b29a      	uxth	r2, r3
 8001a66:	4b13      	ldr	r3, [pc, #76]	@ (8001ab4 <lcd_Clear+0x60>)
 8001a68:	885b      	ldrh	r3, [r3, #2]
 8001a6a:	3b01      	subs	r3, #1
 8001a6c:	b29b      	uxth	r3, r3
 8001a6e:	2100      	movs	r1, #0
 8001a70:	2000      	movs	r0, #0
 8001a72:	f7ff ffa3 	bl	80019bc <lcd_AddressSet>
	for(i=0;i<lcddev.width;i++)
 8001a76:	2300      	movs	r3, #0
 8001a78:	81fb      	strh	r3, [r7, #14]
 8001a7a:	e011      	b.n	8001aa0 <lcd_Clear+0x4c>
	{
		for(j=0;j<lcddev.height;j++)
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	81bb      	strh	r3, [r7, #12]
 8001a80:	e006      	b.n	8001a90 <lcd_Clear+0x3c>
		{
			LCD_WR_DATA(color);
 8001a82:	88fb      	ldrh	r3, [r7, #6]
 8001a84:	4618      	mov	r0, r3
 8001a86:	f7ff ff77 	bl	8001978 <LCD_WR_DATA>
		for(j=0;j<lcddev.height;j++)
 8001a8a:	89bb      	ldrh	r3, [r7, #12]
 8001a8c:	3301      	adds	r3, #1
 8001a8e:	81bb      	strh	r3, [r7, #12]
 8001a90:	4b08      	ldr	r3, [pc, #32]	@ (8001ab4 <lcd_Clear+0x60>)
 8001a92:	885b      	ldrh	r3, [r3, #2]
 8001a94:	89ba      	ldrh	r2, [r7, #12]
 8001a96:	429a      	cmp	r2, r3
 8001a98:	d3f3      	bcc.n	8001a82 <lcd_Clear+0x2e>
	for(i=0;i<lcddev.width;i++)
 8001a9a:	89fb      	ldrh	r3, [r7, #14]
 8001a9c:	3301      	adds	r3, #1
 8001a9e:	81fb      	strh	r3, [r7, #14]
 8001aa0:	4b04      	ldr	r3, [pc, #16]	@ (8001ab4 <lcd_Clear+0x60>)
 8001aa2:	881b      	ldrh	r3, [r3, #0]
 8001aa4:	89fa      	ldrh	r2, [r7, #14]
 8001aa6:	429a      	cmp	r2, r3
 8001aa8:	d3e8      	bcc.n	8001a7c <lcd_Clear+0x28>
		}
	}
}
 8001aaa:	bf00      	nop
 8001aac:	bf00      	nop
 8001aae:	3710      	adds	r7, #16
 8001ab0:	46bd      	mov	sp, r7
 8001ab2:	bd80      	pop	{r7, pc}
 8001ab4:	200004e8 	.word	0x200004e8

08001ab8 <lcd_Fill>:
  * @param  yend	End row
  * @param  color Color to fill
  * @retval None
  */
void lcd_Fill(uint16_t xsta,uint16_t ysta,uint16_t xend,uint16_t yend,uint16_t color) //add a hcn = 1 mau car been trogn
{
 8001ab8:	b590      	push	{r4, r7, lr}
 8001aba:	b085      	sub	sp, #20
 8001abc:	af00      	add	r7, sp, #0
 8001abe:	4604      	mov	r4, r0
 8001ac0:	4608      	mov	r0, r1
 8001ac2:	4611      	mov	r1, r2
 8001ac4:	461a      	mov	r2, r3
 8001ac6:	4623      	mov	r3, r4
 8001ac8:	80fb      	strh	r3, [r7, #6]
 8001aca:	4603      	mov	r3, r0
 8001acc:	80bb      	strh	r3, [r7, #4]
 8001ace:	460b      	mov	r3, r1
 8001ad0:	807b      	strh	r3, [r7, #2]
 8001ad2:	4613      	mov	r3, r2
 8001ad4:	803b      	strh	r3, [r7, #0]
	uint16_t i,j;
	lcd_AddressSet(xsta,ysta,xend-1,yend-1);
 8001ad6:	887b      	ldrh	r3, [r7, #2]
 8001ad8:	3b01      	subs	r3, #1
 8001ada:	b29a      	uxth	r2, r3
 8001adc:	883b      	ldrh	r3, [r7, #0]
 8001ade:	3b01      	subs	r3, #1
 8001ae0:	b29b      	uxth	r3, r3
 8001ae2:	88b9      	ldrh	r1, [r7, #4]
 8001ae4:	88f8      	ldrh	r0, [r7, #6]
 8001ae6:	f7ff ff69 	bl	80019bc <lcd_AddressSet>
	for(i=ysta;i<yend;i++)
 8001aea:	88bb      	ldrh	r3, [r7, #4]
 8001aec:	81fb      	strh	r3, [r7, #14]
 8001aee:	e010      	b.n	8001b12 <lcd_Fill+0x5a>
	{
		for(j=xsta;j<xend;j++)
 8001af0:	88fb      	ldrh	r3, [r7, #6]
 8001af2:	81bb      	strh	r3, [r7, #12]
 8001af4:	e006      	b.n	8001b04 <lcd_Fill+0x4c>
		{
			LCD_WR_DATA(color);
 8001af6:	8c3b      	ldrh	r3, [r7, #32]
 8001af8:	4618      	mov	r0, r3
 8001afa:	f7ff ff3d 	bl	8001978 <LCD_WR_DATA>
		for(j=xsta;j<xend;j++)
 8001afe:	89bb      	ldrh	r3, [r7, #12]
 8001b00:	3301      	adds	r3, #1
 8001b02:	81bb      	strh	r3, [r7, #12]
 8001b04:	89ba      	ldrh	r2, [r7, #12]
 8001b06:	887b      	ldrh	r3, [r7, #2]
 8001b08:	429a      	cmp	r2, r3
 8001b0a:	d3f4      	bcc.n	8001af6 <lcd_Fill+0x3e>
	for(i=ysta;i<yend;i++)
 8001b0c:	89fb      	ldrh	r3, [r7, #14]
 8001b0e:	3301      	adds	r3, #1
 8001b10:	81fb      	strh	r3, [r7, #14]
 8001b12:	89fa      	ldrh	r2, [r7, #14]
 8001b14:	883b      	ldrh	r3, [r7, #0]
 8001b16:	429a      	cmp	r2, r3
 8001b18:	d3ea      	bcc.n	8001af0 <lcd_Fill+0x38>
		}
	}
}
 8001b1a:	bf00      	nop
 8001b1c:	bf00      	nop
 8001b1e:	3714      	adds	r7, #20
 8001b20:	46bd      	mov	sp, r7
 8001b22:	bd90      	pop	{r4, r7, pc}

08001b24 <lcd_DrawPoint>:
  * @param  y Y coordinate
  * @param  color Color to fill
  * @retval None
  */
void lcd_DrawPoint(uint16_t x,uint16_t y,uint16_t color) // 1 ddieemr anhr
{
 8001b24:	b580      	push	{r7, lr}
 8001b26:	b082      	sub	sp, #8
 8001b28:	af00      	add	r7, sp, #0
 8001b2a:	4603      	mov	r3, r0
 8001b2c:	80fb      	strh	r3, [r7, #6]
 8001b2e:	460b      	mov	r3, r1
 8001b30:	80bb      	strh	r3, [r7, #4]
 8001b32:	4613      	mov	r3, r2
 8001b34:	807b      	strh	r3, [r7, #2]
	lcd_AddressSet(x,y,x,y);//ÉèÖÃ¹â±êÎ»ÖÃ
 8001b36:	88bb      	ldrh	r3, [r7, #4]
 8001b38:	88fa      	ldrh	r2, [r7, #6]
 8001b3a:	88b9      	ldrh	r1, [r7, #4]
 8001b3c:	88f8      	ldrh	r0, [r7, #6]
 8001b3e:	f7ff ff3d 	bl	80019bc <lcd_AddressSet>
	LCD_WR_DATA(color);
 8001b42:	887b      	ldrh	r3, [r7, #2]
 8001b44:	4618      	mov	r0, r3
 8001b46:	f7ff ff17 	bl	8001978 <LCD_WR_DATA>
}
 8001b4a:	bf00      	nop
 8001b4c:	3708      	adds	r7, #8
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	bd80      	pop	{r7, pc}

08001b52 <lcd_DrawLine>:
  * @param  y2 Y coordinate of end point
  * @param  color Color to fill
  * @retval None
  */
void lcd_DrawLine(uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2,uint16_t color) // ve duong
{
 8001b52:	b590      	push	{r4, r7, lr}
 8001b54:	b08d      	sub	sp, #52	@ 0x34
 8001b56:	af00      	add	r7, sp, #0
 8001b58:	4604      	mov	r4, r0
 8001b5a:	4608      	mov	r0, r1
 8001b5c:	4611      	mov	r1, r2
 8001b5e:	461a      	mov	r2, r3
 8001b60:	4623      	mov	r3, r4
 8001b62:	80fb      	strh	r3, [r7, #6]
 8001b64:	4603      	mov	r3, r0
 8001b66:	80bb      	strh	r3, [r7, #4]
 8001b68:	460b      	mov	r3, r1
 8001b6a:	807b      	strh	r3, [r7, #2]
 8001b6c:	4613      	mov	r3, r2
 8001b6e:	803b      	strh	r3, [r7, #0]
	uint16_t t;
	int xerr=0,yerr=0,delta_x,delta_y,distance;
 8001b70:	2300      	movs	r3, #0
 8001b72:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001b74:	2300      	movs	r3, #0
 8001b76:	627b      	str	r3, [r7, #36]	@ 0x24
	int incx,incy,uRow,uCol;
	delta_x=x2-x1;
 8001b78:	887a      	ldrh	r2, [r7, #2]
 8001b7a:	88fb      	ldrh	r3, [r7, #6]
 8001b7c:	1ad3      	subs	r3, r2, r3
 8001b7e:	623b      	str	r3, [r7, #32]
	delta_y=y2-y1;
 8001b80:	883a      	ldrh	r2, [r7, #0]
 8001b82:	88bb      	ldrh	r3, [r7, #4]
 8001b84:	1ad3      	subs	r3, r2, r3
 8001b86:	61fb      	str	r3, [r7, #28]
	uRow=x1;
 8001b88:	88fb      	ldrh	r3, [r7, #6]
 8001b8a:	60fb      	str	r3, [r7, #12]
	uCol=y1;
 8001b8c:	88bb      	ldrh	r3, [r7, #4]
 8001b8e:	60bb      	str	r3, [r7, #8]
	if(delta_x>0)incx=1;
 8001b90:	6a3b      	ldr	r3, [r7, #32]
 8001b92:	2b00      	cmp	r3, #0
 8001b94:	dd02      	ble.n	8001b9c <lcd_DrawLine+0x4a>
 8001b96:	2301      	movs	r3, #1
 8001b98:	617b      	str	r3, [r7, #20]
 8001b9a:	e00b      	b.n	8001bb4 <lcd_DrawLine+0x62>
	else if (delta_x==0)incx=0;
 8001b9c:	6a3b      	ldr	r3, [r7, #32]
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d102      	bne.n	8001ba8 <lcd_DrawLine+0x56>
 8001ba2:	2300      	movs	r3, #0
 8001ba4:	617b      	str	r3, [r7, #20]
 8001ba6:	e005      	b.n	8001bb4 <lcd_DrawLine+0x62>
	else {incx=-1;delta_x=-delta_x;}
 8001ba8:	f04f 33ff 	mov.w	r3, #4294967295
 8001bac:	617b      	str	r3, [r7, #20]
 8001bae:	6a3b      	ldr	r3, [r7, #32]
 8001bb0:	425b      	negs	r3, r3
 8001bb2:	623b      	str	r3, [r7, #32]
	if(delta_y>0)incy=1;
 8001bb4:	69fb      	ldr	r3, [r7, #28]
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	dd02      	ble.n	8001bc0 <lcd_DrawLine+0x6e>
 8001bba:	2301      	movs	r3, #1
 8001bbc:	613b      	str	r3, [r7, #16]
 8001bbe:	e00b      	b.n	8001bd8 <lcd_DrawLine+0x86>
	else if (delta_y==0)incy=0;
 8001bc0:	69fb      	ldr	r3, [r7, #28]
 8001bc2:	2b00      	cmp	r3, #0
 8001bc4:	d102      	bne.n	8001bcc <lcd_DrawLine+0x7a>
 8001bc6:	2300      	movs	r3, #0
 8001bc8:	613b      	str	r3, [r7, #16]
 8001bca:	e005      	b.n	8001bd8 <lcd_DrawLine+0x86>
	else {incy=-1;delta_y=-delta_y;}
 8001bcc:	f04f 33ff 	mov.w	r3, #4294967295
 8001bd0:	613b      	str	r3, [r7, #16]
 8001bd2:	69fb      	ldr	r3, [r7, #28]
 8001bd4:	425b      	negs	r3, r3
 8001bd6:	61fb      	str	r3, [r7, #28]
	if(delta_x>delta_y)distance=delta_x;
 8001bd8:	6a3a      	ldr	r2, [r7, #32]
 8001bda:	69fb      	ldr	r3, [r7, #28]
 8001bdc:	429a      	cmp	r2, r3
 8001bde:	dd02      	ble.n	8001be6 <lcd_DrawLine+0x94>
 8001be0:	6a3b      	ldr	r3, [r7, #32]
 8001be2:	61bb      	str	r3, [r7, #24]
 8001be4:	e001      	b.n	8001bea <lcd_DrawLine+0x98>
	else distance=delta_y;
 8001be6:	69fb      	ldr	r3, [r7, #28]
 8001be8:	61bb      	str	r3, [r7, #24]
	for(t=0;t<distance+1;t++)
 8001bea:	2300      	movs	r3, #0
 8001bec:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8001bee:	e02b      	b.n	8001c48 <lcd_DrawLine+0xf6>
	{
		lcd_DrawPoint(uRow,uCol,color);
 8001bf0:	68fb      	ldr	r3, [r7, #12]
 8001bf2:	b29b      	uxth	r3, r3
 8001bf4:	68ba      	ldr	r2, [r7, #8]
 8001bf6:	b291      	uxth	r1, r2
 8001bf8:	f8b7 2040 	ldrh.w	r2, [r7, #64]	@ 0x40
 8001bfc:	4618      	mov	r0, r3
 8001bfe:	f7ff ff91 	bl	8001b24 <lcd_DrawPoint>
		xerr+=delta_x;
 8001c02:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001c04:	6a3b      	ldr	r3, [r7, #32]
 8001c06:	4413      	add	r3, r2
 8001c08:	62bb      	str	r3, [r7, #40]	@ 0x28
		yerr+=delta_y;
 8001c0a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001c0c:	69fb      	ldr	r3, [r7, #28]
 8001c0e:	4413      	add	r3, r2
 8001c10:	627b      	str	r3, [r7, #36]	@ 0x24
		if(xerr>distance)
 8001c12:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001c14:	69bb      	ldr	r3, [r7, #24]
 8001c16:	429a      	cmp	r2, r3
 8001c18:	dd07      	ble.n	8001c2a <lcd_DrawLine+0xd8>
		{
			xerr-=distance;
 8001c1a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001c1c:	69bb      	ldr	r3, [r7, #24]
 8001c1e:	1ad3      	subs	r3, r2, r3
 8001c20:	62bb      	str	r3, [r7, #40]	@ 0x28
			uRow+=incx;
 8001c22:	68fa      	ldr	r2, [r7, #12]
 8001c24:	697b      	ldr	r3, [r7, #20]
 8001c26:	4413      	add	r3, r2
 8001c28:	60fb      	str	r3, [r7, #12]
		}
		if(yerr>distance)
 8001c2a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001c2c:	69bb      	ldr	r3, [r7, #24]
 8001c2e:	429a      	cmp	r2, r3
 8001c30:	dd07      	ble.n	8001c42 <lcd_DrawLine+0xf0>
		{
			yerr-=distance;
 8001c32:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001c34:	69bb      	ldr	r3, [r7, #24]
 8001c36:	1ad3      	subs	r3, r2, r3
 8001c38:	627b      	str	r3, [r7, #36]	@ 0x24
			uCol+=incy;
 8001c3a:	68ba      	ldr	r2, [r7, #8]
 8001c3c:	693b      	ldr	r3, [r7, #16]
 8001c3e:	4413      	add	r3, r2
 8001c40:	60bb      	str	r3, [r7, #8]
	for(t=0;t<distance+1;t++)
 8001c42:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8001c44:	3301      	adds	r3, #1
 8001c46:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8001c48:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8001c4a:	69ba      	ldr	r2, [r7, #24]
 8001c4c:	429a      	cmp	r2, r3
 8001c4e:	dacf      	bge.n	8001bf0 <lcd_DrawLine+0x9e>
		}
	}
}
 8001c50:	bf00      	nop
 8001c52:	bf00      	nop
 8001c54:	3734      	adds	r7, #52	@ 0x34
 8001c56:	46bd      	mov	sp, r7
 8001c58:	bd90      	pop	{r4, r7, pc}
	...

08001c5c <lcd_ShowChar>:
	lcd_DrawLine(x1,y2,x2,y2,color);
	lcd_DrawLine(x2,y1,x2,y2,color);
}

void lcd_ShowChar(uint16_t x,uint16_t y,uint8_t character,uint16_t fc,uint16_t bc,uint8_t sizey,uint8_t mode) // 1ky tu size = 12 16 24 32, fc: mau chuw, bc, mauf neefn, mode: hien neen
{
 8001c5c:	b590      	push	{r4, r7, lr}
 8001c5e:	b087      	sub	sp, #28
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	4604      	mov	r4, r0
 8001c64:	4608      	mov	r0, r1
 8001c66:	4611      	mov	r1, r2
 8001c68:	461a      	mov	r2, r3
 8001c6a:	4623      	mov	r3, r4
 8001c6c:	80fb      	strh	r3, [r7, #6]
 8001c6e:	4603      	mov	r3, r0
 8001c70:	80bb      	strh	r3, [r7, #4]
 8001c72:	460b      	mov	r3, r1
 8001c74:	70fb      	strb	r3, [r7, #3]
 8001c76:	4613      	mov	r3, r2
 8001c78:	803b      	strh	r3, [r7, #0]
	uint8_t temp,sizex,t,m=0;
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	757b      	strb	r3, [r7, #21]
	uint16_t i,TypefaceNum;
	uint16_t x0=x;
 8001c7e:	88fb      	ldrh	r3, [r7, #6]
 8001c80:	823b      	strh	r3, [r7, #16]
	sizex=sizey/2;
 8001c82:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001c86:	085b      	lsrs	r3, r3, #1
 8001c88:	73fb      	strb	r3, [r7, #15]
	TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
 8001c8a:	7bfb      	ldrb	r3, [r7, #15]
 8001c8c:	08db      	lsrs	r3, r3, #3
 8001c8e:	b2db      	uxtb	r3, r3
 8001c90:	461a      	mov	r2, r3
 8001c92:	7bfb      	ldrb	r3, [r7, #15]
 8001c94:	f003 0307 	and.w	r3, r3, #7
 8001c98:	b2db      	uxtb	r3, r3
 8001c9a:	2b00      	cmp	r3, #0
 8001c9c:	bf14      	ite	ne
 8001c9e:	2301      	movne	r3, #1
 8001ca0:	2300      	moveq	r3, #0
 8001ca2:	b2db      	uxtb	r3, r3
 8001ca4:	4413      	add	r3, r2
 8001ca6:	b29a      	uxth	r2, r3
 8001ca8:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001cac:	b29b      	uxth	r3, r3
 8001cae:	fb12 f303 	smulbb	r3, r2, r3
 8001cb2:	81bb      	strh	r3, [r7, #12]
	character=character-' ';
 8001cb4:	78fb      	ldrb	r3, [r7, #3]
 8001cb6:	3b20      	subs	r3, #32
 8001cb8:	70fb      	strb	r3, [r7, #3]
	lcd_AddressSet(x,y,x+sizex-1,y+sizey-1);
 8001cba:	7bfb      	ldrb	r3, [r7, #15]
 8001cbc:	b29a      	uxth	r2, r3
 8001cbe:	88fb      	ldrh	r3, [r7, #6]
 8001cc0:	4413      	add	r3, r2
 8001cc2:	b29b      	uxth	r3, r3
 8001cc4:	3b01      	subs	r3, #1
 8001cc6:	b29c      	uxth	r4, r3
 8001cc8:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001ccc:	b29a      	uxth	r2, r3
 8001cce:	88bb      	ldrh	r3, [r7, #4]
 8001cd0:	4413      	add	r3, r2
 8001cd2:	b29b      	uxth	r3, r3
 8001cd4:	3b01      	subs	r3, #1
 8001cd6:	b29b      	uxth	r3, r3
 8001cd8:	88b9      	ldrh	r1, [r7, #4]
 8001cda:	88f8      	ldrh	r0, [r7, #6]
 8001cdc:	4622      	mov	r2, r4
 8001cde:	f7ff fe6d 	bl	80019bc <lcd_AddressSet>
	for(i=0;i<TypefaceNum;i++)
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	827b      	strh	r3, [r7, #18]
 8001ce6:	e07a      	b.n	8001dde <lcd_ShowChar+0x182>
	{
		if(sizey==12);
 8001ce8:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001cec:	2b0c      	cmp	r3, #12
 8001cee:	d028      	beq.n	8001d42 <lcd_ShowChar+0xe6>
		else if(sizey==16)temp=ascii_1608[character][i];
 8001cf0:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001cf4:	2b10      	cmp	r3, #16
 8001cf6:	d108      	bne.n	8001d0a <lcd_ShowChar+0xae>
 8001cf8:	78fa      	ldrb	r2, [r7, #3]
 8001cfa:	8a7b      	ldrh	r3, [r7, #18]
 8001cfc:	493c      	ldr	r1, [pc, #240]	@ (8001df0 <lcd_ShowChar+0x194>)
 8001cfe:	0112      	lsls	r2, r2, #4
 8001d00:	440a      	add	r2, r1
 8001d02:	4413      	add	r3, r2
 8001d04:	781b      	ldrb	r3, [r3, #0]
 8001d06:	75fb      	strb	r3, [r7, #23]
 8001d08:	e01b      	b.n	8001d42 <lcd_ShowChar+0xe6>
		else if(sizey==24)temp=ascii_2412[character][i];
 8001d0a:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001d0e:	2b18      	cmp	r3, #24
 8001d10:	d10b      	bne.n	8001d2a <lcd_ShowChar+0xce>
 8001d12:	78fa      	ldrb	r2, [r7, #3]
 8001d14:	8a79      	ldrh	r1, [r7, #18]
 8001d16:	4837      	ldr	r0, [pc, #220]	@ (8001df4 <lcd_ShowChar+0x198>)
 8001d18:	4613      	mov	r3, r2
 8001d1a:	005b      	lsls	r3, r3, #1
 8001d1c:	4413      	add	r3, r2
 8001d1e:	011b      	lsls	r3, r3, #4
 8001d20:	4403      	add	r3, r0
 8001d22:	440b      	add	r3, r1
 8001d24:	781b      	ldrb	r3, [r3, #0]
 8001d26:	75fb      	strb	r3, [r7, #23]
 8001d28:	e00b      	b.n	8001d42 <lcd_ShowChar+0xe6>
		else if(sizey==32)temp=ascii_3216[character][i];
 8001d2a:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8001d2e:	2b20      	cmp	r3, #32
 8001d30:	d15a      	bne.n	8001de8 <lcd_ShowChar+0x18c>
 8001d32:	78fa      	ldrb	r2, [r7, #3]
 8001d34:	8a7b      	ldrh	r3, [r7, #18]
 8001d36:	4930      	ldr	r1, [pc, #192]	@ (8001df8 <lcd_ShowChar+0x19c>)
 8001d38:	0192      	lsls	r2, r2, #6
 8001d3a:	440a      	add	r2, r1
 8001d3c:	4413      	add	r3, r2
 8001d3e:	781b      	ldrb	r3, [r3, #0]
 8001d40:	75fb      	strb	r3, [r7, #23]
		else return;
		for(t=0;t<8;t++)
 8001d42:	2300      	movs	r3, #0
 8001d44:	75bb      	strb	r3, [r7, #22]
 8001d46:	e044      	b.n	8001dd2 <lcd_ShowChar+0x176>
		{
			if(!mode)
 8001d48:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8001d4c:	2b00      	cmp	r3, #0
 8001d4e:	d120      	bne.n	8001d92 <lcd_ShowChar+0x136>
			{
				if(temp&(0x01<<t))LCD_WR_DATA(fc);
 8001d50:	7dfa      	ldrb	r2, [r7, #23]
 8001d52:	7dbb      	ldrb	r3, [r7, #22]
 8001d54:	fa42 f303 	asr.w	r3, r2, r3
 8001d58:	f003 0301 	and.w	r3, r3, #1
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d004      	beq.n	8001d6a <lcd_ShowChar+0x10e>
 8001d60:	883b      	ldrh	r3, [r7, #0]
 8001d62:	4618      	mov	r0, r3
 8001d64:	f7ff fe08 	bl	8001978 <LCD_WR_DATA>
 8001d68:	e003      	b.n	8001d72 <lcd_ShowChar+0x116>
				else LCD_WR_DATA(bc);
 8001d6a:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8001d6c:	4618      	mov	r0, r3
 8001d6e:	f7ff fe03 	bl	8001978 <LCD_WR_DATA>
				m++;
 8001d72:	7d7b      	ldrb	r3, [r7, #21]
 8001d74:	3301      	adds	r3, #1
 8001d76:	757b      	strb	r3, [r7, #21]
				if(m%sizex==0)
 8001d78:	7d7b      	ldrb	r3, [r7, #21]
 8001d7a:	7bfa      	ldrb	r2, [r7, #15]
 8001d7c:	fbb3 f1f2 	udiv	r1, r3, r2
 8001d80:	fb01 f202 	mul.w	r2, r1, r2
 8001d84:	1a9b      	subs	r3, r3, r2
 8001d86:	b2db      	uxtb	r3, r3
 8001d88:	2b00      	cmp	r3, #0
 8001d8a:	d11f      	bne.n	8001dcc <lcd_ShowChar+0x170>
				{
					m=0;
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	757b      	strb	r3, [r7, #21]
					break;
 8001d90:	e022      	b.n	8001dd8 <lcd_ShowChar+0x17c>
				}
			}
			else
			{
				if(temp&(0x01<<t))lcd_DrawPoint(x,y,fc);
 8001d92:	7dfa      	ldrb	r2, [r7, #23]
 8001d94:	7dbb      	ldrb	r3, [r7, #22]
 8001d96:	fa42 f303 	asr.w	r3, r2, r3
 8001d9a:	f003 0301 	and.w	r3, r3, #1
 8001d9e:	2b00      	cmp	r3, #0
 8001da0:	d005      	beq.n	8001dae <lcd_ShowChar+0x152>
 8001da2:	883a      	ldrh	r2, [r7, #0]
 8001da4:	88b9      	ldrh	r1, [r7, #4]
 8001da6:	88fb      	ldrh	r3, [r7, #6]
 8001da8:	4618      	mov	r0, r3
 8001daa:	f7ff febb 	bl	8001b24 <lcd_DrawPoint>
				x++;
 8001dae:	88fb      	ldrh	r3, [r7, #6]
 8001db0:	3301      	adds	r3, #1
 8001db2:	80fb      	strh	r3, [r7, #6]
				if((x-x0)==sizex)
 8001db4:	88fa      	ldrh	r2, [r7, #6]
 8001db6:	8a3b      	ldrh	r3, [r7, #16]
 8001db8:	1ad2      	subs	r2, r2, r3
 8001dba:	7bfb      	ldrb	r3, [r7, #15]
 8001dbc:	429a      	cmp	r2, r3
 8001dbe:	d105      	bne.n	8001dcc <lcd_ShowChar+0x170>
				{
					x=x0;
 8001dc0:	8a3b      	ldrh	r3, [r7, #16]
 8001dc2:	80fb      	strh	r3, [r7, #6]
					y++;
 8001dc4:	88bb      	ldrh	r3, [r7, #4]
 8001dc6:	3301      	adds	r3, #1
 8001dc8:	80bb      	strh	r3, [r7, #4]
					break;
 8001dca:	e005      	b.n	8001dd8 <lcd_ShowChar+0x17c>
		for(t=0;t<8;t++)
 8001dcc:	7dbb      	ldrb	r3, [r7, #22]
 8001dce:	3301      	adds	r3, #1
 8001dd0:	75bb      	strb	r3, [r7, #22]
 8001dd2:	7dbb      	ldrb	r3, [r7, #22]
 8001dd4:	2b07      	cmp	r3, #7
 8001dd6:	d9b7      	bls.n	8001d48 <lcd_ShowChar+0xec>
	for(i=0;i<TypefaceNum;i++)
 8001dd8:	8a7b      	ldrh	r3, [r7, #18]
 8001dda:	3301      	adds	r3, #1
 8001ddc:	827b      	strh	r3, [r7, #18]
 8001dde:	8a7a      	ldrh	r2, [r7, #18]
 8001de0:	89bb      	ldrh	r3, [r7, #12]
 8001de2:	429a      	cmp	r2, r3
 8001de4:	d380      	bcc.n	8001ce8 <lcd_ShowChar+0x8c>
 8001de6:	e000      	b.n	8001dea <lcd_ShowChar+0x18e>
		else return;
 8001de8:	bf00      	nop
				}
			}
		}
	}
}
 8001dea:	371c      	adds	r7, #28
 8001dec:	46bd      	mov	sp, r7
 8001dee:	bd90      	pop	{r4, r7, pc}
 8001df0:	0800a6b4 	.word	0x0800a6b4
 8001df4:	0800aca4 	.word	0x0800aca4
 8001df8:	0800be74 	.word	0x0800be74

08001dfc <lcd_SetDir>:
	}
}


void lcd_SetDir(uint8_t dir) //chinh huong man hinh
{
 8001dfc:	b480      	push	{r7}
 8001dfe:	b083      	sub	sp, #12
 8001e00:	af00      	add	r7, sp, #0
 8001e02:	4603      	mov	r3, r0
 8001e04:	71fb      	strb	r3, [r7, #7]
	if((dir>>4)%4)
 8001e06:	79fb      	ldrb	r3, [r7, #7]
 8001e08:	091b      	lsrs	r3, r3, #4
 8001e0a:	b2db      	uxtb	r3, r3
 8001e0c:	f003 0303 	and.w	r3, r3, #3
 8001e10:	b2db      	uxtb	r3, r3
 8001e12:	2b00      	cmp	r3, #0
 8001e14:	d007      	beq.n	8001e26 <lcd_SetDir+0x2a>
	{
		lcddev.width=320;
 8001e16:	4b0a      	ldr	r3, [pc, #40]	@ (8001e40 <lcd_SetDir+0x44>)
 8001e18:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001e1c:	801a      	strh	r2, [r3, #0]
		lcddev.height=240;
 8001e1e:	4b08      	ldr	r3, [pc, #32]	@ (8001e40 <lcd_SetDir+0x44>)
 8001e20:	22f0      	movs	r2, #240	@ 0xf0
 8001e22:	805a      	strh	r2, [r3, #2]
	}else
	{
		lcddev.width=240;
		lcddev.height=320;
	}
}
 8001e24:	e006      	b.n	8001e34 <lcd_SetDir+0x38>
		lcddev.width=240;
 8001e26:	4b06      	ldr	r3, [pc, #24]	@ (8001e40 <lcd_SetDir+0x44>)
 8001e28:	22f0      	movs	r2, #240	@ 0xf0
 8001e2a:	801a      	strh	r2, [r3, #0]
		lcddev.height=320;
 8001e2c:	4b04      	ldr	r3, [pc, #16]	@ (8001e40 <lcd_SetDir+0x44>)
 8001e2e:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001e32:	805a      	strh	r2, [r3, #2]
}
 8001e34:	bf00      	nop
 8001e36:	370c      	adds	r7, #12
 8001e38:	46bd      	mov	sp, r7
 8001e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e3e:	4770      	bx	lr
 8001e40:	200004e8 	.word	0x200004e8

08001e44 <lcd_init>:


void lcd_init(void)
{
 8001e44:	b580      	push	{r7, lr}
 8001e46:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(FSMC_RES_GPIO_Port, FSMC_RES_Pin, GPIO_PIN_RESET);
 8001e48:	2200      	movs	r2, #0
 8001e4a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001e4e:	48aa      	ldr	r0, [pc, #680]	@ (80020f8 <lcd_init+0x2b4>)
 8001e50:	f002 fb96 	bl	8004580 <HAL_GPIO_WritePin>
	HAL_Delay(500);
 8001e54:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001e58:	f001 f8ac 	bl	8002fb4 <HAL_Delay>
	HAL_GPIO_WritePin(FSMC_RES_GPIO_Port, FSMC_RES_Pin, GPIO_PIN_SET);
 8001e5c:	2201      	movs	r2, #1
 8001e5e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001e62:	48a5      	ldr	r0, [pc, #660]	@ (80020f8 <lcd_init+0x2b4>)
 8001e64:	f002 fb8c 	bl	8004580 <HAL_GPIO_WritePin>
	HAL_Delay(500);
 8001e68:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001e6c:	f001 f8a2 	bl	8002fb4 <HAL_Delay>
	lcd_SetDir(DFT_SCAN_DIR);
 8001e70:	2000      	movs	r0, #0
 8001e72:	f7ff ffc3 	bl	8001dfc <lcd_SetDir>
	LCD_WR_REG(0XD3);
 8001e76:	20d3      	movs	r0, #211	@ 0xd3
 8001e78:	f7ff fd6e 	bl	8001958 <LCD_WR_REG>
	lcddev.id=LCD_RD_DATA();	//dummy read
 8001e7c:	f7ff fd8c 	bl	8001998 <LCD_RD_DATA>
 8001e80:	4603      	mov	r3, r0
 8001e82:	461a      	mov	r2, r3
 8001e84:	4b9d      	ldr	r3, [pc, #628]	@ (80020fc <lcd_init+0x2b8>)
 8001e86:	809a      	strh	r2, [r3, #4]
	lcddev.id=LCD_RD_DATA();
 8001e88:	f7ff fd86 	bl	8001998 <LCD_RD_DATA>
 8001e8c:	4603      	mov	r3, r0
 8001e8e:	461a      	mov	r2, r3
 8001e90:	4b9a      	ldr	r3, [pc, #616]	@ (80020fc <lcd_init+0x2b8>)
 8001e92:	809a      	strh	r2, [r3, #4]
	lcddev.id=LCD_RD_DATA();
 8001e94:	f7ff fd80 	bl	8001998 <LCD_RD_DATA>
 8001e98:	4603      	mov	r3, r0
 8001e9a:	461a      	mov	r2, r3
 8001e9c:	4b97      	ldr	r3, [pc, #604]	@ (80020fc <lcd_init+0x2b8>)
 8001e9e:	809a      	strh	r2, [r3, #4]
	lcddev.id<<=8;
 8001ea0:	4b96      	ldr	r3, [pc, #600]	@ (80020fc <lcd_init+0x2b8>)
 8001ea2:	889b      	ldrh	r3, [r3, #4]
 8001ea4:	021b      	lsls	r3, r3, #8
 8001ea6:	b29a      	uxth	r2, r3
 8001ea8:	4b94      	ldr	r3, [pc, #592]	@ (80020fc <lcd_init+0x2b8>)
 8001eaa:	809a      	strh	r2, [r3, #4]
	lcddev.id|=LCD_RD_DATA();
 8001eac:	f7ff fd74 	bl	8001998 <LCD_RD_DATA>
 8001eb0:	4603      	mov	r3, r0
 8001eb2:	461a      	mov	r2, r3
 8001eb4:	4b91      	ldr	r3, [pc, #580]	@ (80020fc <lcd_init+0x2b8>)
 8001eb6:	889b      	ldrh	r3, [r3, #4]
 8001eb8:	4313      	orrs	r3, r2
 8001eba:	b29a      	uxth	r2, r3
 8001ebc:	4b8f      	ldr	r3, [pc, #572]	@ (80020fc <lcd_init+0x2b8>)
 8001ebe:	809a      	strh	r2, [r3, #4]

	LCD_WR_REG(0xCF);
 8001ec0:	20cf      	movs	r0, #207	@ 0xcf
 8001ec2:	f7ff fd49 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8001ec6:	2000      	movs	r0, #0
 8001ec8:	f7ff fd56 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 8001ecc:	20c1      	movs	r0, #193	@ 0xc1
 8001ece:	f7ff fd53 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0X30);
 8001ed2:	2030      	movs	r0, #48	@ 0x30
 8001ed4:	f7ff fd50 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xED);
 8001ed8:	20ed      	movs	r0, #237	@ 0xed
 8001eda:	f7ff fd3d 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8001ede:	2064      	movs	r0, #100	@ 0x64
 8001ee0:	f7ff fd4a 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8001ee4:	2003      	movs	r0, #3
 8001ee6:	f7ff fd47 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0X12);
 8001eea:	2012      	movs	r0, #18
 8001eec:	f7ff fd44 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0X81);
 8001ef0:	2081      	movs	r0, #129	@ 0x81
 8001ef2:	f7ff fd41 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xE8);
 8001ef6:	20e8      	movs	r0, #232	@ 0xe8
 8001ef8:	f7ff fd2e 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 8001efc:	2085      	movs	r0, #133	@ 0x85
 8001efe:	f7ff fd3b 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 8001f02:	2010      	movs	r0, #16
 8001f04:	f7ff fd38 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x7A);
 8001f08:	207a      	movs	r0, #122	@ 0x7a
 8001f0a:	f7ff fd35 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xCB);
 8001f0e:	20cb      	movs	r0, #203	@ 0xcb
 8001f10:	f7ff fd22 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 8001f14:	2039      	movs	r0, #57	@ 0x39
 8001f16:	f7ff fd2f 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 8001f1a:	202c      	movs	r0, #44	@ 0x2c
 8001f1c:	f7ff fd2c 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8001f20:	2000      	movs	r0, #0
 8001f22:	f7ff fd29 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 8001f26:	2034      	movs	r0, #52	@ 0x34
 8001f28:	f7ff fd26 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 8001f2c:	2002      	movs	r0, #2
 8001f2e:	f7ff fd23 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xF7);
 8001f32:	20f7      	movs	r0, #247	@ 0xf7
 8001f34:	f7ff fd10 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8001f38:	2020      	movs	r0, #32
 8001f3a:	f7ff fd1d 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xEA);
 8001f3e:	20ea      	movs	r0, #234	@ 0xea
 8001f40:	f7ff fd0a 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8001f44:	2000      	movs	r0, #0
 8001f46:	f7ff fd17 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8001f4a:	2000      	movs	r0, #0
 8001f4c:	f7ff fd14 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xC0);    //Power control
 8001f50:	20c0      	movs	r0, #192	@ 0xc0
 8001f52:	f7ff fd01 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x1B);   //VRH[5:0]
 8001f56:	201b      	movs	r0, #27
 8001f58:	f7ff fd0e 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xC1);    //Power control
 8001f5c:	20c1      	movs	r0, #193	@ 0xc1
 8001f5e:	f7ff fcfb 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x01);   //SAP[2:0];BT[3:0]
 8001f62:	2001      	movs	r0, #1
 8001f64:	f7ff fd08 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xC5);    //VCM control
 8001f68:	20c5      	movs	r0, #197	@ 0xc5
 8001f6a:	f7ff fcf5 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x30); 	 //3F
 8001f6e:	2030      	movs	r0, #48	@ 0x30
 8001f70:	f7ff fd02 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x30); 	 //3C
 8001f74:	2030      	movs	r0, #48	@ 0x30
 8001f76:	f7ff fcff 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xC7);    //VCM control2
 8001f7a:	20c7      	movs	r0, #199	@ 0xc7
 8001f7c:	f7ff fcec 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0XB7);
 8001f80:	20b7      	movs	r0, #183	@ 0xb7
 8001f82:	f7ff fcf9 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0x36);    // Memory Access Control
 8001f86:	2036      	movs	r0, #54	@ 0x36
 8001f88:	f7ff fce6 	bl	8001958 <LCD_WR_REG>

	LCD_WR_DATA(0x08|DFT_SCAN_DIR);
 8001f8c:	2008      	movs	r0, #8
 8001f8e:	f7ff fcf3 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0x3A);
 8001f92:	203a      	movs	r0, #58	@ 0x3a
 8001f94:	f7ff fce0 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x55);
 8001f98:	2055      	movs	r0, #85	@ 0x55
 8001f9a:	f7ff fced 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 8001f9e:	20b1      	movs	r0, #177	@ 0xb1
 8001fa0:	f7ff fcda 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8001fa4:	2000      	movs	r0, #0
 8001fa6:	f7ff fce7 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x1A);
 8001faa:	201a      	movs	r0, #26
 8001fac:	f7ff fce4 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xB6);    // Display Function Control
 8001fb0:	20b6      	movs	r0, #182	@ 0xb6
 8001fb2:	f7ff fcd1 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x0A);
 8001fb6:	200a      	movs	r0, #10
 8001fb8:	f7ff fcde 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0xA2);
 8001fbc:	20a2      	movs	r0, #162	@ 0xa2
 8001fbe:	f7ff fcdb 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xF2);    // 3Gamma Function Disable
 8001fc2:	20f2      	movs	r0, #242	@ 0xf2
 8001fc4:	f7ff fcc8 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8001fc8:	2000      	movs	r0, #0
 8001fca:	f7ff fcd5 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0x26);    //Gamma curve selected
 8001fce:	2026      	movs	r0, #38	@ 0x26
 8001fd0:	f7ff fcc2 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x01);
 8001fd4:	2001      	movs	r0, #1
 8001fd6:	f7ff fccf 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0xE0);    //Set Gamma
 8001fda:	20e0      	movs	r0, #224	@ 0xe0
 8001fdc:	f7ff fcbc 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 8001fe0:	200f      	movs	r0, #15
 8001fe2:	f7ff fcc9 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x2A);
 8001fe6:	202a      	movs	r0, #42	@ 0x2a
 8001fe8:	f7ff fcc6 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 8001fec:	2028      	movs	r0, #40	@ 0x28
 8001fee:	f7ff fcc3 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8001ff2:	2008      	movs	r0, #8
 8001ff4:	f7ff fcc0 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8001ff8:	200e      	movs	r0, #14
 8001ffa:	f7ff fcbd 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8001ffe:	2008      	movs	r0, #8
 8002000:	f7ff fcba 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x54);
 8002004:	2054      	movs	r0, #84	@ 0x54
 8002006:	f7ff fcb7 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0XA9);
 800200a:	20a9      	movs	r0, #169	@ 0xa9
 800200c:	f7ff fcb4 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x43);
 8002010:	2043      	movs	r0, #67	@ 0x43
 8002012:	f7ff fcb1 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x0A);
 8002016:	200a      	movs	r0, #10
 8002018:	f7ff fcae 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800201c:	200f      	movs	r0, #15
 800201e:	f7ff fcab 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8002022:	2000      	movs	r0, #0
 8002024:	f7ff fca8 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8002028:	2000      	movs	r0, #0
 800202a:	f7ff fca5 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800202e:	2000      	movs	r0, #0
 8002030:	f7ff fca2 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8002034:	2000      	movs	r0, #0
 8002036:	f7ff fc9f 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0XE1);    //Set Gamma
 800203a:	20e1      	movs	r0, #225	@ 0xe1
 800203c:	f7ff fc8c 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8002040:	2000      	movs	r0, #0
 8002042:	f7ff fc99 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x15);
 8002046:	2015      	movs	r0, #21
 8002048:	f7ff fc96 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x17);
 800204c:	2017      	movs	r0, #23
 800204e:	f7ff fc93 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8002052:	2007      	movs	r0, #7
 8002054:	f7ff fc90 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 8002058:	2011      	movs	r0, #17
 800205a:	f7ff fc8d 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x06);
 800205e:	2006      	movs	r0, #6
 8002060:	f7ff fc8a 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 8002064:	202b      	movs	r0, #43	@ 0x2b
 8002066:	f7ff fc87 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x56);
 800206a:	2056      	movs	r0, #86	@ 0x56
 800206c:	f7ff fc84 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x3C);
 8002070:	203c      	movs	r0, #60	@ 0x3c
 8002072:	f7ff fc81 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x05);
 8002076:	2005      	movs	r0, #5
 8002078:	f7ff fc7e 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 800207c:	2010      	movs	r0, #16
 800207e:	f7ff fc7b 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8002082:	200f      	movs	r0, #15
 8002084:	f7ff fc78 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x3F);
 8002088:	203f      	movs	r0, #63	@ 0x3f
 800208a:	f7ff fc75 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x3F);
 800208e:	203f      	movs	r0, #63	@ 0x3f
 8002090:	f7ff fc72 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8002094:	200f      	movs	r0, #15
 8002096:	f7ff fc6f 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0x2B);
 800209a:	202b      	movs	r0, #43	@ 0x2b
 800209c:	f7ff fc5c 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80020a0:	2000      	movs	r0, #0
 80020a2:	f7ff fc69 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80020a6:	2000      	movs	r0, #0
 80020a8:	f7ff fc66 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
 80020ac:	2001      	movs	r0, #1
 80020ae:	f7ff fc63 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x3f);
 80020b2:	203f      	movs	r0, #63	@ 0x3f
 80020b4:	f7ff fc60 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0x2A);
 80020b8:	202a      	movs	r0, #42	@ 0x2a
 80020ba:	f7ff fc4d 	bl	8001958 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80020be:	2000      	movs	r0, #0
 80020c0:	f7ff fc5a 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80020c4:	2000      	movs	r0, #0
 80020c6:	f7ff fc57 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80020ca:	2000      	movs	r0, #0
 80020cc:	f7ff fc54 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_DATA(0xef);
 80020d0:	20ef      	movs	r0, #239	@ 0xef
 80020d2:	f7ff fc51 	bl	8001978 <LCD_WR_DATA>
	LCD_WR_REG(0x11); //Exit Sleep
 80020d6:	2011      	movs	r0, #17
 80020d8:	f7ff fc3e 	bl	8001958 <LCD_WR_REG>
	HAL_Delay(120);
 80020dc:	2078      	movs	r0, #120	@ 0x78
 80020de:	f000 ff69 	bl	8002fb4 <HAL_Delay>
	LCD_WR_REG(0x29); //display on
 80020e2:	2029      	movs	r0, #41	@ 0x29
 80020e4:	f7ff fc38 	bl	8001958 <LCD_WR_REG>
	HAL_GPIO_WritePin(FSMC_BLK_GPIO_Port, FSMC_BLK_Pin, 1);
 80020e8:	2201      	movs	r2, #1
 80020ea:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80020ee:	4804      	ldr	r0, [pc, #16]	@ (8002100 <lcd_init+0x2bc>)
 80020f0:	f002 fa46 	bl	8004580 <HAL_GPIO_WritePin>
}
 80020f4:	bf00      	nop
 80020f6:	bd80      	pop	{r7, pc}
 80020f8:	40020800 	.word	0x40020800
 80020fc:	200004e8 	.word	0x200004e8
 8002100:	40020000 	.word	0x40020000

08002104 <lcd_ShowStr>:
		}
	}
}

void lcd_ShowStr(uint16_t x, uint16_t y,char *str,uint16_t fc, uint16_t bc,uint8_t sizey,uint8_t mode)
{
 8002104:	b590      	push	{r4, r7, lr}
 8002106:	b08b      	sub	sp, #44	@ 0x2c
 8002108:	af04      	add	r7, sp, #16
 800210a:	60ba      	str	r2, [r7, #8]
 800210c:	461a      	mov	r2, r3
 800210e:	4603      	mov	r3, r0
 8002110:	81fb      	strh	r3, [r7, #14]
 8002112:	460b      	mov	r3, r1
 8002114:	81bb      	strh	r3, [r7, #12]
 8002116:	4613      	mov	r3, r2
 8002118:	80fb      	strh	r3, [r7, #6]
	uint16_t x0=x;
 800211a:	89fb      	ldrh	r3, [r7, #14]
 800211c:	82bb      	strh	r3, [r7, #20]
    uint8_t bHz=0;
 800211e:	2300      	movs	r3, #0
 8002120:	75fb      	strb	r3, [r7, #23]
	while(*str!=0)
 8002122:	e048      	b.n	80021b6 <lcd_ShowStr+0xb2>
	{
		if(!bHz)
 8002124:	7dfb      	ldrb	r3, [r7, #23]
 8002126:	2b00      	cmp	r3, #0
 8002128:	d145      	bne.n	80021b6 <lcd_ShowStr+0xb2>
		{
			if(x>(lcddev.width-sizey/2)||y>(lcddev.height-sizey)) return;
 800212a:	89fa      	ldrh	r2, [r7, #14]
 800212c:	4b26      	ldr	r3, [pc, #152]	@ (80021c8 <lcd_ShowStr+0xc4>)
 800212e:	881b      	ldrh	r3, [r3, #0]
 8002130:	4619      	mov	r1, r3
 8002132:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8002136:	085b      	lsrs	r3, r3, #1
 8002138:	b2db      	uxtb	r3, r3
 800213a:	1acb      	subs	r3, r1, r3
 800213c:	429a      	cmp	r2, r3
 800213e:	dc3f      	bgt.n	80021c0 <lcd_ShowStr+0xbc>
 8002140:	89ba      	ldrh	r2, [r7, #12]
 8002142:	4b21      	ldr	r3, [pc, #132]	@ (80021c8 <lcd_ShowStr+0xc4>)
 8002144:	885b      	ldrh	r3, [r3, #2]
 8002146:	4619      	mov	r1, r3
 8002148:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800214c:	1acb      	subs	r3, r1, r3
 800214e:	429a      	cmp	r2, r3
 8002150:	dc36      	bgt.n	80021c0 <lcd_ShowStr+0xbc>
			if(*str>0x80)bHz=1;
 8002152:	68bb      	ldr	r3, [r7, #8]
 8002154:	781b      	ldrb	r3, [r3, #0]
 8002156:	2b80      	cmp	r3, #128	@ 0x80
 8002158:	d902      	bls.n	8002160 <lcd_ShowStr+0x5c>
 800215a:	2301      	movs	r3, #1
 800215c:	75fb      	strb	r3, [r7, #23]
 800215e:	e02a      	b.n	80021b6 <lcd_ShowStr+0xb2>
			else
			{
				if(*str==0x0D)
 8002160:	68bb      	ldr	r3, [r7, #8]
 8002162:	781b      	ldrb	r3, [r3, #0]
 8002164:	2b0d      	cmp	r3, #13
 8002166:	d10b      	bne.n	8002180 <lcd_ShowStr+0x7c>
				{
					y+=sizey;
 8002168:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800216c:	b29a      	uxth	r2, r3
 800216e:	89bb      	ldrh	r3, [r7, #12]
 8002170:	4413      	add	r3, r2
 8002172:	81bb      	strh	r3, [r7, #12]
					x=x0;
 8002174:	8abb      	ldrh	r3, [r7, #20]
 8002176:	81fb      	strh	r3, [r7, #14]
					str++;
 8002178:	68bb      	ldr	r3, [r7, #8]
 800217a:	3301      	adds	r3, #1
 800217c:	60bb      	str	r3, [r7, #8]
 800217e:	e017      	b.n	80021b0 <lcd_ShowStr+0xac>
				}else
				{
					lcd_ShowChar(x,y,*str,fc,bc,sizey,mode);
 8002180:	68bb      	ldr	r3, [r7, #8]
 8002182:	781a      	ldrb	r2, [r3, #0]
 8002184:	88fc      	ldrh	r4, [r7, #6]
 8002186:	89b9      	ldrh	r1, [r7, #12]
 8002188:	89f8      	ldrh	r0, [r7, #14]
 800218a:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800218e:	9302      	str	r3, [sp, #8]
 8002190:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8002194:	9301      	str	r3, [sp, #4]
 8002196:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8002198:	9300      	str	r3, [sp, #0]
 800219a:	4623      	mov	r3, r4
 800219c:	f7ff fd5e 	bl	8001c5c <lcd_ShowChar>
					x+=sizey/2;
 80021a0:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 80021a4:	085b      	lsrs	r3, r3, #1
 80021a6:	b2db      	uxtb	r3, r3
 80021a8:	461a      	mov	r2, r3
 80021aa:	89fb      	ldrh	r3, [r7, #14]
 80021ac:	4413      	add	r3, r2
 80021ae:	81fb      	strh	r3, [r7, #14]
				}
			  str++;
 80021b0:	68bb      	ldr	r3, [r7, #8]
 80021b2:	3301      	adds	r3, #1
 80021b4:	60bb      	str	r3, [r7, #8]
	while(*str!=0)
 80021b6:	68bb      	ldr	r3, [r7, #8]
 80021b8:	781b      	ldrb	r3, [r3, #0]
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d1b2      	bne.n	8002124 <lcd_ShowStr+0x20>
 80021be:	e000      	b.n	80021c2 <lcd_ShowStr+0xbe>
			if(x>(lcddev.width-sizey/2)||y>(lcddev.height-sizey)) return;
 80021c0:	bf00      	nop
			}
		}
	}
}
 80021c2:	371c      	adds	r7, #28
 80021c4:	46bd      	mov	sp, r7
 80021c6:	bd90      	pop	{r4, r7, pc}
 80021c8:	200004e8 	.word	0x200004e8

080021cc <led7_init>:
uint8_t arrayOfNum[10] = {0x03, 0x9f, 0x25, 0x0d, 0x99, 0x49, 0x41, 0x1f, 0x01, 0x09};// 9 numbers
uint16_t spi_buffer = 0xffff;

int led7_index = 0;

void led7_init(){
 80021cc:	b580      	push	{r7, lr}
 80021ce:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(LD_LATCH_GPIO_Port, LD_LATCH_Pin, 1);
 80021d0:	2201      	movs	r2, #1
 80021d2:	2140      	movs	r1, #64	@ 0x40
 80021d4:	4802      	ldr	r0, [pc, #8]	@ (80021e0 <led7_init+0x14>)
 80021d6:	f002 f9d3 	bl	8004580 <HAL_GPIO_WritePin>
}
 80021da:	bf00      	nop
 80021dc:	bd80      	pop	{r7, pc}
 80021de:	bf00      	nop
 80021e0:	40021800 	.word	0x40021800

080021e4 <led7_Scan>:

void led7_Scan(){
 80021e4:	b580      	push	{r7, lr}
 80021e6:	af00      	add	r7, sp, #0
	spi_buffer &= 0x00ff;
 80021e8:	4b3f      	ldr	r3, [pc, #252]	@ (80022e8 <led7_Scan+0x104>)
 80021ea:	881b      	ldrh	r3, [r3, #0]
 80021ec:	b2db      	uxtb	r3, r3
 80021ee:	b29a      	uxth	r2, r3
 80021f0:	4b3d      	ldr	r3, [pc, #244]	@ (80022e8 <led7_Scan+0x104>)
 80021f2:	801a      	strh	r2, [r3, #0]
	spi_buffer |= led7seg[led7_index] << 8;
 80021f4:	4b3d      	ldr	r3, [pc, #244]	@ (80022ec <led7_Scan+0x108>)
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	4a3d      	ldr	r2, [pc, #244]	@ (80022f0 <led7_Scan+0x10c>)
 80021fa:	5cd3      	ldrb	r3, [r2, r3]
 80021fc:	021b      	lsls	r3, r3, #8
 80021fe:	b21a      	sxth	r2, r3
 8002200:	4b39      	ldr	r3, [pc, #228]	@ (80022e8 <led7_Scan+0x104>)
 8002202:	881b      	ldrh	r3, [r3, #0]
 8002204:	b21b      	sxth	r3, r3
 8002206:	4313      	orrs	r3, r2
 8002208:	b21b      	sxth	r3, r3
 800220a:	b29a      	uxth	r2, r3
 800220c:	4b36      	ldr	r3, [pc, #216]	@ (80022e8 <led7_Scan+0x104>)
 800220e:	801a      	strh	r2, [r3, #0]
	switch(led7_index){
 8002210:	4b36      	ldr	r3, [pc, #216]	@ (80022ec <led7_Scan+0x108>)
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	2b03      	cmp	r3, #3
 8002216:	d847      	bhi.n	80022a8 <led7_Scan+0xc4>
 8002218:	a201      	add	r2, pc, #4	@ (adr r2, 8002220 <led7_Scan+0x3c>)
 800221a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800221e:	bf00      	nop
 8002220:	08002231 	.word	0x08002231
 8002224:	0800224f 	.word	0x0800224f
 8002228:	0800226d 	.word	0x0800226d
 800222c:	0800228b 	.word	0x0800228b
	case 0:
		spi_buffer |= 0x00b0;
 8002230:	4b2d      	ldr	r3, [pc, #180]	@ (80022e8 <led7_Scan+0x104>)
 8002232:	881b      	ldrh	r3, [r3, #0]
 8002234:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8002238:	b29a      	uxth	r2, r3
 800223a:	4b2b      	ldr	r3, [pc, #172]	@ (80022e8 <led7_Scan+0x104>)
 800223c:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xffbf;//1011
 800223e:	4b2a      	ldr	r3, [pc, #168]	@ (80022e8 <led7_Scan+0x104>)
 8002240:	881b      	ldrh	r3, [r3, #0]
 8002242:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002246:	b29a      	uxth	r2, r3
 8002248:	4b27      	ldr	r3, [pc, #156]	@ (80022e8 <led7_Scan+0x104>)
 800224a:	801a      	strh	r2, [r3, #0]
		break;
 800224c:	e02d      	b.n	80022aa <led7_Scan+0xc6>
	case 1:
		spi_buffer |= 0x00d0;
 800224e:	4b26      	ldr	r3, [pc, #152]	@ (80022e8 <led7_Scan+0x104>)
 8002250:	881b      	ldrh	r3, [r3, #0]
 8002252:	f043 03d0 	orr.w	r3, r3, #208	@ 0xd0
 8002256:	b29a      	uxth	r2, r3
 8002258:	4b23      	ldr	r3, [pc, #140]	@ (80022e8 <led7_Scan+0x104>)
 800225a:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xffdf;//1101
 800225c:	4b22      	ldr	r3, [pc, #136]	@ (80022e8 <led7_Scan+0x104>)
 800225e:	881b      	ldrh	r3, [r3, #0]
 8002260:	f023 0320 	bic.w	r3, r3, #32
 8002264:	b29a      	uxth	r2, r3
 8002266:	4b20      	ldr	r3, [pc, #128]	@ (80022e8 <led7_Scan+0x104>)
 8002268:	801a      	strh	r2, [r3, #0]
		break;
 800226a:	e01e      	b.n	80022aa <led7_Scan+0xc6>
	case 2:
		spi_buffer |= 0x00e0;
 800226c:	4b1e      	ldr	r3, [pc, #120]	@ (80022e8 <led7_Scan+0x104>)
 800226e:	881b      	ldrh	r3, [r3, #0]
 8002270:	f043 03e0 	orr.w	r3, r3, #224	@ 0xe0
 8002274:	b29a      	uxth	r2, r3
 8002276:	4b1c      	ldr	r3, [pc, #112]	@ (80022e8 <led7_Scan+0x104>)
 8002278:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xffef;//1110
 800227a:	4b1b      	ldr	r3, [pc, #108]	@ (80022e8 <led7_Scan+0x104>)
 800227c:	881b      	ldrh	r3, [r3, #0]
 800227e:	f023 0310 	bic.w	r3, r3, #16
 8002282:	b29a      	uxth	r2, r3
 8002284:	4b18      	ldr	r3, [pc, #96]	@ (80022e8 <led7_Scan+0x104>)
 8002286:	801a      	strh	r2, [r3, #0]
		break;
 8002288:	e00f      	b.n	80022aa <led7_Scan+0xc6>
	case 3:
		spi_buffer |= 0x0070;
 800228a:	4b17      	ldr	r3, [pc, #92]	@ (80022e8 <led7_Scan+0x104>)
 800228c:	881b      	ldrh	r3, [r3, #0]
 800228e:	f043 0370 	orr.w	r3, r3, #112	@ 0x70
 8002292:	b29a      	uxth	r2, r3
 8002294:	4b14      	ldr	r3, [pc, #80]	@ (80022e8 <led7_Scan+0x104>)
 8002296:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xff7f;//0111
 8002298:	4b13      	ldr	r3, [pc, #76]	@ (80022e8 <led7_Scan+0x104>)
 800229a:	881b      	ldrh	r3, [r3, #0]
 800229c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80022a0:	b29a      	uxth	r2, r3
 80022a2:	4b11      	ldr	r3, [pc, #68]	@ (80022e8 <led7_Scan+0x104>)
 80022a4:	801a      	strh	r2, [r3, #0]
		break;
 80022a6:	e000      	b.n	80022aa <led7_Scan+0xc6>
	default:
		break;
 80022a8:	bf00      	nop
	}
	led7_index = (led7_index + 1)%4;
 80022aa:	4b10      	ldr	r3, [pc, #64]	@ (80022ec <led7_Scan+0x108>)
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	3301      	adds	r3, #1
 80022b0:	425a      	negs	r2, r3
 80022b2:	f003 0303 	and.w	r3, r3, #3
 80022b6:	f002 0203 	and.w	r2, r2, #3
 80022ba:	bf58      	it	pl
 80022bc:	4253      	negpl	r3, r2
 80022be:	4a0b      	ldr	r2, [pc, #44]	@ (80022ec <led7_Scan+0x108>)
 80022c0:	6013      	str	r3, [r2, #0]
	HAL_GPIO_WritePin(LD_LATCH_GPIO_Port, LD_LATCH_Pin, 0);
 80022c2:	2200      	movs	r2, #0
 80022c4:	2140      	movs	r1, #64	@ 0x40
 80022c6:	480b      	ldr	r0, [pc, #44]	@ (80022f4 <led7_Scan+0x110>)
 80022c8:	f002 f95a 	bl	8004580 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, (void*)&spi_buffer, 2, 1);
 80022cc:	2301      	movs	r3, #1
 80022ce:	2202      	movs	r2, #2
 80022d0:	4905      	ldr	r1, [pc, #20]	@ (80022e8 <led7_Scan+0x104>)
 80022d2:	4809      	ldr	r0, [pc, #36]	@ (80022f8 <led7_Scan+0x114>)
 80022d4:	f002 ffd3 	bl	800527e <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(LD_LATCH_GPIO_Port, LD_LATCH_Pin, 1);
 80022d8:	2201      	movs	r2, #1
 80022da:	2140      	movs	r1, #64	@ 0x40
 80022dc:	4805      	ldr	r0, [pc, #20]	@ (80022f4 <led7_Scan+0x110>)
 80022de:	f002 f94f 	bl	8004580 <HAL_GPIO_WritePin>
}
 80022e2:	bf00      	nop
 80022e4:	bd80      	pop	{r7, pc}
 80022e6:	bf00      	nop
 80022e8:	20000012 	.word	0x20000012
 80022ec:	200004f0 	.word	0x200004f0
 80022f0:	20000004 	.word	0x20000004
 80022f4:	40021800 	.word	0x40021800
 80022f8:	2000050c 	.word	0x2000050c

080022fc <led7_SetDigit>:

void led7_SetDigit(int num, int position, uint8_t show_dot){
 80022fc:	b480      	push	{r7}
 80022fe:	b085      	sub	sp, #20
 8002300:	af00      	add	r7, sp, #0
 8002302:	60f8      	str	r0, [r7, #12]
 8002304:	60b9      	str	r1, [r7, #8]
 8002306:	4613      	mov	r3, r2
 8002308:	71fb      	strb	r3, [r7, #7]
	if(num >= 0 && num <= 9){
 800230a:	68fb      	ldr	r3, [r7, #12]
 800230c:	2b00      	cmp	r3, #0
 800230e:	db0e      	blt.n	800232e <led7_SetDigit+0x32>
 8002310:	68fb      	ldr	r3, [r7, #12]
 8002312:	2b09      	cmp	r3, #9
 8002314:	dc0b      	bgt.n	800232e <led7_SetDigit+0x32>
		led7seg[position] = arrayOfNum[num] - show_dot;
 8002316:	4a09      	ldr	r2, [pc, #36]	@ (800233c <led7_SetDigit+0x40>)
 8002318:	68fb      	ldr	r3, [r7, #12]
 800231a:	4413      	add	r3, r2
 800231c:	781a      	ldrb	r2, [r3, #0]
 800231e:	79fb      	ldrb	r3, [r7, #7]
 8002320:	1ad3      	subs	r3, r2, r3
 8002322:	b2d9      	uxtb	r1, r3
 8002324:	4a06      	ldr	r2, [pc, #24]	@ (8002340 <led7_SetDigit+0x44>)
 8002326:	68bb      	ldr	r3, [r7, #8]
 8002328:	4413      	add	r3, r2
 800232a:	460a      	mov	r2, r1
 800232c:	701a      	strb	r2, [r3, #0]
	}
}
 800232e:	bf00      	nop
 8002330:	3714      	adds	r7, #20
 8002332:	46bd      	mov	sp, r7
 8002334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002338:	4770      	bx	lr
 800233a:	bf00      	nop
 800233c:	20000008 	.word	0x20000008
 8002340:	20000004 	.word	0x20000004

08002344 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002344:	b580      	push	{r7, lr}
 8002346:	b082      	sub	sp, #8
 8002348:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800234a:	f000 fdc1 	bl	8002ed0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800234e:	f000 f831 	bl	80023b4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002352:	f7ff f985 	bl	8001660 <MX_GPIO_Init>
  MX_DMA_Init();
 8002356:	f7fe ff23 	bl	80011a0 <MX_DMA_Init>
  MX_SPI1_Init();
 800235a:	f000 fa0d 	bl	8002778 <MX_SPI1_Init>
  MX_FSMC_Init();
 800235e:	f7ff f8af 	bl	80014c0 <MX_FSMC_Init>
  MX_I2C1_Init();
 8002362:	f7ff fa83 	bl	800186c <MX_I2C1_Init>
  MX_TIM13_Init();
 8002366:	f000 fc1f 	bl	8002ba8 <MX_TIM13_Init>
  MX_TIM2_Init();
 800236a:	f000 fbd1 	bl	8002b10 <MX_TIM2_Init>
  MX_ADC1_Init();
 800236e:	f7fe fde3 	bl	8000f38 <MX_ADC1_Init>
  MX_USART1_UART_Init();
 8002372:	f000 fd09 	bl	8002d88 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  system_init();
 8002376:	f000 f887 	bl	8002488 <system_init>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
 lcd_Clear(BLACK);
 800237a:	2000      	movs	r0, #0
 800237c:	f7ff fb6a 	bl	8001a54 <lcd_Clear>
 int dur_led = 20;
 8002380:	2314      	movs	r3, #20
 8002382:	607b      	str	r3, [r7, #4]
  while (1)
  {
	  while(!flag_timer2);
 8002384:	bf00      	nop
 8002386:	4b0a      	ldr	r3, [pc, #40]	@ (80023b0 <main+0x6c>)
 8002388:	881b      	ldrh	r3, [r3, #0]
 800238a:	2b00      	cmp	r3, #0
 800238c:	d0fb      	beq.n	8002386 <main+0x42>
	  flag_timer2 = 0;
 800238e:	4b08      	ldr	r3, [pc, #32]	@ (80023b0 <main+0x6c>)
 8002390:	2200      	movs	r2, #0
 8002392:	801a      	strh	r2, [r3, #0]
//	  button_Scan();
//	  test_LedDebug();
//	  test_Adc();
//	  test_Buzzer();
	  LineChart();
 8002394:	f7ff f842 	bl	800141c <LineChart>

	  dur_led--;
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	3b01      	subs	r3, #1
 800239c:	607b      	str	r3, [r7, #4]
	  if (dur_led == 0){
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	2b00      	cmp	r3, #0
 80023a2:	d1ef      	bne.n	8002384 <main+0x40>
		  dur_led = 20;
 80023a4:	2314      	movs	r3, #20
 80023a6:	607b      	str	r3, [r7, #4]
		  check_led();
 80023a8:	f000 f884 	bl	80024b4 <check_led>
  {
 80023ac:	e7ea      	b.n	8002384 <main+0x40>
 80023ae:	bf00      	nop
 80023b0:	20000506 	.word	0x20000506

080023b4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80023b4:	b580      	push	{r7, lr}
 80023b6:	b094      	sub	sp, #80	@ 0x50
 80023b8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80023ba:	f107 0320 	add.w	r3, r7, #32
 80023be:	2230      	movs	r2, #48	@ 0x30
 80023c0:	2100      	movs	r1, #0
 80023c2:	4618      	mov	r0, r3
 80023c4:	f006 f89d 	bl	8008502 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80023c8:	f107 030c 	add.w	r3, r7, #12
 80023cc:	2200      	movs	r2, #0
 80023ce:	601a      	str	r2, [r3, #0]
 80023d0:	605a      	str	r2, [r3, #4]
 80023d2:	609a      	str	r2, [r3, #8]
 80023d4:	60da      	str	r2, [r3, #12]
 80023d6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80023d8:	2300      	movs	r3, #0
 80023da:	60bb      	str	r3, [r7, #8]
 80023dc:	4b28      	ldr	r3, [pc, #160]	@ (8002480 <SystemClock_Config+0xcc>)
 80023de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023e0:	4a27      	ldr	r2, [pc, #156]	@ (8002480 <SystemClock_Config+0xcc>)
 80023e2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80023e6:	6413      	str	r3, [r2, #64]	@ 0x40
 80023e8:	4b25      	ldr	r3, [pc, #148]	@ (8002480 <SystemClock_Config+0xcc>)
 80023ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023ec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80023f0:	60bb      	str	r3, [r7, #8]
 80023f2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80023f4:	2300      	movs	r3, #0
 80023f6:	607b      	str	r3, [r7, #4]
 80023f8:	4b22      	ldr	r3, [pc, #136]	@ (8002484 <SystemClock_Config+0xd0>)
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	4a21      	ldr	r2, [pc, #132]	@ (8002484 <SystemClock_Config+0xd0>)
 80023fe:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002402:	6013      	str	r3, [r2, #0]
 8002404:	4b1f      	ldr	r3, [pc, #124]	@ (8002484 <SystemClock_Config+0xd0>)
 8002406:	681b      	ldr	r3, [r3, #0]
 8002408:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800240c:	607b      	str	r3, [r7, #4]
 800240e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002410:	2302      	movs	r3, #2
 8002412:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002414:	2301      	movs	r3, #1
 8002416:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002418:	2310      	movs	r3, #16
 800241a:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800241c:	2302      	movs	r3, #2
 800241e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002420:	2300      	movs	r3, #0
 8002422:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8002424:	2308      	movs	r3, #8
 8002426:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8002428:	23a8      	movs	r3, #168	@ 0xa8
 800242a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800242c:	2302      	movs	r3, #2
 800242e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002430:	2304      	movs	r3, #4
 8002432:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002434:	f107 0320 	add.w	r3, r7, #32
 8002438:	4618      	mov	r0, r3
 800243a:	f002 f9ff 	bl	800483c <HAL_RCC_OscConfig>
 800243e:	4603      	mov	r3, r0
 8002440:	2b00      	cmp	r3, #0
 8002442:	d001      	beq.n	8002448 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8002444:	f000 f88e 	bl	8002564 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002448:	230f      	movs	r3, #15
 800244a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800244c:	2302      	movs	r3, #2
 800244e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002450:	2300      	movs	r3, #0
 8002452:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002454:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8002458:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 800245a:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 800245e:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002460:	f107 030c 	add.w	r3, r7, #12
 8002464:	2105      	movs	r1, #5
 8002466:	4618      	mov	r0, r3
 8002468:	f002 fc60 	bl	8004d2c <HAL_RCC_ClockConfig>
 800246c:	4603      	mov	r3, r0
 800246e:	2b00      	cmp	r3, #0
 8002470:	d001      	beq.n	8002476 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8002472:	f000 f877 	bl	8002564 <Error_Handler>
  }
}
 8002476:	bf00      	nop
 8002478:	3750      	adds	r7, #80	@ 0x50
 800247a:	46bd      	mov	sp, r7
 800247c:	bd80      	pop	{r7, pc}
 800247e:	bf00      	nop
 8002480:	40023800 	.word	0x40023800
 8002484:	40007000 	.word	0x40007000

08002488 <system_init>:

/* USER CODE BEGIN 4 */
void system_init(){
 8002488:	b580      	push	{r7, lr}
 800248a:	af00      	add	r7, sp, #0
	  timer_init();
 800248c:	f000 f924 	bl	80026d8 <timer_init>
	  led7_init();
 8002490:	f7ff fe9c 	bl	80021cc <led7_init>
	  button_init();
 8002494:	f7fe fe6e 	bl	8001174 <button_init>
	  lcd_init();
 8002498:	f7ff fcd4 	bl	8001e44 <lcd_init>
	  uart_init_rs232();
 800249c:	f000 fc48 	bl	8002d30 <uart_init_rs232>
	  sensor_init();
 80024a0:	f000 f866 	bl	8002570 <sensor_init>
	  buzzer_init();
 80024a4:	f7fe fe72 	bl	800118c <buzzer_init>
	  setTimer2(50);
 80024a8:	2032      	movs	r0, #50	@ 0x32
 80024aa:	f000 f91f 	bl	80026ec <setTimer2>
}
 80024ae:	bf00      	nop
 80024b0:	bd80      	pop	{r7, pc}
	...

080024b4 <check_led>:
        return 0;
}

uint8_t count_adc = 0;

void check_led(){
 80024b4:	b580      	push	{r7, lr}
 80024b6:	af00      	add	r7, sp, #0
	led7_SetDigit(minute[0], 1, 0);
 80024b8:	4b28      	ldr	r3, [pc, #160]	@ (800255c <check_led+0xa8>)
 80024ba:	781b      	ldrb	r3, [r3, #0]
 80024bc:	2200      	movs	r2, #0
 80024be:	2101      	movs	r1, #1
 80024c0:	4618      	mov	r0, r3
 80024c2:	f7ff ff1b 	bl	80022fc <led7_SetDigit>
	led7_SetDigit(minute[1], 0, 0);
 80024c6:	4b25      	ldr	r3, [pc, #148]	@ (800255c <check_led+0xa8>)
 80024c8:	785b      	ldrb	r3, [r3, #1]
 80024ca:	2200      	movs	r2, #0
 80024cc:	2100      	movs	r1, #0
 80024ce:	4618      	mov	r0, r3
 80024d0:	f7ff ff14 	bl	80022fc <led7_SetDigit>
	led7_SetDigit(second[0], 3, 0);
 80024d4:	4b22      	ldr	r3, [pc, #136]	@ (8002560 <check_led+0xac>)
 80024d6:	781b      	ldrb	r3, [r3, #0]
 80024d8:	2200      	movs	r2, #0
 80024da:	2103      	movs	r1, #3
 80024dc:	4618      	mov	r0, r3
 80024de:	f7ff ff0d 	bl	80022fc <led7_SetDigit>
	led7_SetDigit(second[1], 2, 0);
 80024e2:	4b1f      	ldr	r3, [pc, #124]	@ (8002560 <check_led+0xac>)
 80024e4:	785b      	ldrb	r3, [r3, #1]
 80024e6:	2200      	movs	r2, #0
 80024e8:	2102      	movs	r1, #2
 80024ea:	4618      	mov	r0, r3
 80024ec:	f7ff ff06 	bl	80022fc <led7_SetDigit>

	second[0]++;
 80024f0:	4b1b      	ldr	r3, [pc, #108]	@ (8002560 <check_led+0xac>)
 80024f2:	781b      	ldrb	r3, [r3, #0]
 80024f4:	3301      	adds	r3, #1
 80024f6:	b2da      	uxtb	r2, r3
 80024f8:	4b19      	ldr	r3, [pc, #100]	@ (8002560 <check_led+0xac>)
 80024fa:	701a      	strb	r2, [r3, #0]
	if (second[0] > 9) {
 80024fc:	4b18      	ldr	r3, [pc, #96]	@ (8002560 <check_led+0xac>)
 80024fe:	781b      	ldrb	r3, [r3, #0]
 8002500:	2b09      	cmp	r3, #9
 8002502:	d929      	bls.n	8002558 <check_led+0xa4>
		second[0] = 0;
 8002504:	4b16      	ldr	r3, [pc, #88]	@ (8002560 <check_led+0xac>)
 8002506:	2200      	movs	r2, #0
 8002508:	701a      	strb	r2, [r3, #0]
		second[1]++;
 800250a:	4b15      	ldr	r3, [pc, #84]	@ (8002560 <check_led+0xac>)
 800250c:	785b      	ldrb	r3, [r3, #1]
 800250e:	3301      	adds	r3, #1
 8002510:	b2da      	uxtb	r2, r3
 8002512:	4b13      	ldr	r3, [pc, #76]	@ (8002560 <check_led+0xac>)
 8002514:	705a      	strb	r2, [r3, #1]
		if (second[1] > 9) {
 8002516:	4b12      	ldr	r3, [pc, #72]	@ (8002560 <check_led+0xac>)
 8002518:	785b      	ldrb	r3, [r3, #1]
 800251a:	2b09      	cmp	r3, #9
 800251c:	d91c      	bls.n	8002558 <check_led+0xa4>
			second[1] = 0;
 800251e:	4b10      	ldr	r3, [pc, #64]	@ (8002560 <check_led+0xac>)
 8002520:	2200      	movs	r2, #0
 8002522:	705a      	strb	r2, [r3, #1]
			minute[0]++;
 8002524:	4b0d      	ldr	r3, [pc, #52]	@ (800255c <check_led+0xa8>)
 8002526:	781b      	ldrb	r3, [r3, #0]
 8002528:	3301      	adds	r3, #1
 800252a:	b2da      	uxtb	r2, r3
 800252c:	4b0b      	ldr	r3, [pc, #44]	@ (800255c <check_led+0xa8>)
 800252e:	701a      	strb	r2, [r3, #0]
			if (minute[0] > 9) {
 8002530:	4b0a      	ldr	r3, [pc, #40]	@ (800255c <check_led+0xa8>)
 8002532:	781b      	ldrb	r3, [r3, #0]
 8002534:	2b09      	cmp	r3, #9
 8002536:	d90f      	bls.n	8002558 <check_led+0xa4>
				minute[0] = 0;
 8002538:	4b08      	ldr	r3, [pc, #32]	@ (800255c <check_led+0xa8>)
 800253a:	2200      	movs	r2, #0
 800253c:	701a      	strb	r2, [r3, #0]
				minute[1]++;
 800253e:	4b07      	ldr	r3, [pc, #28]	@ (800255c <check_led+0xa8>)
 8002540:	785b      	ldrb	r3, [r3, #1]
 8002542:	3301      	adds	r3, #1
 8002544:	b2da      	uxtb	r2, r3
 8002546:	4b05      	ldr	r3, [pc, #20]	@ (800255c <check_led+0xa8>)
 8002548:	705a      	strb	r2, [r3, #1]
				if (minute[1] > 9) minute[1] = 0;
 800254a:	4b04      	ldr	r3, [pc, #16]	@ (800255c <check_led+0xa8>)
 800254c:	785b      	ldrb	r3, [r3, #1]
 800254e:	2b09      	cmp	r3, #9
 8002550:	d902      	bls.n	8002558 <check_led+0xa4>
 8002552:	4b02      	ldr	r3, [pc, #8]	@ (800255c <check_led+0xa8>)
 8002554:	2200      	movs	r2, #0
 8002556:	705a      	strb	r2, [r3, #1]
			}
		}
	}
}
 8002558:	bf00      	nop
 800255a:	bd80      	pop	{r7, pc}
 800255c:	200004f4 	.word	0x200004f4
 8002560:	200004f8 	.word	0x200004f8

08002564 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002564:	b480      	push	{r7}
 8002566:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002568:	b672      	cpsid	i
}
 800256a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800256c:	bf00      	nop
 800256e:	e7fd      	b.n	800256c <Error_Handler+0x8>

08002570 <sensor_init>:
 */
#include "sensor.h"

uint16_t adc_receive[5];

void sensor_init(){
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
	HAL_ADC_Start_DMA(&hadc1, (uint16_t*)adc_receive, 5);
 8002574:	2205      	movs	r2, #5
 8002576:	4903      	ldr	r1, [pc, #12]	@ (8002584 <sensor_init+0x14>)
 8002578:	4803      	ldr	r0, [pc, #12]	@ (8002588 <sensor_init+0x18>)
 800257a:	f000 fd83 	bl	8003084 <HAL_ADC_Start_DMA>
}
 800257e:	bf00      	nop
 8002580:	bd80      	pop	{r7, pc}
 8002582:	bf00      	nop
 8002584:	200004fc 	.word	0x200004fc
 8002588:	20000204 	.word	0x20000204

0800258c <sensor_Read>:

void sensor_Read(){
 800258c:	b580      	push	{r7, lr}
 800258e:	af00      	add	r7, sp, #0
	HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_receive, 5);
 8002590:	2205      	movs	r2, #5
 8002592:	4903      	ldr	r1, [pc, #12]	@ (80025a0 <sensor_Read+0x14>)
 8002594:	4803      	ldr	r0, [pc, #12]	@ (80025a4 <sensor_Read+0x18>)
 8002596:	f000 fd75 	bl	8003084 <HAL_ADC_Start_DMA>
}
 800259a:	bf00      	nop
 800259c:	bd80      	pop	{r7, pc}
 800259e:	bf00      	nop
 80025a0:	200004fc 	.word	0x200004fc
 80025a4:	20000204 	.word	0x20000204

080025a8 <sensor_GetVoltage>:

uint16_t sensor_GetPotentiometer(){
	return adc_receive[3];
}

float sensor_GetVoltage(){
 80025a8:	b580      	push	{r7, lr}
 80025aa:	af00      	add	r7, sp, #0
	return ((float)adc_receive[0]*3.3*12)/(4095*1.565);
 80025ac:	4b1a      	ldr	r3, [pc, #104]	@ (8002618 <sensor_GetVoltage+0x70>)
 80025ae:	881b      	ldrh	r3, [r3, #0]
 80025b0:	ee07 3a90 	vmov	s15, r3
 80025b4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80025b8:	ee17 0a90 	vmov	r0, s15
 80025bc:	f7fd ffc4 	bl	8000548 <__aeabi_f2d>
 80025c0:	a311      	add	r3, pc, #68	@ (adr r3, 8002608 <sensor_GetVoltage+0x60>)
 80025c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025c6:	f7fe f817 	bl	80005f8 <__aeabi_dmul>
 80025ca:	4602      	mov	r2, r0
 80025cc:	460b      	mov	r3, r1
 80025ce:	4610      	mov	r0, r2
 80025d0:	4619      	mov	r1, r3
 80025d2:	f04f 0200 	mov.w	r2, #0
 80025d6:	4b11      	ldr	r3, [pc, #68]	@ (800261c <sensor_GetVoltage+0x74>)
 80025d8:	f7fe f80e 	bl	80005f8 <__aeabi_dmul>
 80025dc:	4602      	mov	r2, r0
 80025de:	460b      	mov	r3, r1
 80025e0:	4610      	mov	r0, r2
 80025e2:	4619      	mov	r1, r3
 80025e4:	a30a      	add	r3, pc, #40	@ (adr r3, 8002610 <sensor_GetVoltage+0x68>)
 80025e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025ea:	f7fe f92f 	bl	800084c <__aeabi_ddiv>
 80025ee:	4602      	mov	r2, r0
 80025f0:	460b      	mov	r3, r1
 80025f2:	4610      	mov	r0, r2
 80025f4:	4619      	mov	r1, r3
 80025f6:	f7fe fad7 	bl	8000ba8 <__aeabi_d2f>
 80025fa:	4603      	mov	r3, r0
 80025fc:	ee07 3a90 	vmov	s15, r3
}
 8002600:	eeb0 0a67 	vmov.f32	s0, s15
 8002604:	bd80      	pop	{r7, pc}
 8002606:	bf00      	nop
 8002608:	66666666 	.word	0x66666666
 800260c:	400a6666 	.word	0x400a6666
 8002610:	cccccccd 	.word	0xcccccccd
 8002614:	40b908ac 	.word	0x40b908ac
 8002618:	200004fc 	.word	0x200004fc
 800261c:	40280000 	.word	0x40280000

08002620 <sensor_GetCurrent>:

float sensor_GetCurrent(){
 8002620:	b580      	push	{r7, lr}
 8002622:	af00      	add	r7, sp, #0
	return (((float)adc_receive[1]*3.3*1000)/(4095*0.647)-2.5)*5/2.5;
 8002624:	4b28      	ldr	r3, [pc, #160]	@ (80026c8 <sensor_GetCurrent+0xa8>)
 8002626:	885b      	ldrh	r3, [r3, #2]
 8002628:	ee07 3a90 	vmov	s15, r3
 800262c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002630:	ee17 0a90 	vmov	r0, s15
 8002634:	f7fd ff88 	bl	8000548 <__aeabi_f2d>
 8002638:	a31f      	add	r3, pc, #124	@ (adr r3, 80026b8 <sensor_GetCurrent+0x98>)
 800263a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800263e:	f7fd ffdb 	bl	80005f8 <__aeabi_dmul>
 8002642:	4602      	mov	r2, r0
 8002644:	460b      	mov	r3, r1
 8002646:	4610      	mov	r0, r2
 8002648:	4619      	mov	r1, r3
 800264a:	f04f 0200 	mov.w	r2, #0
 800264e:	4b1f      	ldr	r3, [pc, #124]	@ (80026cc <sensor_GetCurrent+0xac>)
 8002650:	f7fd ffd2 	bl	80005f8 <__aeabi_dmul>
 8002654:	4602      	mov	r2, r0
 8002656:	460b      	mov	r3, r1
 8002658:	4610      	mov	r0, r2
 800265a:	4619      	mov	r1, r3
 800265c:	a318      	add	r3, pc, #96	@ (adr r3, 80026c0 <sensor_GetCurrent+0xa0>)
 800265e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002662:	f7fe f8f3 	bl	800084c <__aeabi_ddiv>
 8002666:	4602      	mov	r2, r0
 8002668:	460b      	mov	r3, r1
 800266a:	4610      	mov	r0, r2
 800266c:	4619      	mov	r1, r3
 800266e:	f04f 0200 	mov.w	r2, #0
 8002672:	4b17      	ldr	r3, [pc, #92]	@ (80026d0 <sensor_GetCurrent+0xb0>)
 8002674:	f7fd fe08 	bl	8000288 <__aeabi_dsub>
 8002678:	4602      	mov	r2, r0
 800267a:	460b      	mov	r3, r1
 800267c:	4610      	mov	r0, r2
 800267e:	4619      	mov	r1, r3
 8002680:	f04f 0200 	mov.w	r2, #0
 8002684:	4b13      	ldr	r3, [pc, #76]	@ (80026d4 <sensor_GetCurrent+0xb4>)
 8002686:	f7fd ffb7 	bl	80005f8 <__aeabi_dmul>
 800268a:	4602      	mov	r2, r0
 800268c:	460b      	mov	r3, r1
 800268e:	4610      	mov	r0, r2
 8002690:	4619      	mov	r1, r3
 8002692:	f04f 0200 	mov.w	r2, #0
 8002696:	4b0e      	ldr	r3, [pc, #56]	@ (80026d0 <sensor_GetCurrent+0xb0>)
 8002698:	f7fe f8d8 	bl	800084c <__aeabi_ddiv>
 800269c:	4602      	mov	r2, r0
 800269e:	460b      	mov	r3, r1
 80026a0:	4610      	mov	r0, r2
 80026a2:	4619      	mov	r1, r3
 80026a4:	f7fe fa80 	bl	8000ba8 <__aeabi_d2f>
 80026a8:	4603      	mov	r3, r0
 80026aa:	ee07 3a90 	vmov	s15, r3
}
 80026ae:	eeb0 0a67 	vmov.f32	s0, s15
 80026b2:	bd80      	pop	{r7, pc}
 80026b4:	f3af 8000 	nop.w
 80026b8:	66666666 	.word	0x66666666
 80026bc:	400a6666 	.word	0x400a6666
 80026c0:	147ae148 	.word	0x147ae148
 80026c4:	40a4b2ee 	.word	0x40a4b2ee
 80026c8:	200004fc 	.word	0x200004fc
 80026cc:	408f4000 	.word	0x408f4000
 80026d0:	40040000 	.word	0x40040000
 80026d4:	40140000 	.word	0x40140000

080026d8 <timer_init>:

uint16_t flag_timer2 = 0;
uint16_t timer2_counter = 0;
uint16_t timer2_MUL = 0;

void timer_init(){
 80026d8:	b580      	push	{r7, lr}
 80026da:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Start_IT(&htim2);
 80026dc:	4802      	ldr	r0, [pc, #8]	@ (80026e8 <timer_init+0x10>)
 80026de:	f003 f885 	bl	80057ec <HAL_TIM_Base_Start_IT>
}
 80026e2:	bf00      	nop
 80026e4:	bd80      	pop	{r7, pc}
 80026e6:	bf00      	nop
 80026e8:	20000568 	.word	0x20000568

080026ec <setTimer2>:

void setTimer2(uint16_t duration){
 80026ec:	b480      	push	{r7}
 80026ee:	b083      	sub	sp, #12
 80026f0:	af00      	add	r7, sp, #0
 80026f2:	4603      	mov	r3, r0
 80026f4:	80fb      	strh	r3, [r7, #6]
	timer2_MUL = duration/TIMER_CYCLE_2;
 80026f6:	4a08      	ldr	r2, [pc, #32]	@ (8002718 <setTimer2+0x2c>)
 80026f8:	88fb      	ldrh	r3, [r7, #6]
 80026fa:	8013      	strh	r3, [r2, #0]
	timer2_counter = timer2_MUL;
 80026fc:	4b06      	ldr	r3, [pc, #24]	@ (8002718 <setTimer2+0x2c>)
 80026fe:	881a      	ldrh	r2, [r3, #0]
 8002700:	4b06      	ldr	r3, [pc, #24]	@ (800271c <setTimer2+0x30>)
 8002702:	801a      	strh	r2, [r3, #0]
	flag_timer2 = 0;
 8002704:	4b06      	ldr	r3, [pc, #24]	@ (8002720 <setTimer2+0x34>)
 8002706:	2200      	movs	r2, #0
 8002708:	801a      	strh	r2, [r3, #0]
}
 800270a:	bf00      	nop
 800270c:	370c      	adds	r7, #12
 800270e:	46bd      	mov	sp, r7
 8002710:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002714:	4770      	bx	lr
 8002716:	bf00      	nop
 8002718:	2000050a 	.word	0x2000050a
 800271c:	20000508 	.word	0x20000508
 8002720:	20000506 	.word	0x20000506

08002724 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8002724:	b580      	push	{r7, lr}
 8002726:	b082      	sub	sp, #8
 8002728:	af00      	add	r7, sp, #0
 800272a:	6078      	str	r0, [r7, #4]
	if(htim->Instance == TIM2){
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002734:	d116      	bne.n	8002764 <HAL_TIM_PeriodElapsedCallback+0x40>
		if(timer2_counter > 0){
 8002736:	4b0d      	ldr	r3, [pc, #52]	@ (800276c <HAL_TIM_PeriodElapsedCallback+0x48>)
 8002738:	881b      	ldrh	r3, [r3, #0]
 800273a:	2b00      	cmp	r3, #0
 800273c:	d010      	beq.n	8002760 <HAL_TIM_PeriodElapsedCallback+0x3c>
			timer2_counter--;
 800273e:	4b0b      	ldr	r3, [pc, #44]	@ (800276c <HAL_TIM_PeriodElapsedCallback+0x48>)
 8002740:	881b      	ldrh	r3, [r3, #0]
 8002742:	3b01      	subs	r3, #1
 8002744:	b29a      	uxth	r2, r3
 8002746:	4b09      	ldr	r3, [pc, #36]	@ (800276c <HAL_TIM_PeriodElapsedCallback+0x48>)
 8002748:	801a      	strh	r2, [r3, #0]
			if(timer2_counter == 0) {
 800274a:	4b08      	ldr	r3, [pc, #32]	@ (800276c <HAL_TIM_PeriodElapsedCallback+0x48>)
 800274c:	881b      	ldrh	r3, [r3, #0]
 800274e:	2b00      	cmp	r3, #0
 8002750:	d106      	bne.n	8002760 <HAL_TIM_PeriodElapsedCallback+0x3c>
				flag_timer2 = 1;
 8002752:	4b07      	ldr	r3, [pc, #28]	@ (8002770 <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8002754:	2201      	movs	r2, #1
 8002756:	801a      	strh	r2, [r3, #0]
				timer2_counter = timer2_MUL;
 8002758:	4b06      	ldr	r3, [pc, #24]	@ (8002774 <HAL_TIM_PeriodElapsedCallback+0x50>)
 800275a:	881a      	ldrh	r2, [r3, #0]
 800275c:	4b03      	ldr	r3, [pc, #12]	@ (800276c <HAL_TIM_PeriodElapsedCallback+0x48>)
 800275e:	801a      	strh	r2, [r3, #0]
			}
		}
		led7_Scan();
 8002760:	f7ff fd40 	bl	80021e4 <led7_Scan>
	}
}
 8002764:	bf00      	nop
 8002766:	3708      	adds	r7, #8
 8002768:	46bd      	mov	sp, r7
 800276a:	bd80      	pop	{r7, pc}
 800276c:	20000508 	.word	0x20000508
 8002770:	20000506 	.word	0x20000506
 8002774:	2000050a 	.word	0x2000050a

08002778 <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8002778:	b580      	push	{r7, lr}
 800277a:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 800277c:	4b17      	ldr	r3, [pc, #92]	@ (80027dc <MX_SPI1_Init+0x64>)
 800277e:	4a18      	ldr	r2, [pc, #96]	@ (80027e0 <MX_SPI1_Init+0x68>)
 8002780:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002782:	4b16      	ldr	r3, [pc, #88]	@ (80027dc <MX_SPI1_Init+0x64>)
 8002784:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002788:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800278a:	4b14      	ldr	r3, [pc, #80]	@ (80027dc <MX_SPI1_Init+0x64>)
 800278c:	2200      	movs	r2, #0
 800278e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8002790:	4b12      	ldr	r3, [pc, #72]	@ (80027dc <MX_SPI1_Init+0x64>)
 8002792:	2200      	movs	r2, #0
 8002794:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002796:	4b11      	ldr	r3, [pc, #68]	@ (80027dc <MX_SPI1_Init+0x64>)
 8002798:	2200      	movs	r2, #0
 800279a:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800279c:	4b0f      	ldr	r3, [pc, #60]	@ (80027dc <MX_SPI1_Init+0x64>)
 800279e:	2200      	movs	r2, #0
 80027a0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80027a2:	4b0e      	ldr	r3, [pc, #56]	@ (80027dc <MX_SPI1_Init+0x64>)
 80027a4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80027a8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80027aa:	4b0c      	ldr	r3, [pc, #48]	@ (80027dc <MX_SPI1_Init+0x64>)
 80027ac:	2200      	movs	r2, #0
 80027ae:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80027b0:	4b0a      	ldr	r3, [pc, #40]	@ (80027dc <MX_SPI1_Init+0x64>)
 80027b2:	2200      	movs	r2, #0
 80027b4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80027b6:	4b09      	ldr	r3, [pc, #36]	@ (80027dc <MX_SPI1_Init+0x64>)
 80027b8:	2200      	movs	r2, #0
 80027ba:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80027bc:	4b07      	ldr	r3, [pc, #28]	@ (80027dc <MX_SPI1_Init+0x64>)
 80027be:	2200      	movs	r2, #0
 80027c0:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 80027c2:	4b06      	ldr	r3, [pc, #24]	@ (80027dc <MX_SPI1_Init+0x64>)
 80027c4:	220a      	movs	r2, #10
 80027c6:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80027c8:	4804      	ldr	r0, [pc, #16]	@ (80027dc <MX_SPI1_Init+0x64>)
 80027ca:	f002 fccf 	bl	800516c <HAL_SPI_Init>
 80027ce:	4603      	mov	r3, r0
 80027d0:	2b00      	cmp	r3, #0
 80027d2:	d001      	beq.n	80027d8 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 80027d4:	f7ff fec6 	bl	8002564 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80027d8:	bf00      	nop
 80027da:	bd80      	pop	{r7, pc}
 80027dc:	2000050c 	.word	0x2000050c
 80027e0:	40013000 	.word	0x40013000

080027e4 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 80027e4:	b580      	push	{r7, lr}
 80027e6:	b08a      	sub	sp, #40	@ 0x28
 80027e8:	af00      	add	r7, sp, #0
 80027ea:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027ec:	f107 0314 	add.w	r3, r7, #20
 80027f0:	2200      	movs	r2, #0
 80027f2:	601a      	str	r2, [r3, #0]
 80027f4:	605a      	str	r2, [r3, #4]
 80027f6:	609a      	str	r2, [r3, #8]
 80027f8:	60da      	str	r2, [r3, #12]
 80027fa:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	4a19      	ldr	r2, [pc, #100]	@ (8002868 <HAL_SPI_MspInit+0x84>)
 8002802:	4293      	cmp	r3, r2
 8002804:	d12b      	bne.n	800285e <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002806:	2300      	movs	r3, #0
 8002808:	613b      	str	r3, [r7, #16]
 800280a:	4b18      	ldr	r3, [pc, #96]	@ (800286c <HAL_SPI_MspInit+0x88>)
 800280c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800280e:	4a17      	ldr	r2, [pc, #92]	@ (800286c <HAL_SPI_MspInit+0x88>)
 8002810:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002814:	6453      	str	r3, [r2, #68]	@ 0x44
 8002816:	4b15      	ldr	r3, [pc, #84]	@ (800286c <HAL_SPI_MspInit+0x88>)
 8002818:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800281a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800281e:	613b      	str	r3, [r7, #16]
 8002820:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002822:	2300      	movs	r3, #0
 8002824:	60fb      	str	r3, [r7, #12]
 8002826:	4b11      	ldr	r3, [pc, #68]	@ (800286c <HAL_SPI_MspInit+0x88>)
 8002828:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800282a:	4a10      	ldr	r2, [pc, #64]	@ (800286c <HAL_SPI_MspInit+0x88>)
 800282c:	f043 0302 	orr.w	r3, r3, #2
 8002830:	6313      	str	r3, [r2, #48]	@ 0x30
 8002832:	4b0e      	ldr	r3, [pc, #56]	@ (800286c <HAL_SPI_MspInit+0x88>)
 8002834:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002836:	f003 0302 	and.w	r3, r3, #2
 800283a:	60fb      	str	r3, [r7, #12]
 800283c:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PB3     ------> SPI1_SCK
    PB4     ------> SPI1_MISO
    PB5     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 800283e:	2338      	movs	r3, #56	@ 0x38
 8002840:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002842:	2302      	movs	r3, #2
 8002844:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002846:	2300      	movs	r3, #0
 8002848:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800284a:	2303      	movs	r3, #3
 800284c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800284e:	2305      	movs	r3, #5
 8002850:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002852:	f107 0314 	add.w	r3, r7, #20
 8002856:	4619      	mov	r1, r3
 8002858:	4805      	ldr	r0, [pc, #20]	@ (8002870 <HAL_SPI_MspInit+0x8c>)
 800285a:	f001 fcf5 	bl	8004248 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 800285e:	bf00      	nop
 8002860:	3728      	adds	r7, #40	@ 0x28
 8002862:	46bd      	mov	sp, r7
 8002864:	bd80      	pop	{r7, pc}
 8002866:	bf00      	nop
 8002868:	40013000 	.word	0x40013000
 800286c:	40023800 	.word	0x40023800
 8002870:	40020400 	.word	0x40020400

08002874 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002874:	b480      	push	{r7}
 8002876:	b083      	sub	sp, #12
 8002878:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800287a:	2300      	movs	r3, #0
 800287c:	607b      	str	r3, [r7, #4]
 800287e:	4b10      	ldr	r3, [pc, #64]	@ (80028c0 <HAL_MspInit+0x4c>)
 8002880:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002882:	4a0f      	ldr	r2, [pc, #60]	@ (80028c0 <HAL_MspInit+0x4c>)
 8002884:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002888:	6453      	str	r3, [r2, #68]	@ 0x44
 800288a:	4b0d      	ldr	r3, [pc, #52]	@ (80028c0 <HAL_MspInit+0x4c>)
 800288c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800288e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002892:	607b      	str	r3, [r7, #4]
 8002894:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002896:	2300      	movs	r3, #0
 8002898:	603b      	str	r3, [r7, #0]
 800289a:	4b09      	ldr	r3, [pc, #36]	@ (80028c0 <HAL_MspInit+0x4c>)
 800289c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800289e:	4a08      	ldr	r2, [pc, #32]	@ (80028c0 <HAL_MspInit+0x4c>)
 80028a0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80028a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80028a6:	4b06      	ldr	r3, [pc, #24]	@ (80028c0 <HAL_MspInit+0x4c>)
 80028a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028aa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80028ae:	603b      	str	r3, [r7, #0]
 80028b0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80028b2:	bf00      	nop
 80028b4:	370c      	adds	r7, #12
 80028b6:	46bd      	mov	sp, r7
 80028b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028bc:	4770      	bx	lr
 80028be:	bf00      	nop
 80028c0:	40023800 	.word	0x40023800

080028c4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80028c4:	b480      	push	{r7}
 80028c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80028c8:	bf00      	nop
 80028ca:	e7fd      	b.n	80028c8 <NMI_Handler+0x4>

080028cc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80028cc:	b480      	push	{r7}
 80028ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80028d0:	bf00      	nop
 80028d2:	e7fd      	b.n	80028d0 <HardFault_Handler+0x4>

080028d4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80028d4:	b480      	push	{r7}
 80028d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80028d8:	bf00      	nop
 80028da:	e7fd      	b.n	80028d8 <MemManage_Handler+0x4>

080028dc <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80028dc:	b480      	push	{r7}
 80028de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80028e0:	bf00      	nop
 80028e2:	e7fd      	b.n	80028e0 <BusFault_Handler+0x4>

080028e4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80028e4:	b480      	push	{r7}
 80028e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80028e8:	bf00      	nop
 80028ea:	e7fd      	b.n	80028e8 <UsageFault_Handler+0x4>

080028ec <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80028ec:	b480      	push	{r7}
 80028ee:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80028f0:	bf00      	nop
 80028f2:	46bd      	mov	sp, r7
 80028f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f8:	4770      	bx	lr

080028fa <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80028fa:	b480      	push	{r7}
 80028fc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80028fe:	bf00      	nop
 8002900:	46bd      	mov	sp, r7
 8002902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002906:	4770      	bx	lr

08002908 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002908:	b480      	push	{r7}
 800290a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800290c:	bf00      	nop
 800290e:	46bd      	mov	sp, r7
 8002910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002914:	4770      	bx	lr

08002916 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002916:	b580      	push	{r7, lr}
 8002918:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800291a:	f000 fb2b 	bl	8002f74 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800291e:	bf00      	nop
 8002920:	bd80      	pop	{r7, pc}
	...

08002924 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002924:	b580      	push	{r7, lr}
 8002926:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002928:	4802      	ldr	r0, [pc, #8]	@ (8002934 <TIM2_IRQHandler+0x10>)
 800292a:	f003 f8f1 	bl	8005b10 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800292e:	bf00      	nop
 8002930:	bd80      	pop	{r7, pc}
 8002932:	bf00      	nop
 8002934:	20000568 	.word	0x20000568

08002938 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002938:	b580      	push	{r7, lr}
 800293a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800293c:	4802      	ldr	r0, [pc, #8]	@ (8002948 <USART1_IRQHandler+0x10>)
 800293e:	f004 f835 	bl	80069ac <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002942:	bf00      	nop
 8002944:	bd80      	pop	{r7, pc}
 8002946:	bf00      	nop
 8002948:	200005fc 	.word	0x200005fc

0800294c <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 800294c:	b580      	push	{r7, lr}
 800294e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8002950:	4802      	ldr	r0, [pc, #8]	@ (800295c <DMA2_Stream0_IRQHandler+0x10>)
 8002952:	f001 fa0f 	bl	8003d74 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8002956:	bf00      	nop
 8002958:	bd80      	pop	{r7, pc}
 800295a:	bf00      	nop
 800295c:	2000024c 	.word	0x2000024c

08002960 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002960:	b480      	push	{r7}
 8002962:	af00      	add	r7, sp, #0
	return 1;
 8002964:	2301      	movs	r3, #1
}
 8002966:	4618      	mov	r0, r3
 8002968:	46bd      	mov	sp, r7
 800296a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800296e:	4770      	bx	lr

08002970 <_kill>:

int _kill(int pid, int sig)
{
 8002970:	b580      	push	{r7, lr}
 8002972:	b082      	sub	sp, #8
 8002974:	af00      	add	r7, sp, #0
 8002976:	6078      	str	r0, [r7, #4]
 8002978:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800297a:	f005 fe15 	bl	80085a8 <__errno>
 800297e:	4603      	mov	r3, r0
 8002980:	2216      	movs	r2, #22
 8002982:	601a      	str	r2, [r3, #0]
	return -1;
 8002984:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002988:	4618      	mov	r0, r3
 800298a:	3708      	adds	r7, #8
 800298c:	46bd      	mov	sp, r7
 800298e:	bd80      	pop	{r7, pc}

08002990 <_exit>:

void _exit (int status)
{
 8002990:	b580      	push	{r7, lr}
 8002992:	b082      	sub	sp, #8
 8002994:	af00      	add	r7, sp, #0
 8002996:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002998:	f04f 31ff 	mov.w	r1, #4294967295
 800299c:	6878      	ldr	r0, [r7, #4]
 800299e:	f7ff ffe7 	bl	8002970 <_kill>
	while (1) {}		/* Make sure we hang here */
 80029a2:	bf00      	nop
 80029a4:	e7fd      	b.n	80029a2 <_exit+0x12>

080029a6 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80029a6:	b580      	push	{r7, lr}
 80029a8:	b086      	sub	sp, #24
 80029aa:	af00      	add	r7, sp, #0
 80029ac:	60f8      	str	r0, [r7, #12]
 80029ae:	60b9      	str	r1, [r7, #8]
 80029b0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029b2:	2300      	movs	r3, #0
 80029b4:	617b      	str	r3, [r7, #20]
 80029b6:	e00a      	b.n	80029ce <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80029b8:	f3af 8000 	nop.w
 80029bc:	4601      	mov	r1, r0
 80029be:	68bb      	ldr	r3, [r7, #8]
 80029c0:	1c5a      	adds	r2, r3, #1
 80029c2:	60ba      	str	r2, [r7, #8]
 80029c4:	b2ca      	uxtb	r2, r1
 80029c6:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029c8:	697b      	ldr	r3, [r7, #20]
 80029ca:	3301      	adds	r3, #1
 80029cc:	617b      	str	r3, [r7, #20]
 80029ce:	697a      	ldr	r2, [r7, #20]
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	429a      	cmp	r2, r3
 80029d4:	dbf0      	blt.n	80029b8 <_read+0x12>
	}

return len;
 80029d6:	687b      	ldr	r3, [r7, #4]
}
 80029d8:	4618      	mov	r0, r3
 80029da:	3718      	adds	r7, #24
 80029dc:	46bd      	mov	sp, r7
 80029de:	bd80      	pop	{r7, pc}

080029e0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80029e0:	b580      	push	{r7, lr}
 80029e2:	b086      	sub	sp, #24
 80029e4:	af00      	add	r7, sp, #0
 80029e6:	60f8      	str	r0, [r7, #12]
 80029e8:	60b9      	str	r1, [r7, #8]
 80029ea:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ec:	2300      	movs	r3, #0
 80029ee:	617b      	str	r3, [r7, #20]
 80029f0:	e009      	b.n	8002a06 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80029f2:	68bb      	ldr	r3, [r7, #8]
 80029f4:	1c5a      	adds	r2, r3, #1
 80029f6:	60ba      	str	r2, [r7, #8]
 80029f8:	781b      	ldrb	r3, [r3, #0]
 80029fa:	4618      	mov	r0, r3
 80029fc:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a00:	697b      	ldr	r3, [r7, #20]
 8002a02:	3301      	adds	r3, #1
 8002a04:	617b      	str	r3, [r7, #20]
 8002a06:	697a      	ldr	r2, [r7, #20]
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	429a      	cmp	r2, r3
 8002a0c:	dbf1      	blt.n	80029f2 <_write+0x12>
	}
	return len;
 8002a0e:	687b      	ldr	r3, [r7, #4]
}
 8002a10:	4618      	mov	r0, r3
 8002a12:	3718      	adds	r7, #24
 8002a14:	46bd      	mov	sp, r7
 8002a16:	bd80      	pop	{r7, pc}

08002a18 <_close>:

int _close(int file)
{
 8002a18:	b480      	push	{r7}
 8002a1a:	b083      	sub	sp, #12
 8002a1c:	af00      	add	r7, sp, #0
 8002a1e:	6078      	str	r0, [r7, #4]
	return -1;
 8002a20:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002a24:	4618      	mov	r0, r3
 8002a26:	370c      	adds	r7, #12
 8002a28:	46bd      	mov	sp, r7
 8002a2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a2e:	4770      	bx	lr

08002a30 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002a30:	b480      	push	{r7}
 8002a32:	b083      	sub	sp, #12
 8002a34:	af00      	add	r7, sp, #0
 8002a36:	6078      	str	r0, [r7, #4]
 8002a38:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002a3a:	683b      	ldr	r3, [r7, #0]
 8002a3c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002a40:	605a      	str	r2, [r3, #4]
	return 0;
 8002a42:	2300      	movs	r3, #0
}
 8002a44:	4618      	mov	r0, r3
 8002a46:	370c      	adds	r7, #12
 8002a48:	46bd      	mov	sp, r7
 8002a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a4e:	4770      	bx	lr

08002a50 <_isatty>:

int _isatty(int file)
{
 8002a50:	b480      	push	{r7}
 8002a52:	b083      	sub	sp, #12
 8002a54:	af00      	add	r7, sp, #0
 8002a56:	6078      	str	r0, [r7, #4]
	return 1;
 8002a58:	2301      	movs	r3, #1
}
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	370c      	adds	r7, #12
 8002a5e:	46bd      	mov	sp, r7
 8002a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a64:	4770      	bx	lr

08002a66 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002a66:	b480      	push	{r7}
 8002a68:	b085      	sub	sp, #20
 8002a6a:	af00      	add	r7, sp, #0
 8002a6c:	60f8      	str	r0, [r7, #12]
 8002a6e:	60b9      	str	r1, [r7, #8]
 8002a70:	607a      	str	r2, [r7, #4]
	return 0;
 8002a72:	2300      	movs	r3, #0
}
 8002a74:	4618      	mov	r0, r3
 8002a76:	3714      	adds	r7, #20
 8002a78:	46bd      	mov	sp, r7
 8002a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a7e:	4770      	bx	lr

08002a80 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002a80:	b580      	push	{r7, lr}
 8002a82:	b086      	sub	sp, #24
 8002a84:	af00      	add	r7, sp, #0
 8002a86:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002a88:	4a14      	ldr	r2, [pc, #80]	@ (8002adc <_sbrk+0x5c>)
 8002a8a:	4b15      	ldr	r3, [pc, #84]	@ (8002ae0 <_sbrk+0x60>)
 8002a8c:	1ad3      	subs	r3, r2, r3
 8002a8e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002a90:	697b      	ldr	r3, [r7, #20]
 8002a92:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002a94:	4b13      	ldr	r3, [pc, #76]	@ (8002ae4 <_sbrk+0x64>)
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	d102      	bne.n	8002aa2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002a9c:	4b11      	ldr	r3, [pc, #68]	@ (8002ae4 <_sbrk+0x64>)
 8002a9e:	4a12      	ldr	r2, [pc, #72]	@ (8002ae8 <_sbrk+0x68>)
 8002aa0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002aa2:	4b10      	ldr	r3, [pc, #64]	@ (8002ae4 <_sbrk+0x64>)
 8002aa4:	681a      	ldr	r2, [r3, #0]
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	4413      	add	r3, r2
 8002aaa:	693a      	ldr	r2, [r7, #16]
 8002aac:	429a      	cmp	r2, r3
 8002aae:	d207      	bcs.n	8002ac0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002ab0:	f005 fd7a 	bl	80085a8 <__errno>
 8002ab4:	4603      	mov	r3, r0
 8002ab6:	220c      	movs	r2, #12
 8002ab8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002aba:	f04f 33ff 	mov.w	r3, #4294967295
 8002abe:	e009      	b.n	8002ad4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002ac0:	4b08      	ldr	r3, [pc, #32]	@ (8002ae4 <_sbrk+0x64>)
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002ac6:	4b07      	ldr	r3, [pc, #28]	@ (8002ae4 <_sbrk+0x64>)
 8002ac8:	681a      	ldr	r2, [r3, #0]
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	4413      	add	r3, r2
 8002ace:	4a05      	ldr	r2, [pc, #20]	@ (8002ae4 <_sbrk+0x64>)
 8002ad0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002ad2:	68fb      	ldr	r3, [r7, #12]
}
 8002ad4:	4618      	mov	r0, r3
 8002ad6:	3718      	adds	r7, #24
 8002ad8:	46bd      	mov	sp, r7
 8002ada:	bd80      	pop	{r7, pc}
 8002adc:	20020000 	.word	0x20020000
 8002ae0:	00000400 	.word	0x00000400
 8002ae4:	20000564 	.word	0x20000564
 8002ae8:	20000798 	.word	0x20000798

08002aec <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002aec:	b480      	push	{r7}
 8002aee:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002af0:	4b06      	ldr	r3, [pc, #24]	@ (8002b0c <SystemInit+0x20>)
 8002af2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002af6:	4a05      	ldr	r2, [pc, #20]	@ (8002b0c <SystemInit+0x20>)
 8002af8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002afc:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002b00:	bf00      	nop
 8002b02:	46bd      	mov	sp, r7
 8002b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b08:	4770      	bx	lr
 8002b0a:	bf00      	nop
 8002b0c:	e000ed00 	.word	0xe000ed00

08002b10 <MX_TIM2_Init>:
TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim13;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8002b10:	b580      	push	{r7, lr}
 8002b12:	b086      	sub	sp, #24
 8002b14:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002b16:	f107 0308 	add.w	r3, r7, #8
 8002b1a:	2200      	movs	r2, #0
 8002b1c:	601a      	str	r2, [r3, #0]
 8002b1e:	605a      	str	r2, [r3, #4]
 8002b20:	609a      	str	r2, [r3, #8]
 8002b22:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002b24:	463b      	mov	r3, r7
 8002b26:	2200      	movs	r2, #0
 8002b28:	601a      	str	r2, [r3, #0]
 8002b2a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002b2c:	4b1d      	ldr	r3, [pc, #116]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b2e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002b32:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 840-1;
 8002b34:	4b1b      	ldr	r3, [pc, #108]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b36:	f240 3247 	movw	r2, #839	@ 0x347
 8002b3a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002b3c:	4b19      	ldr	r3, [pc, #100]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b3e:	2200      	movs	r2, #0
 8002b40:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100-1;
 8002b42:	4b18      	ldr	r3, [pc, #96]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b44:	2263      	movs	r2, #99	@ 0x63
 8002b46:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002b48:	4b16      	ldr	r3, [pc, #88]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b4a:	2200      	movs	r2, #0
 8002b4c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002b4e:	4b15      	ldr	r3, [pc, #84]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b50:	2200      	movs	r2, #0
 8002b52:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002b54:	4813      	ldr	r0, [pc, #76]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b56:	f002 fdf9 	bl	800574c <HAL_TIM_Base_Init>
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	2b00      	cmp	r3, #0
 8002b5e:	d001      	beq.n	8002b64 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8002b60:	f7ff fd00 	bl	8002564 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002b64:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002b68:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002b6a:	f107 0308 	add.w	r3, r7, #8
 8002b6e:	4619      	mov	r1, r3
 8002b70:	480c      	ldr	r0, [pc, #48]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b72:	f003 f97f 	bl	8005e74 <HAL_TIM_ConfigClockSource>
 8002b76:	4603      	mov	r3, r0
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d001      	beq.n	8002b80 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8002b7c:	f7ff fcf2 	bl	8002564 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002b80:	2300      	movs	r3, #0
 8002b82:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002b84:	2300      	movs	r3, #0
 8002b86:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002b88:	463b      	mov	r3, r7
 8002b8a:	4619      	mov	r1, r3
 8002b8c:	4805      	ldr	r0, [pc, #20]	@ (8002ba4 <MX_TIM2_Init+0x94>)
 8002b8e:	f003 fd7d 	bl	800668c <HAL_TIMEx_MasterConfigSynchronization>
 8002b92:	4603      	mov	r3, r0
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d001      	beq.n	8002b9c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8002b98:	f7ff fce4 	bl	8002564 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002b9c:	bf00      	nop
 8002b9e:	3718      	adds	r7, #24
 8002ba0:	46bd      	mov	sp, r7
 8002ba2:	bd80      	pop	{r7, pc}
 8002ba4:	20000568 	.word	0x20000568

08002ba8 <MX_TIM13_Init>:
/* TIM13 init function */
void MX_TIM13_Init(void)
{
 8002ba8:	b580      	push	{r7, lr}
 8002baa:	b088      	sub	sp, #32
 8002bac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM13_Init 0 */

  /* USER CODE END TIM13_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8002bae:	1d3b      	adds	r3, r7, #4
 8002bb0:	2200      	movs	r2, #0
 8002bb2:	601a      	str	r2, [r3, #0]
 8002bb4:	605a      	str	r2, [r3, #4]
 8002bb6:	609a      	str	r2, [r3, #8]
 8002bb8:	60da      	str	r2, [r3, #12]
 8002bba:	611a      	str	r2, [r3, #16]
 8002bbc:	615a      	str	r2, [r3, #20]
 8002bbe:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 8002bc0:	4b1e      	ldr	r3, [pc, #120]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002bc2:	4a1f      	ldr	r2, [pc, #124]	@ (8002c40 <MX_TIM13_Init+0x98>)
 8002bc4:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 840-1;
 8002bc6:	4b1d      	ldr	r3, [pc, #116]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002bc8:	f240 3247 	movw	r2, #839	@ 0x347
 8002bcc:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002bce:	4b1b      	ldr	r3, [pc, #108]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002bd0:	2200      	movs	r2, #0
 8002bd2:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 100-1;
 8002bd4:	4b19      	ldr	r3, [pc, #100]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002bd6:	2263      	movs	r2, #99	@ 0x63
 8002bd8:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002bda:	4b18      	ldr	r3, [pc, #96]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002bdc:	2200      	movs	r2, #0
 8002bde:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002be0:	4b16      	ldr	r3, [pc, #88]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002be2:	2200      	movs	r2, #0
 8002be4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8002be6:	4815      	ldr	r0, [pc, #84]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002be8:	f002 fdb0 	bl	800574c <HAL_TIM_Base_Init>
 8002bec:	4603      	mov	r3, r0
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d001      	beq.n	8002bf6 <MX_TIM13_Init+0x4e>
  {
    Error_Handler();
 8002bf2:	f7ff fcb7 	bl	8002564 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 8002bf6:	4811      	ldr	r0, [pc, #68]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002bf8:	f002 fe68 	bl	80058cc <HAL_TIM_PWM_Init>
 8002bfc:	4603      	mov	r3, r0
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d001      	beq.n	8002c06 <MX_TIM13_Init+0x5e>
  {
    Error_Handler();
 8002c02:	f7ff fcaf 	bl	8002564 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002c06:	2360      	movs	r3, #96	@ 0x60
 8002c08:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002c0a:	2300      	movs	r3, #0
 8002c0c:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002c0e:	2300      	movs	r3, #0
 8002c10:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002c12:	2300      	movs	r3, #0
 8002c14:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002c16:	1d3b      	adds	r3, r7, #4
 8002c18:	2200      	movs	r2, #0
 8002c1a:	4619      	mov	r1, r3
 8002c1c:	4807      	ldr	r0, [pc, #28]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002c1e:	f003 f867 	bl	8005cf0 <HAL_TIM_PWM_ConfigChannel>
 8002c22:	4603      	mov	r3, r0
 8002c24:	2b00      	cmp	r3, #0
 8002c26:	d001      	beq.n	8002c2c <MX_TIM13_Init+0x84>
  {
    Error_Handler();
 8002c28:	f7ff fc9c 	bl	8002564 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */
  HAL_TIM_MspPostInit(&htim13);
 8002c2c:	4803      	ldr	r0, [pc, #12]	@ (8002c3c <MX_TIM13_Init+0x94>)
 8002c2e:	f000 f845 	bl	8002cbc <HAL_TIM_MspPostInit>

}
 8002c32:	bf00      	nop
 8002c34:	3720      	adds	r7, #32
 8002c36:	46bd      	mov	sp, r7
 8002c38:	bd80      	pop	{r7, pc}
 8002c3a:	bf00      	nop
 8002c3c:	200005b0 	.word	0x200005b0
 8002c40:	40001c00 	.word	0x40001c00

08002c44 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002c44:	b580      	push	{r7, lr}
 8002c46:	b084      	sub	sp, #16
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	681b      	ldr	r3, [r3, #0]
 8002c50:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002c54:	d116      	bne.n	8002c84 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002c56:	2300      	movs	r3, #0
 8002c58:	60fb      	str	r3, [r7, #12]
 8002c5a:	4b16      	ldr	r3, [pc, #88]	@ (8002cb4 <HAL_TIM_Base_MspInit+0x70>)
 8002c5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c5e:	4a15      	ldr	r2, [pc, #84]	@ (8002cb4 <HAL_TIM_Base_MspInit+0x70>)
 8002c60:	f043 0301 	orr.w	r3, r3, #1
 8002c64:	6413      	str	r3, [r2, #64]	@ 0x40
 8002c66:	4b13      	ldr	r3, [pc, #76]	@ (8002cb4 <HAL_TIM_Base_MspInit+0x70>)
 8002c68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c6a:	f003 0301 	and.w	r3, r3, #1
 8002c6e:	60fb      	str	r3, [r7, #12]
 8002c70:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8002c72:	2200      	movs	r2, #0
 8002c74:	2100      	movs	r1, #0
 8002c76:	201c      	movs	r0, #28
 8002c78:	f000 fead 	bl	80039d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002c7c:	201c      	movs	r0, #28
 8002c7e:	f000 fec6 	bl	8003a0e <HAL_NVIC_EnableIRQ>
    __HAL_RCC_TIM13_CLK_ENABLE();
  /* USER CODE BEGIN TIM13_MspInit 1 */

  /* USER CODE END TIM13_MspInit 1 */
  }
}
 8002c82:	e012      	b.n	8002caa <HAL_TIM_Base_MspInit+0x66>
  else if(tim_baseHandle->Instance==TIM13)
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	4a0b      	ldr	r2, [pc, #44]	@ (8002cb8 <HAL_TIM_Base_MspInit+0x74>)
 8002c8a:	4293      	cmp	r3, r2
 8002c8c:	d10d      	bne.n	8002caa <HAL_TIM_Base_MspInit+0x66>
    __HAL_RCC_TIM13_CLK_ENABLE();
 8002c8e:	2300      	movs	r3, #0
 8002c90:	60bb      	str	r3, [r7, #8]
 8002c92:	4b08      	ldr	r3, [pc, #32]	@ (8002cb4 <HAL_TIM_Base_MspInit+0x70>)
 8002c94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c96:	4a07      	ldr	r2, [pc, #28]	@ (8002cb4 <HAL_TIM_Base_MspInit+0x70>)
 8002c98:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002c9c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002c9e:	4b05      	ldr	r3, [pc, #20]	@ (8002cb4 <HAL_TIM_Base_MspInit+0x70>)
 8002ca0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ca2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002ca6:	60bb      	str	r3, [r7, #8]
 8002ca8:	68bb      	ldr	r3, [r7, #8]
}
 8002caa:	bf00      	nop
 8002cac:	3710      	adds	r7, #16
 8002cae:	46bd      	mov	sp, r7
 8002cb0:	bd80      	pop	{r7, pc}
 8002cb2:	bf00      	nop
 8002cb4:	40023800 	.word	0x40023800
 8002cb8:	40001c00 	.word	0x40001c00

08002cbc <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b088      	sub	sp, #32
 8002cc0:	af00      	add	r7, sp, #0
 8002cc2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002cc4:	f107 030c 	add.w	r3, r7, #12
 8002cc8:	2200      	movs	r2, #0
 8002cca:	601a      	str	r2, [r3, #0]
 8002ccc:	605a      	str	r2, [r3, #4]
 8002cce:	609a      	str	r2, [r3, #8]
 8002cd0:	60da      	str	r2, [r3, #12]
 8002cd2:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM13)
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	4a12      	ldr	r2, [pc, #72]	@ (8002d24 <HAL_TIM_MspPostInit+0x68>)
 8002cda:	4293      	cmp	r3, r2
 8002cdc:	d11e      	bne.n	8002d1c <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM13_MspPostInit 0 */

  /* USER CODE END TIM13_MspPostInit 0 */

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002cde:	2300      	movs	r3, #0
 8002ce0:	60bb      	str	r3, [r7, #8]
 8002ce2:	4b11      	ldr	r3, [pc, #68]	@ (8002d28 <HAL_TIM_MspPostInit+0x6c>)
 8002ce4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ce6:	4a10      	ldr	r2, [pc, #64]	@ (8002d28 <HAL_TIM_MspPostInit+0x6c>)
 8002ce8:	f043 0320 	orr.w	r3, r3, #32
 8002cec:	6313      	str	r3, [r2, #48]	@ 0x30
 8002cee:	4b0e      	ldr	r3, [pc, #56]	@ (8002d28 <HAL_TIM_MspPostInit+0x6c>)
 8002cf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cf2:	f003 0320 	and.w	r3, r3, #32
 8002cf6:	60bb      	str	r3, [r7, #8]
 8002cf8:	68bb      	ldr	r3, [r7, #8]
    /**TIM13 GPIO Configuration
    PF8     ------> TIM13_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002cfa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002cfe:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d00:	2302      	movs	r3, #2
 8002d02:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d04:	2300      	movs	r3, #0
 8002d06:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002d08:	2300      	movs	r3, #0
 8002d0a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 8002d0c:	2309      	movs	r3, #9
 8002d0e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002d10:	f107 030c 	add.w	r3, r7, #12
 8002d14:	4619      	mov	r1, r3
 8002d16:	4805      	ldr	r0, [pc, #20]	@ (8002d2c <HAL_TIM_MspPostInit+0x70>)
 8002d18:	f001 fa96 	bl	8004248 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM13_MspPostInit 1 */

  /* USER CODE END TIM13_MspPostInit 1 */
  }

}
 8002d1c:	bf00      	nop
 8002d1e:	3720      	adds	r7, #32
 8002d20:	46bd      	mov	sp, r7
 8002d22:	bd80      	pop	{r7, pc}
 8002d24:	40001c00 	.word	0x40001c00
 8002d28:	40023800 	.word	0x40023800
 8002d2c:	40021400 	.word	0x40021400

08002d30 <uart_init_rs232>:
#include "uart.h"

uint8_t receive_buffer1 = 0;
uint8_t msg[100];

void uart_init_rs232(){
 8002d30:	b580      	push	{r7, lr}
 8002d32:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart1, &receive_buffer1, 1);
 8002d34:	2201      	movs	r2, #1
 8002d36:	4903      	ldr	r1, [pc, #12]	@ (8002d44 <uart_init_rs232+0x14>)
 8002d38:	4803      	ldr	r0, [pc, #12]	@ (8002d48 <uart_init_rs232+0x18>)
 8002d3a:	f003 fe12 	bl	8006962 <HAL_UART_Receive_IT>
}
 8002d3e:	bf00      	nop
 8002d40:	bd80      	pop	{r7, pc}
 8002d42:	bf00      	nop
 8002d44:	200005f8 	.word	0x200005f8
 8002d48:	200005fc 	.word	0x200005fc

08002d4c <HAL_UART_RxCpltCallback>:
    uart_Rs232SendString(".");
    sprintf((void*)msg,"%ld",num%100);
    uart_Rs232SendString(msg);
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	b082      	sub	sp, #8
 8002d50:	af00      	add	r7, sp, #0
 8002d52:	6078      	str	r0, [r7, #4]
	if(huart->Instance == USART1){
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	4a08      	ldr	r2, [pc, #32]	@ (8002d7c <HAL_UART_RxCpltCallback+0x30>)
 8002d5a:	4293      	cmp	r3, r2
 8002d5c:	d10a      	bne.n	8002d74 <HAL_UART_RxCpltCallback+0x28>
		// rs232 isr
		// can be modified
		HAL_UART_Transmit(&huart1, &receive_buffer1, 1, 10);
 8002d5e:	230a      	movs	r3, #10
 8002d60:	2201      	movs	r2, #1
 8002d62:	4907      	ldr	r1, [pc, #28]	@ (8002d80 <HAL_UART_RxCpltCallback+0x34>)
 8002d64:	4807      	ldr	r0, [pc, #28]	@ (8002d84 <HAL_UART_RxCpltCallback+0x38>)
 8002d66:	f003 fd71 	bl	800684c <HAL_UART_Transmit>
//			addToRingBuffer(&buffer, receive_buffer1 % 10);
//		}

		// turn on the receice interrupt
//		addToRingBuffer(&buffer, receive_buffer1);
		HAL_UART_Receive_IT(&huart1, &receive_buffer1, 1);
 8002d6a:	2201      	movs	r2, #1
 8002d6c:	4904      	ldr	r1, [pc, #16]	@ (8002d80 <HAL_UART_RxCpltCallback+0x34>)
 8002d6e:	4805      	ldr	r0, [pc, #20]	@ (8002d84 <HAL_UART_RxCpltCallback+0x38>)
 8002d70:	f003 fdf7 	bl	8006962 <HAL_UART_Receive_IT>
	}
}
 8002d74:	bf00      	nop
 8002d76:	3708      	adds	r7, #8
 8002d78:	46bd      	mov	sp, r7
 8002d7a:	bd80      	pop	{r7, pc}
 8002d7c:	40011000 	.word	0x40011000
 8002d80:	200005f8 	.word	0x200005f8
 8002d84:	200005fc 	.word	0x200005fc

08002d88 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8002d88:	b580      	push	{r7, lr}
 8002d8a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002d8c:	4b11      	ldr	r3, [pc, #68]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002d8e:	4a12      	ldr	r2, [pc, #72]	@ (8002dd8 <MX_USART1_UART_Init+0x50>)
 8002d90:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8002d92:	4b10      	ldr	r3, [pc, #64]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002d94:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002d98:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002d9a:	4b0e      	ldr	r3, [pc, #56]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002d9c:	2200      	movs	r2, #0
 8002d9e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002da0:	4b0c      	ldr	r3, [pc, #48]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002da2:	2200      	movs	r2, #0
 8002da4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002da6:	4b0b      	ldr	r3, [pc, #44]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002da8:	2200      	movs	r2, #0
 8002daa:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002dac:	4b09      	ldr	r3, [pc, #36]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002dae:	220c      	movs	r2, #12
 8002db0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002db2:	4b08      	ldr	r3, [pc, #32]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002db4:	2200      	movs	r2, #0
 8002db6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002db8:	4b06      	ldr	r3, [pc, #24]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002dba:	2200      	movs	r2, #0
 8002dbc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002dbe:	4805      	ldr	r0, [pc, #20]	@ (8002dd4 <MX_USART1_UART_Init+0x4c>)
 8002dc0:	f003 fcf4 	bl	80067ac <HAL_UART_Init>
 8002dc4:	4603      	mov	r3, r0
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d001      	beq.n	8002dce <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8002dca:	f7ff fbcb 	bl	8002564 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8002dce:	bf00      	nop
 8002dd0:	bd80      	pop	{r7, pc}
 8002dd2:	bf00      	nop
 8002dd4:	200005fc 	.word	0x200005fc
 8002dd8:	40011000 	.word	0x40011000

08002ddc <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8002ddc:	b580      	push	{r7, lr}
 8002dde:	b08a      	sub	sp, #40	@ 0x28
 8002de0:	af00      	add	r7, sp, #0
 8002de2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002de4:	f107 0314 	add.w	r3, r7, #20
 8002de8:	2200      	movs	r2, #0
 8002dea:	601a      	str	r2, [r3, #0]
 8002dec:	605a      	str	r2, [r3, #4]
 8002dee:	609a      	str	r2, [r3, #8]
 8002df0:	60da      	str	r2, [r3, #12]
 8002df2:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART1)
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	4a1d      	ldr	r2, [pc, #116]	@ (8002e70 <HAL_UART_MspInit+0x94>)
 8002dfa:	4293      	cmp	r3, r2
 8002dfc:	d134      	bne.n	8002e68 <HAL_UART_MspInit+0x8c>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002dfe:	2300      	movs	r3, #0
 8002e00:	613b      	str	r3, [r7, #16]
 8002e02:	4b1c      	ldr	r3, [pc, #112]	@ (8002e74 <HAL_UART_MspInit+0x98>)
 8002e04:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e06:	4a1b      	ldr	r2, [pc, #108]	@ (8002e74 <HAL_UART_MspInit+0x98>)
 8002e08:	f043 0310 	orr.w	r3, r3, #16
 8002e0c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002e0e:	4b19      	ldr	r3, [pc, #100]	@ (8002e74 <HAL_UART_MspInit+0x98>)
 8002e10:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e12:	f003 0310 	and.w	r3, r3, #16
 8002e16:	613b      	str	r3, [r7, #16]
 8002e18:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002e1a:	2300      	movs	r3, #0
 8002e1c:	60fb      	str	r3, [r7, #12]
 8002e1e:	4b15      	ldr	r3, [pc, #84]	@ (8002e74 <HAL_UART_MspInit+0x98>)
 8002e20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e22:	4a14      	ldr	r2, [pc, #80]	@ (8002e74 <HAL_UART_MspInit+0x98>)
 8002e24:	f043 0301 	orr.w	r3, r3, #1
 8002e28:	6313      	str	r3, [r2, #48]	@ 0x30
 8002e2a:	4b12      	ldr	r3, [pc, #72]	@ (8002e74 <HAL_UART_MspInit+0x98>)
 8002e2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e2e:	f003 0301 	and.w	r3, r3, #1
 8002e32:	60fb      	str	r3, [r7, #12]
 8002e34:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002e36:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8002e3a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e3c:	2302      	movs	r3, #2
 8002e3e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e40:	2300      	movs	r3, #0
 8002e42:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002e44:	2303      	movs	r3, #3
 8002e46:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002e48:	2307      	movs	r3, #7
 8002e4a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002e4c:	f107 0314 	add.w	r3, r7, #20
 8002e50:	4619      	mov	r1, r3
 8002e52:	4809      	ldr	r0, [pc, #36]	@ (8002e78 <HAL_UART_MspInit+0x9c>)
 8002e54:	f001 f9f8 	bl	8004248 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8002e58:	2200      	movs	r2, #0
 8002e5a:	2100      	movs	r1, #0
 8002e5c:	2025      	movs	r0, #37	@ 0x25
 8002e5e:	f000 fdba 	bl	80039d6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002e62:	2025      	movs	r0, #37	@ 0x25
 8002e64:	f000 fdd3 	bl	8003a0e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8002e68:	bf00      	nop
 8002e6a:	3728      	adds	r7, #40	@ 0x28
 8002e6c:	46bd      	mov	sp, r7
 8002e6e:	bd80      	pop	{r7, pc}
 8002e70:	40011000 	.word	0x40011000
 8002e74:	40023800 	.word	0x40023800
 8002e78:	40020000 	.word	0x40020000

08002e7c <Reset_Handler>:
 8002e7c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002eb4 <LoopFillZerobss+0x12>
 8002e80:	480d      	ldr	r0, [pc, #52]	@ (8002eb8 <LoopFillZerobss+0x16>)
 8002e82:	490e      	ldr	r1, [pc, #56]	@ (8002ebc <LoopFillZerobss+0x1a>)
 8002e84:	4a0e      	ldr	r2, [pc, #56]	@ (8002ec0 <LoopFillZerobss+0x1e>)
 8002e86:	2300      	movs	r3, #0
 8002e88:	e002      	b.n	8002e90 <LoopCopyDataInit>

08002e8a <CopyDataInit>:
 8002e8a:	58d4      	ldr	r4, [r2, r3]
 8002e8c:	50c4      	str	r4, [r0, r3]
 8002e8e:	3304      	adds	r3, #4

08002e90 <LoopCopyDataInit>:
 8002e90:	18c4      	adds	r4, r0, r3
 8002e92:	428c      	cmp	r4, r1
 8002e94:	d3f9      	bcc.n	8002e8a <CopyDataInit>
 8002e96:	4a0b      	ldr	r2, [pc, #44]	@ (8002ec4 <LoopFillZerobss+0x22>)
 8002e98:	4c0b      	ldr	r4, [pc, #44]	@ (8002ec8 <LoopFillZerobss+0x26>)
 8002e9a:	2300      	movs	r3, #0
 8002e9c:	e001      	b.n	8002ea2 <LoopFillZerobss>

08002e9e <FillZerobss>:
 8002e9e:	6013      	str	r3, [r2, #0]
 8002ea0:	3204      	adds	r2, #4

08002ea2 <LoopFillZerobss>:
 8002ea2:	42a2      	cmp	r2, r4
 8002ea4:	d3fb      	bcc.n	8002e9e <FillZerobss>
 8002ea6:	f7ff fe21 	bl	8002aec <SystemInit>
 8002eaa:	f005 fb83 	bl	80085b4 <__libc_init_array>
 8002eae:	f7ff fa49 	bl	8002344 <main>
 8002eb2:	4770      	bx	lr
 8002eb4:	20020000 	.word	0x20020000
 8002eb8:	20000000 	.word	0x20000000
 8002ebc:	200001e8 	.word	0x200001e8
 8002ec0:	0800d9d8 	.word	0x0800d9d8
 8002ec4:	200001e8 	.word	0x200001e8
 8002ec8:	20000794 	.word	0x20000794

08002ecc <ADC_IRQHandler>:
 8002ecc:	e7fe      	b.n	8002ecc <ADC_IRQHandler>
	...

08002ed0 <HAL_Init>:
 8002ed0:	b580      	push	{r7, lr}
 8002ed2:	af00      	add	r7, sp, #0
 8002ed4:	4b0e      	ldr	r3, [pc, #56]	@ (8002f10 <HAL_Init+0x40>)
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	4a0d      	ldr	r2, [pc, #52]	@ (8002f10 <HAL_Init+0x40>)
 8002eda:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002ede:	6013      	str	r3, [r2, #0]
 8002ee0:	4b0b      	ldr	r3, [pc, #44]	@ (8002f10 <HAL_Init+0x40>)
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	4a0a      	ldr	r2, [pc, #40]	@ (8002f10 <HAL_Init+0x40>)
 8002ee6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002eea:	6013      	str	r3, [r2, #0]
 8002eec:	4b08      	ldr	r3, [pc, #32]	@ (8002f10 <HAL_Init+0x40>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	4a07      	ldr	r2, [pc, #28]	@ (8002f10 <HAL_Init+0x40>)
 8002ef2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002ef6:	6013      	str	r3, [r2, #0]
 8002ef8:	2003      	movs	r0, #3
 8002efa:	f000 fd61 	bl	80039c0 <HAL_NVIC_SetPriorityGrouping>
 8002efe:	200f      	movs	r0, #15
 8002f00:	f000 f808 	bl	8002f14 <HAL_InitTick>
 8002f04:	f7ff fcb6 	bl	8002874 <HAL_MspInit>
 8002f08:	2300      	movs	r3, #0
 8002f0a:	4618      	mov	r0, r3
 8002f0c:	bd80      	pop	{r7, pc}
 8002f0e:	bf00      	nop
 8002f10:	40023c00 	.word	0x40023c00

08002f14 <HAL_InitTick>:
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b082      	sub	sp, #8
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	4b12      	ldr	r3, [pc, #72]	@ (8002f68 <HAL_InitTick+0x54>)
 8002f1e:	681a      	ldr	r2, [r3, #0]
 8002f20:	4b12      	ldr	r3, [pc, #72]	@ (8002f6c <HAL_InitTick+0x58>)
 8002f22:	781b      	ldrb	r3, [r3, #0]
 8002f24:	4619      	mov	r1, r3
 8002f26:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002f2a:	fbb3 f3f1 	udiv	r3, r3, r1
 8002f2e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f32:	4618      	mov	r0, r3
 8002f34:	f000 fd79 	bl	8003a2a <HAL_SYSTICK_Config>
 8002f38:	4603      	mov	r3, r0
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d001      	beq.n	8002f42 <HAL_InitTick+0x2e>
 8002f3e:	2301      	movs	r3, #1
 8002f40:	e00e      	b.n	8002f60 <HAL_InitTick+0x4c>
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	2b0f      	cmp	r3, #15
 8002f46:	d80a      	bhi.n	8002f5e <HAL_InitTick+0x4a>
 8002f48:	2200      	movs	r2, #0
 8002f4a:	6879      	ldr	r1, [r7, #4]
 8002f4c:	f04f 30ff 	mov.w	r0, #4294967295
 8002f50:	f000 fd41 	bl	80039d6 <HAL_NVIC_SetPriority>
 8002f54:	4a06      	ldr	r2, [pc, #24]	@ (8002f70 <HAL_InitTick+0x5c>)
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	6013      	str	r3, [r2, #0]
 8002f5a:	2300      	movs	r3, #0
 8002f5c:	e000      	b.n	8002f60 <HAL_InitTick+0x4c>
 8002f5e:	2301      	movs	r3, #1
 8002f60:	4618      	mov	r0, r3
 8002f62:	3708      	adds	r7, #8
 8002f64:	46bd      	mov	sp, r7
 8002f66:	bd80      	pop	{r7, pc}
 8002f68:	20000014 	.word	0x20000014
 8002f6c:	2000001c 	.word	0x2000001c
 8002f70:	20000018 	.word	0x20000018

08002f74 <HAL_IncTick>:
 8002f74:	b480      	push	{r7}
 8002f76:	af00      	add	r7, sp, #0
 8002f78:	4b06      	ldr	r3, [pc, #24]	@ (8002f94 <HAL_IncTick+0x20>)
 8002f7a:	781b      	ldrb	r3, [r3, #0]
 8002f7c:	461a      	mov	r2, r3
 8002f7e:	4b06      	ldr	r3, [pc, #24]	@ (8002f98 <HAL_IncTick+0x24>)
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	4413      	add	r3, r2
 8002f84:	4a04      	ldr	r2, [pc, #16]	@ (8002f98 <HAL_IncTick+0x24>)
 8002f86:	6013      	str	r3, [r2, #0]
 8002f88:	bf00      	nop
 8002f8a:	46bd      	mov	sp, r7
 8002f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f90:	4770      	bx	lr
 8002f92:	bf00      	nop
 8002f94:	2000001c 	.word	0x2000001c
 8002f98:	20000644 	.word	0x20000644

08002f9c <HAL_GetTick>:
 8002f9c:	b480      	push	{r7}
 8002f9e:	af00      	add	r7, sp, #0
 8002fa0:	4b03      	ldr	r3, [pc, #12]	@ (8002fb0 <HAL_GetTick+0x14>)
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	4618      	mov	r0, r3
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fac:	4770      	bx	lr
 8002fae:	bf00      	nop
 8002fb0:	20000644 	.word	0x20000644

08002fb4 <HAL_Delay>:
 8002fb4:	b580      	push	{r7, lr}
 8002fb6:	b084      	sub	sp, #16
 8002fb8:	af00      	add	r7, sp, #0
 8002fba:	6078      	str	r0, [r7, #4]
 8002fbc:	f7ff ffee 	bl	8002f9c <HAL_GetTick>
 8002fc0:	60b8      	str	r0, [r7, #8]
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	60fb      	str	r3, [r7, #12]
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002fcc:	d005      	beq.n	8002fda <HAL_Delay+0x26>
 8002fce:	4b0a      	ldr	r3, [pc, #40]	@ (8002ff8 <HAL_Delay+0x44>)
 8002fd0:	781b      	ldrb	r3, [r3, #0]
 8002fd2:	461a      	mov	r2, r3
 8002fd4:	68fb      	ldr	r3, [r7, #12]
 8002fd6:	4413      	add	r3, r2
 8002fd8:	60fb      	str	r3, [r7, #12]
 8002fda:	bf00      	nop
 8002fdc:	f7ff ffde 	bl	8002f9c <HAL_GetTick>
 8002fe0:	4602      	mov	r2, r0
 8002fe2:	68bb      	ldr	r3, [r7, #8]
 8002fe4:	1ad3      	subs	r3, r2, r3
 8002fe6:	68fa      	ldr	r2, [r7, #12]
 8002fe8:	429a      	cmp	r2, r3
 8002fea:	d8f7      	bhi.n	8002fdc <HAL_Delay+0x28>
 8002fec:	bf00      	nop
 8002fee:	bf00      	nop
 8002ff0:	3710      	adds	r7, #16
 8002ff2:	46bd      	mov	sp, r7
 8002ff4:	bd80      	pop	{r7, pc}
 8002ff6:	bf00      	nop
 8002ff8:	2000001c 	.word	0x2000001c

08002ffc <HAL_ADC_Init>:
 8002ffc:	b580      	push	{r7, lr}
 8002ffe:	b084      	sub	sp, #16
 8003000:	af00      	add	r7, sp, #0
 8003002:	6078      	str	r0, [r7, #4]
 8003004:	2300      	movs	r3, #0
 8003006:	73fb      	strb	r3, [r7, #15]
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	2b00      	cmp	r3, #0
 800300c:	d101      	bne.n	8003012 <HAL_ADC_Init+0x16>
 800300e:	2301      	movs	r3, #1
 8003010:	e033      	b.n	800307a <HAL_ADC_Init+0x7e>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003016:	2b00      	cmp	r3, #0
 8003018:	d109      	bne.n	800302e <HAL_ADC_Init+0x32>
 800301a:	6878      	ldr	r0, [r7, #4]
 800301c:	f7fe f816 	bl	800104c <HAL_ADC_MspInit>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	2200      	movs	r2, #0
 8003024:	645a      	str	r2, [r3, #68]	@ 0x44
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	2200      	movs	r2, #0
 800302a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003032:	f003 0310 	and.w	r3, r3, #16
 8003036:	2b00      	cmp	r3, #0
 8003038:	d118      	bne.n	800306c <HAL_ADC_Init+0x70>
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800303e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003042:	f023 0302 	bic.w	r3, r3, #2
 8003046:	f043 0202 	orr.w	r2, r3, #2
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	641a      	str	r2, [r3, #64]	@ 0x40
 800304e:	6878      	ldr	r0, [r7, #4]
 8003050:	f000 fa68 	bl	8003524 <ADC_Init>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	2200      	movs	r2, #0
 8003058:	645a      	str	r2, [r3, #68]	@ 0x44
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800305e:	f023 0303 	bic.w	r3, r3, #3
 8003062:	f043 0201 	orr.w	r2, r3, #1
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	641a      	str	r2, [r3, #64]	@ 0x40
 800306a:	e001      	b.n	8003070 <HAL_ADC_Init+0x74>
 800306c:	2301      	movs	r3, #1
 800306e:	73fb      	strb	r3, [r7, #15]
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	2200      	movs	r2, #0
 8003074:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003078:	7bfb      	ldrb	r3, [r7, #15]
 800307a:	4618      	mov	r0, r3
 800307c:	3710      	adds	r7, #16
 800307e:	46bd      	mov	sp, r7
 8003080:	bd80      	pop	{r7, pc}
	...

08003084 <HAL_ADC_Start_DMA>:
 8003084:	b580      	push	{r7, lr}
 8003086:	b086      	sub	sp, #24
 8003088:	af00      	add	r7, sp, #0
 800308a:	60f8      	str	r0, [r7, #12]
 800308c:	60b9      	str	r1, [r7, #8]
 800308e:	607a      	str	r2, [r7, #4]
 8003090:	2300      	movs	r3, #0
 8003092:	613b      	str	r3, [r7, #16]
 8003094:	68fb      	ldr	r3, [r7, #12]
 8003096:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800309a:	2b01      	cmp	r3, #1
 800309c:	d101      	bne.n	80030a2 <HAL_ADC_Start_DMA+0x1e>
 800309e:	2302      	movs	r3, #2
 80030a0:	e0e9      	b.n	8003276 <HAL_ADC_Start_DMA+0x1f2>
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	2201      	movs	r2, #1
 80030a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80030aa:	68fb      	ldr	r3, [r7, #12]
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	689b      	ldr	r3, [r3, #8]
 80030b0:	f003 0301 	and.w	r3, r3, #1
 80030b4:	2b01      	cmp	r3, #1
 80030b6:	d018      	beq.n	80030ea <HAL_ADC_Start_DMA+0x66>
 80030b8:	68fb      	ldr	r3, [r7, #12]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	689a      	ldr	r2, [r3, #8]
 80030be:	68fb      	ldr	r3, [r7, #12]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	f042 0201 	orr.w	r2, r2, #1
 80030c6:	609a      	str	r2, [r3, #8]
 80030c8:	4b6d      	ldr	r3, [pc, #436]	@ (8003280 <HAL_ADC_Start_DMA+0x1fc>)
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	4a6d      	ldr	r2, [pc, #436]	@ (8003284 <HAL_ADC_Start_DMA+0x200>)
 80030ce:	fba2 2303 	umull	r2, r3, r2, r3
 80030d2:	0c9a      	lsrs	r2, r3, #18
 80030d4:	4613      	mov	r3, r2
 80030d6:	005b      	lsls	r3, r3, #1
 80030d8:	4413      	add	r3, r2
 80030da:	613b      	str	r3, [r7, #16]
 80030dc:	e002      	b.n	80030e4 <HAL_ADC_Start_DMA+0x60>
 80030de:	693b      	ldr	r3, [r7, #16]
 80030e0:	3b01      	subs	r3, #1
 80030e2:	613b      	str	r3, [r7, #16]
 80030e4:	693b      	ldr	r3, [r7, #16]
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d1f9      	bne.n	80030de <HAL_ADC_Start_DMA+0x5a>
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	681b      	ldr	r3, [r3, #0]
 80030ee:	689b      	ldr	r3, [r3, #8]
 80030f0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80030f4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80030f8:	d107      	bne.n	800310a <HAL_ADC_Start_DMA+0x86>
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	689a      	ldr	r2, [r3, #8]
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003108:	609a      	str	r2, [r3, #8]
 800310a:	68fb      	ldr	r3, [r7, #12]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	689b      	ldr	r3, [r3, #8]
 8003110:	f003 0301 	and.w	r3, r3, #1
 8003114:	2b01      	cmp	r3, #1
 8003116:	f040 80a1 	bne.w	800325c <HAL_ADC_Start_DMA+0x1d8>
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800311e:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8003122:	f023 0301 	bic.w	r3, r3, #1
 8003126:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	641a      	str	r2, [r3, #64]	@ 0x40
 800312e:	68fb      	ldr	r3, [r7, #12]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	685b      	ldr	r3, [r3, #4]
 8003134:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003138:	2b00      	cmp	r3, #0
 800313a:	d007      	beq.n	800314c <HAL_ADC_Start_DMA+0xc8>
 800313c:	68fb      	ldr	r3, [r7, #12]
 800313e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003140:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003144:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	641a      	str	r2, [r3, #64]	@ 0x40
 800314c:	68fb      	ldr	r3, [r7, #12]
 800314e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003150:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003154:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003158:	d106      	bne.n	8003168 <HAL_ADC_Start_DMA+0xe4>
 800315a:	68fb      	ldr	r3, [r7, #12]
 800315c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800315e:	f023 0206 	bic.w	r2, r3, #6
 8003162:	68fb      	ldr	r3, [r7, #12]
 8003164:	645a      	str	r2, [r3, #68]	@ 0x44
 8003166:	e002      	b.n	800316e <HAL_ADC_Start_DMA+0xea>
 8003168:	68fb      	ldr	r3, [r7, #12]
 800316a:	2200      	movs	r2, #0
 800316c:	645a      	str	r2, [r3, #68]	@ 0x44
 800316e:	68fb      	ldr	r3, [r7, #12]
 8003170:	2200      	movs	r2, #0
 8003172:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003176:	4b44      	ldr	r3, [pc, #272]	@ (8003288 <HAL_ADC_Start_DMA+0x204>)
 8003178:	617b      	str	r3, [r7, #20]
 800317a:	68fb      	ldr	r3, [r7, #12]
 800317c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800317e:	4a43      	ldr	r2, [pc, #268]	@ (800328c <HAL_ADC_Start_DMA+0x208>)
 8003180:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003182:	68fb      	ldr	r3, [r7, #12]
 8003184:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003186:	4a42      	ldr	r2, [pc, #264]	@ (8003290 <HAL_ADC_Start_DMA+0x20c>)
 8003188:	641a      	str	r2, [r3, #64]	@ 0x40
 800318a:	68fb      	ldr	r3, [r7, #12]
 800318c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800318e:	4a41      	ldr	r2, [pc, #260]	@ (8003294 <HAL_ADC_Start_DMA+0x210>)
 8003190:	64da      	str	r2, [r3, #76]	@ 0x4c
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 800319a:	601a      	str	r2, [r3, #0]
 800319c:	68fb      	ldr	r3, [r7, #12]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	685a      	ldr	r2, [r3, #4]
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80031aa:	605a      	str	r2, [r3, #4]
 80031ac:	68fb      	ldr	r3, [r7, #12]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	689a      	ldr	r2, [r3, #8]
 80031b2:	68fb      	ldr	r3, [r7, #12]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80031ba:	609a      	str	r2, [r3, #8]
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 80031c0:	68fb      	ldr	r3, [r7, #12]
 80031c2:	681b      	ldr	r3, [r3, #0]
 80031c4:	334c      	adds	r3, #76	@ 0x4c
 80031c6:	4619      	mov	r1, r3
 80031c8:	68ba      	ldr	r2, [r7, #8]
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	f000 fce8 	bl	8003ba0 <HAL_DMA_Start_IT>
 80031d0:	697b      	ldr	r3, [r7, #20]
 80031d2:	685b      	ldr	r3, [r3, #4]
 80031d4:	f003 031f 	and.w	r3, r3, #31
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d12a      	bne.n	8003232 <HAL_ADC_Start_DMA+0x1ae>
 80031dc:	68fb      	ldr	r3, [r7, #12]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	4a2d      	ldr	r2, [pc, #180]	@ (8003298 <HAL_ADC_Start_DMA+0x214>)
 80031e2:	4293      	cmp	r3, r2
 80031e4:	d015      	beq.n	8003212 <HAL_ADC_Start_DMA+0x18e>
 80031e6:	68fb      	ldr	r3, [r7, #12]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	4a2c      	ldr	r2, [pc, #176]	@ (800329c <HAL_ADC_Start_DMA+0x218>)
 80031ec:	4293      	cmp	r3, r2
 80031ee:	d105      	bne.n	80031fc <HAL_ADC_Start_DMA+0x178>
 80031f0:	4b25      	ldr	r3, [pc, #148]	@ (8003288 <HAL_ADC_Start_DMA+0x204>)
 80031f2:	685b      	ldr	r3, [r3, #4]
 80031f4:	f003 031f 	and.w	r3, r3, #31
 80031f8:	2b00      	cmp	r3, #0
 80031fa:	d00a      	beq.n	8003212 <HAL_ADC_Start_DMA+0x18e>
 80031fc:	68fb      	ldr	r3, [r7, #12]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	4a27      	ldr	r2, [pc, #156]	@ (80032a0 <HAL_ADC_Start_DMA+0x21c>)
 8003202:	4293      	cmp	r3, r2
 8003204:	d136      	bne.n	8003274 <HAL_ADC_Start_DMA+0x1f0>
 8003206:	4b20      	ldr	r3, [pc, #128]	@ (8003288 <HAL_ADC_Start_DMA+0x204>)
 8003208:	685b      	ldr	r3, [r3, #4]
 800320a:	f003 0310 	and.w	r3, r3, #16
 800320e:	2b00      	cmp	r3, #0
 8003210:	d130      	bne.n	8003274 <HAL_ADC_Start_DMA+0x1f0>
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	689b      	ldr	r3, [r3, #8]
 8003218:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800321c:	2b00      	cmp	r3, #0
 800321e:	d129      	bne.n	8003274 <HAL_ADC_Start_DMA+0x1f0>
 8003220:	68fb      	ldr	r3, [r7, #12]
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	689a      	ldr	r2, [r3, #8]
 8003226:	68fb      	ldr	r3, [r7, #12]
 8003228:	681b      	ldr	r3, [r3, #0]
 800322a:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800322e:	609a      	str	r2, [r3, #8]
 8003230:	e020      	b.n	8003274 <HAL_ADC_Start_DMA+0x1f0>
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	4a18      	ldr	r2, [pc, #96]	@ (8003298 <HAL_ADC_Start_DMA+0x214>)
 8003238:	4293      	cmp	r3, r2
 800323a:	d11b      	bne.n	8003274 <HAL_ADC_Start_DMA+0x1f0>
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	689b      	ldr	r3, [r3, #8]
 8003242:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003246:	2b00      	cmp	r3, #0
 8003248:	d114      	bne.n	8003274 <HAL_ADC_Start_DMA+0x1f0>
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	689a      	ldr	r2, [r3, #8]
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8003258:	609a      	str	r2, [r3, #8]
 800325a:	e00b      	b.n	8003274 <HAL_ADC_Start_DMA+0x1f0>
 800325c:	68fb      	ldr	r3, [r7, #12]
 800325e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003260:	f043 0210 	orr.w	r2, r3, #16
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	641a      	str	r2, [r3, #64]	@ 0x40
 8003268:	68fb      	ldr	r3, [r7, #12]
 800326a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800326c:	f043 0201 	orr.w	r2, r3, #1
 8003270:	68fb      	ldr	r3, [r7, #12]
 8003272:	645a      	str	r2, [r3, #68]	@ 0x44
 8003274:	2300      	movs	r3, #0
 8003276:	4618      	mov	r0, r3
 8003278:	3718      	adds	r7, #24
 800327a:	46bd      	mov	sp, r7
 800327c:	bd80      	pop	{r7, pc}
 800327e:	bf00      	nop
 8003280:	20000014 	.word	0x20000014
 8003284:	431bde83 	.word	0x431bde83
 8003288:	40012300 	.word	0x40012300
 800328c:	0800371d 	.word	0x0800371d
 8003290:	080037d7 	.word	0x080037d7
 8003294:	080037f3 	.word	0x080037f3
 8003298:	40012000 	.word	0x40012000
 800329c:	40012100 	.word	0x40012100
 80032a0:	40012200 	.word	0x40012200

080032a4 <HAL_ADC_ConvCpltCallback>:
 80032a4:	b480      	push	{r7}
 80032a6:	b083      	sub	sp, #12
 80032a8:	af00      	add	r7, sp, #0
 80032aa:	6078      	str	r0, [r7, #4]
 80032ac:	bf00      	nop
 80032ae:	370c      	adds	r7, #12
 80032b0:	46bd      	mov	sp, r7
 80032b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b6:	4770      	bx	lr

080032b8 <HAL_ADC_ConvHalfCpltCallback>:
 80032b8:	b480      	push	{r7}
 80032ba:	b083      	sub	sp, #12
 80032bc:	af00      	add	r7, sp, #0
 80032be:	6078      	str	r0, [r7, #4]
 80032c0:	bf00      	nop
 80032c2:	370c      	adds	r7, #12
 80032c4:	46bd      	mov	sp, r7
 80032c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ca:	4770      	bx	lr

080032cc <HAL_ADC_ErrorCallback>:
 80032cc:	b480      	push	{r7}
 80032ce:	b083      	sub	sp, #12
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	6078      	str	r0, [r7, #4]
 80032d4:	bf00      	nop
 80032d6:	370c      	adds	r7, #12
 80032d8:	46bd      	mov	sp, r7
 80032da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032de:	4770      	bx	lr

080032e0 <HAL_ADC_ConfigChannel>:
 80032e0:	b480      	push	{r7}
 80032e2:	b085      	sub	sp, #20
 80032e4:	af00      	add	r7, sp, #0
 80032e6:	6078      	str	r0, [r7, #4]
 80032e8:	6039      	str	r1, [r7, #0]
 80032ea:	2300      	movs	r3, #0
 80032ec:	60bb      	str	r3, [r7, #8]
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80032f4:	2b01      	cmp	r3, #1
 80032f6:	d101      	bne.n	80032fc <HAL_ADC_ConfigChannel+0x1c>
 80032f8:	2302      	movs	r3, #2
 80032fa:	e105      	b.n	8003508 <HAL_ADC_ConfigChannel+0x228>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	2201      	movs	r2, #1
 8003300:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003304:	683b      	ldr	r3, [r7, #0]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	2b09      	cmp	r3, #9
 800330a:	d925      	bls.n	8003358 <HAL_ADC_ConfigChannel+0x78>
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	68d9      	ldr	r1, [r3, #12]
 8003312:	683b      	ldr	r3, [r7, #0]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	b29b      	uxth	r3, r3
 8003318:	461a      	mov	r2, r3
 800331a:	4613      	mov	r3, r2
 800331c:	005b      	lsls	r3, r3, #1
 800331e:	4413      	add	r3, r2
 8003320:	3b1e      	subs	r3, #30
 8003322:	2207      	movs	r2, #7
 8003324:	fa02 f303 	lsl.w	r3, r2, r3
 8003328:	43da      	mvns	r2, r3
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	400a      	ands	r2, r1
 8003330:	60da      	str	r2, [r3, #12]
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	68d9      	ldr	r1, [r3, #12]
 8003338:	683b      	ldr	r3, [r7, #0]
 800333a:	689a      	ldr	r2, [r3, #8]
 800333c:	683b      	ldr	r3, [r7, #0]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	b29b      	uxth	r3, r3
 8003342:	4618      	mov	r0, r3
 8003344:	4603      	mov	r3, r0
 8003346:	005b      	lsls	r3, r3, #1
 8003348:	4403      	add	r3, r0
 800334a:	3b1e      	subs	r3, #30
 800334c:	409a      	lsls	r2, r3
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	430a      	orrs	r2, r1
 8003354:	60da      	str	r2, [r3, #12]
 8003356:	e022      	b.n	800339e <HAL_ADC_ConfigChannel+0xbe>
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	6919      	ldr	r1, [r3, #16]
 800335e:	683b      	ldr	r3, [r7, #0]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	b29b      	uxth	r3, r3
 8003364:	461a      	mov	r2, r3
 8003366:	4613      	mov	r3, r2
 8003368:	005b      	lsls	r3, r3, #1
 800336a:	4413      	add	r3, r2
 800336c:	2207      	movs	r2, #7
 800336e:	fa02 f303 	lsl.w	r3, r2, r3
 8003372:	43da      	mvns	r2, r3
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	400a      	ands	r2, r1
 800337a:	611a      	str	r2, [r3, #16]
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	6919      	ldr	r1, [r3, #16]
 8003382:	683b      	ldr	r3, [r7, #0]
 8003384:	689a      	ldr	r2, [r3, #8]
 8003386:	683b      	ldr	r3, [r7, #0]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	b29b      	uxth	r3, r3
 800338c:	4618      	mov	r0, r3
 800338e:	4603      	mov	r3, r0
 8003390:	005b      	lsls	r3, r3, #1
 8003392:	4403      	add	r3, r0
 8003394:	409a      	lsls	r2, r3
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	681b      	ldr	r3, [r3, #0]
 800339a:	430a      	orrs	r2, r1
 800339c:	611a      	str	r2, [r3, #16]
 800339e:	683b      	ldr	r3, [r7, #0]
 80033a0:	685b      	ldr	r3, [r3, #4]
 80033a2:	2b06      	cmp	r3, #6
 80033a4:	d824      	bhi.n	80033f0 <HAL_ADC_ConfigChannel+0x110>
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80033ac:	683b      	ldr	r3, [r7, #0]
 80033ae:	685a      	ldr	r2, [r3, #4]
 80033b0:	4613      	mov	r3, r2
 80033b2:	009b      	lsls	r3, r3, #2
 80033b4:	4413      	add	r3, r2
 80033b6:	3b05      	subs	r3, #5
 80033b8:	221f      	movs	r2, #31
 80033ba:	fa02 f303 	lsl.w	r3, r2, r3
 80033be:	43da      	mvns	r2, r3
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	400a      	ands	r2, r1
 80033c6:	635a      	str	r2, [r3, #52]	@ 0x34
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80033ce:	683b      	ldr	r3, [r7, #0]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	b29b      	uxth	r3, r3
 80033d4:	4618      	mov	r0, r3
 80033d6:	683b      	ldr	r3, [r7, #0]
 80033d8:	685a      	ldr	r2, [r3, #4]
 80033da:	4613      	mov	r3, r2
 80033dc:	009b      	lsls	r3, r3, #2
 80033de:	4413      	add	r3, r2
 80033e0:	3b05      	subs	r3, #5
 80033e2:	fa00 f203 	lsl.w	r2, r0, r3
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	430a      	orrs	r2, r1
 80033ec:	635a      	str	r2, [r3, #52]	@ 0x34
 80033ee:	e04c      	b.n	800348a <HAL_ADC_ConfigChannel+0x1aa>
 80033f0:	683b      	ldr	r3, [r7, #0]
 80033f2:	685b      	ldr	r3, [r3, #4]
 80033f4:	2b0c      	cmp	r3, #12
 80033f6:	d824      	bhi.n	8003442 <HAL_ADC_ConfigChannel+0x162>
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80033fe:	683b      	ldr	r3, [r7, #0]
 8003400:	685a      	ldr	r2, [r3, #4]
 8003402:	4613      	mov	r3, r2
 8003404:	009b      	lsls	r3, r3, #2
 8003406:	4413      	add	r3, r2
 8003408:	3b23      	subs	r3, #35	@ 0x23
 800340a:	221f      	movs	r2, #31
 800340c:	fa02 f303 	lsl.w	r3, r2, r3
 8003410:	43da      	mvns	r2, r3
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	400a      	ands	r2, r1
 8003418:	631a      	str	r2, [r3, #48]	@ 0x30
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003420:	683b      	ldr	r3, [r7, #0]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	b29b      	uxth	r3, r3
 8003426:	4618      	mov	r0, r3
 8003428:	683b      	ldr	r3, [r7, #0]
 800342a:	685a      	ldr	r2, [r3, #4]
 800342c:	4613      	mov	r3, r2
 800342e:	009b      	lsls	r3, r3, #2
 8003430:	4413      	add	r3, r2
 8003432:	3b23      	subs	r3, #35	@ 0x23
 8003434:	fa00 f203 	lsl.w	r2, r0, r3
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	430a      	orrs	r2, r1
 800343e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003440:	e023      	b.n	800348a <HAL_ADC_ConfigChannel+0x1aa>
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003448:	683b      	ldr	r3, [r7, #0]
 800344a:	685a      	ldr	r2, [r3, #4]
 800344c:	4613      	mov	r3, r2
 800344e:	009b      	lsls	r3, r3, #2
 8003450:	4413      	add	r3, r2
 8003452:	3b41      	subs	r3, #65	@ 0x41
 8003454:	221f      	movs	r2, #31
 8003456:	fa02 f303 	lsl.w	r3, r2, r3
 800345a:	43da      	mvns	r2, r3
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	681b      	ldr	r3, [r3, #0]
 8003460:	400a      	ands	r2, r1
 8003462:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800346a:	683b      	ldr	r3, [r7, #0]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	b29b      	uxth	r3, r3
 8003470:	4618      	mov	r0, r3
 8003472:	683b      	ldr	r3, [r7, #0]
 8003474:	685a      	ldr	r2, [r3, #4]
 8003476:	4613      	mov	r3, r2
 8003478:	009b      	lsls	r3, r3, #2
 800347a:	4413      	add	r3, r2
 800347c:	3b41      	subs	r3, #65	@ 0x41
 800347e:	fa00 f203 	lsl.w	r2, r0, r3
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	430a      	orrs	r2, r1
 8003488:	62da      	str	r2, [r3, #44]	@ 0x2c
 800348a:	4b22      	ldr	r3, [pc, #136]	@ (8003514 <HAL_ADC_ConfigChannel+0x234>)
 800348c:	60fb      	str	r3, [r7, #12]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	4a21      	ldr	r2, [pc, #132]	@ (8003518 <HAL_ADC_ConfigChannel+0x238>)
 8003494:	4293      	cmp	r3, r2
 8003496:	d109      	bne.n	80034ac <HAL_ADC_ConfigChannel+0x1cc>
 8003498:	683b      	ldr	r3, [r7, #0]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	2b12      	cmp	r3, #18
 800349e:	d105      	bne.n	80034ac <HAL_ADC_ConfigChannel+0x1cc>
 80034a0:	68fb      	ldr	r3, [r7, #12]
 80034a2:	685b      	ldr	r3, [r3, #4]
 80034a4:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	605a      	str	r2, [r3, #4]
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	4a19      	ldr	r2, [pc, #100]	@ (8003518 <HAL_ADC_ConfigChannel+0x238>)
 80034b2:	4293      	cmp	r3, r2
 80034b4:	d123      	bne.n	80034fe <HAL_ADC_ConfigChannel+0x21e>
 80034b6:	683b      	ldr	r3, [r7, #0]
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	2b10      	cmp	r3, #16
 80034bc:	d003      	beq.n	80034c6 <HAL_ADC_ConfigChannel+0x1e6>
 80034be:	683b      	ldr	r3, [r7, #0]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	2b11      	cmp	r3, #17
 80034c4:	d11b      	bne.n	80034fe <HAL_ADC_ConfigChannel+0x21e>
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	685b      	ldr	r3, [r3, #4]
 80034ca:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80034ce:	68fb      	ldr	r3, [r7, #12]
 80034d0:	605a      	str	r2, [r3, #4]
 80034d2:	683b      	ldr	r3, [r7, #0]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	2b10      	cmp	r3, #16
 80034d8:	d111      	bne.n	80034fe <HAL_ADC_ConfigChannel+0x21e>
 80034da:	4b10      	ldr	r3, [pc, #64]	@ (800351c <HAL_ADC_ConfigChannel+0x23c>)
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	4a10      	ldr	r2, [pc, #64]	@ (8003520 <HAL_ADC_ConfigChannel+0x240>)
 80034e0:	fba2 2303 	umull	r2, r3, r2, r3
 80034e4:	0c9a      	lsrs	r2, r3, #18
 80034e6:	4613      	mov	r3, r2
 80034e8:	009b      	lsls	r3, r3, #2
 80034ea:	4413      	add	r3, r2
 80034ec:	005b      	lsls	r3, r3, #1
 80034ee:	60bb      	str	r3, [r7, #8]
 80034f0:	e002      	b.n	80034f8 <HAL_ADC_ConfigChannel+0x218>
 80034f2:	68bb      	ldr	r3, [r7, #8]
 80034f4:	3b01      	subs	r3, #1
 80034f6:	60bb      	str	r3, [r7, #8]
 80034f8:	68bb      	ldr	r3, [r7, #8]
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d1f9      	bne.n	80034f2 <HAL_ADC_ConfigChannel+0x212>
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	2200      	movs	r2, #0
 8003502:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003506:	2300      	movs	r3, #0
 8003508:	4618      	mov	r0, r3
 800350a:	3714      	adds	r7, #20
 800350c:	46bd      	mov	sp, r7
 800350e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003512:	4770      	bx	lr
 8003514:	40012300 	.word	0x40012300
 8003518:	40012000 	.word	0x40012000
 800351c:	20000014 	.word	0x20000014
 8003520:	431bde83 	.word	0x431bde83

08003524 <ADC_Init>:
 8003524:	b480      	push	{r7}
 8003526:	b085      	sub	sp, #20
 8003528:	af00      	add	r7, sp, #0
 800352a:	6078      	str	r0, [r7, #4]
 800352c:	4b79      	ldr	r3, [pc, #484]	@ (8003714 <ADC_Init+0x1f0>)
 800352e:	60fb      	str	r3, [r7, #12]
 8003530:	68fb      	ldr	r3, [r7, #12]
 8003532:	685b      	ldr	r3, [r3, #4]
 8003534:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	605a      	str	r2, [r3, #4]
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	685a      	ldr	r2, [r3, #4]
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	685b      	ldr	r3, [r3, #4]
 8003544:	431a      	orrs	r2, r3
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	605a      	str	r2, [r3, #4]
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	681b      	ldr	r3, [r3, #0]
 800354e:	685a      	ldr	r2, [r3, #4]
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003558:	605a      	str	r2, [r3, #4]
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	681b      	ldr	r3, [r3, #0]
 800355e:	6859      	ldr	r1, [r3, #4]
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	691b      	ldr	r3, [r3, #16]
 8003564:	021a      	lsls	r2, r3, #8
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	430a      	orrs	r2, r1
 800356c:	605a      	str	r2, [r3, #4]
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	685a      	ldr	r2, [r3, #4]
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	681b      	ldr	r3, [r3, #0]
 8003578:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800357c:	605a      	str	r2, [r3, #4]
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	6859      	ldr	r1, [r3, #4]
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	689a      	ldr	r2, [r3, #8]
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	430a      	orrs	r2, r1
 800358e:	605a      	str	r2, [r3, #4]
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	689a      	ldr	r2, [r3, #8]
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800359e:	609a      	str	r2, [r3, #8]
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	6899      	ldr	r1, [r3, #8]
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	68da      	ldr	r2, [r3, #12]
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	430a      	orrs	r2, r1
 80035b0:	609a      	str	r2, [r3, #8]
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80035b6:	4a58      	ldr	r2, [pc, #352]	@ (8003718 <ADC_Init+0x1f4>)
 80035b8:	4293      	cmp	r3, r2
 80035ba:	d022      	beq.n	8003602 <ADC_Init+0xde>
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	689a      	ldr	r2, [r3, #8]
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	681b      	ldr	r3, [r3, #0]
 80035c6:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80035ca:	609a      	str	r2, [r3, #8]
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	681b      	ldr	r3, [r3, #0]
 80035d0:	6899      	ldr	r1, [r3, #8]
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	430a      	orrs	r2, r1
 80035dc:	609a      	str	r2, [r3, #8]
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	689a      	ldr	r2, [r3, #8]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80035ec:	609a      	str	r2, [r3, #8]
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	681b      	ldr	r3, [r3, #0]
 80035f2:	6899      	ldr	r1, [r3, #8]
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	681b      	ldr	r3, [r3, #0]
 80035fc:	430a      	orrs	r2, r1
 80035fe:	609a      	str	r2, [r3, #8]
 8003600:	e00f      	b.n	8003622 <ADC_Init+0xfe>
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	689a      	ldr	r2, [r3, #8]
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003610:	609a      	str	r2, [r3, #8]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	689a      	ldr	r2, [r3, #8]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003620:	609a      	str	r2, [r3, #8]
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	689a      	ldr	r2, [r3, #8]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	f022 0202 	bic.w	r2, r2, #2
 8003630:	609a      	str	r2, [r3, #8]
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	6899      	ldr	r1, [r3, #8]
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	7e1b      	ldrb	r3, [r3, #24]
 800363c:	005a      	lsls	r2, r3, #1
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	430a      	orrs	r2, r1
 8003644:	609a      	str	r2, [r3, #8]
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	f893 3020 	ldrb.w	r3, [r3, #32]
 800364c:	2b00      	cmp	r3, #0
 800364e:	d01b      	beq.n	8003688 <ADC_Init+0x164>
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	685a      	ldr	r2, [r3, #4]
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800365e:	605a      	str	r2, [r3, #4]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	685a      	ldr	r2, [r3, #4]
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800366e:	605a      	str	r2, [r3, #4]
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	6859      	ldr	r1, [r3, #4]
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800367a:	3b01      	subs	r3, #1
 800367c:	035a      	lsls	r2, r3, #13
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	430a      	orrs	r2, r1
 8003684:	605a      	str	r2, [r3, #4]
 8003686:	e007      	b.n	8003698 <ADC_Init+0x174>
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	685a      	ldr	r2, [r3, #4]
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003696:	605a      	str	r2, [r3, #4]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80036a6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	69db      	ldr	r3, [r3, #28]
 80036b2:	3b01      	subs	r3, #1
 80036b4:	051a      	lsls	r2, r3, #20
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	681b      	ldr	r3, [r3, #0]
 80036ba:	430a      	orrs	r2, r1
 80036bc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	689a      	ldr	r2, [r3, #8]
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80036cc:	609a      	str	r2, [r3, #8]
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	6899      	ldr	r1, [r3, #8]
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80036da:	025a      	lsls	r2, r3, #9
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	430a      	orrs	r2, r1
 80036e2:	609a      	str	r2, [r3, #8]
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	689a      	ldr	r2, [r3, #8]
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80036f2:	609a      	str	r2, [r3, #8]
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	6899      	ldr	r1, [r3, #8]
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	695b      	ldr	r3, [r3, #20]
 80036fe:	029a      	lsls	r2, r3, #10
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	430a      	orrs	r2, r1
 8003706:	609a      	str	r2, [r3, #8]
 8003708:	bf00      	nop
 800370a:	3714      	adds	r7, #20
 800370c:	46bd      	mov	sp, r7
 800370e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003712:	4770      	bx	lr
 8003714:	40012300 	.word	0x40012300
 8003718:	0f000001 	.word	0x0f000001

0800371c <ADC_DMAConvCplt>:
 800371c:	b580      	push	{r7, lr}
 800371e:	b084      	sub	sp, #16
 8003720:	af00      	add	r7, sp, #0
 8003722:	6078      	str	r0, [r7, #4]
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003728:	60fb      	str	r3, [r7, #12]
 800372a:	68fb      	ldr	r3, [r7, #12]
 800372c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800372e:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003732:	2b00      	cmp	r3, #0
 8003734:	d13c      	bne.n	80037b0 <ADC_DMAConvCplt+0x94>
 8003736:	68fb      	ldr	r3, [r7, #12]
 8003738:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800373a:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 800373e:	68fb      	ldr	r3, [r7, #12]
 8003740:	641a      	str	r2, [r3, #64]	@ 0x40
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	689b      	ldr	r3, [r3, #8]
 8003748:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800374c:	2b00      	cmp	r3, #0
 800374e:	d12b      	bne.n	80037a8 <ADC_DMAConvCplt+0x8c>
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	7e1b      	ldrb	r3, [r3, #24]
 8003754:	2b00      	cmp	r3, #0
 8003756:	d127      	bne.n	80037a8 <ADC_DMAConvCplt+0x8c>
 8003758:	68fb      	ldr	r3, [r7, #12]
 800375a:	681b      	ldr	r3, [r3, #0]
 800375c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800375e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8003762:	2b00      	cmp	r3, #0
 8003764:	d006      	beq.n	8003774 <ADC_DMAConvCplt+0x58>
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	681b      	ldr	r3, [r3, #0]
 800376a:	689b      	ldr	r3, [r3, #8]
 800376c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003770:	2b00      	cmp	r3, #0
 8003772:	d119      	bne.n	80037a8 <ADC_DMAConvCplt+0x8c>
 8003774:	68fb      	ldr	r3, [r7, #12]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	685a      	ldr	r2, [r3, #4]
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	f022 0220 	bic.w	r2, r2, #32
 8003782:	605a      	str	r2, [r3, #4]
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003788:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003794:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003798:	2b00      	cmp	r3, #0
 800379a:	d105      	bne.n	80037a8 <ADC_DMAConvCplt+0x8c>
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037a0:	f043 0201 	orr.w	r2, r3, #1
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	641a      	str	r2, [r3, #64]	@ 0x40
 80037a8:	68f8      	ldr	r0, [r7, #12]
 80037aa:	f7ff fd7b 	bl	80032a4 <HAL_ADC_ConvCpltCallback>
 80037ae:	e00e      	b.n	80037ce <ADC_DMAConvCplt+0xb2>
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037b4:	f003 0310 	and.w	r3, r3, #16
 80037b8:	2b00      	cmp	r3, #0
 80037ba:	d003      	beq.n	80037c4 <ADC_DMAConvCplt+0xa8>
 80037bc:	68f8      	ldr	r0, [r7, #12]
 80037be:	f7ff fd85 	bl	80032cc <HAL_ADC_ErrorCallback>
 80037c2:	e004      	b.n	80037ce <ADC_DMAConvCplt+0xb2>
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80037c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80037ca:	6878      	ldr	r0, [r7, #4]
 80037cc:	4798      	blx	r3
 80037ce:	bf00      	nop
 80037d0:	3710      	adds	r7, #16
 80037d2:	46bd      	mov	sp, r7
 80037d4:	bd80      	pop	{r7, pc}

080037d6 <ADC_DMAHalfConvCplt>:
 80037d6:	b580      	push	{r7, lr}
 80037d8:	b084      	sub	sp, #16
 80037da:	af00      	add	r7, sp, #0
 80037dc:	6078      	str	r0, [r7, #4]
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80037e2:	60fb      	str	r3, [r7, #12]
 80037e4:	68f8      	ldr	r0, [r7, #12]
 80037e6:	f7ff fd67 	bl	80032b8 <HAL_ADC_ConvHalfCpltCallback>
 80037ea:	bf00      	nop
 80037ec:	3710      	adds	r7, #16
 80037ee:	46bd      	mov	sp, r7
 80037f0:	bd80      	pop	{r7, pc}

080037f2 <ADC_DMAError>:
 80037f2:	b580      	push	{r7, lr}
 80037f4:	b084      	sub	sp, #16
 80037f6:	af00      	add	r7, sp, #0
 80037f8:	6078      	str	r0, [r7, #4]
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80037fe:	60fb      	str	r3, [r7, #12]
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	2240      	movs	r2, #64	@ 0x40
 8003804:	641a      	str	r2, [r3, #64]	@ 0x40
 8003806:	68fb      	ldr	r3, [r7, #12]
 8003808:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800380a:	f043 0204 	orr.w	r2, r3, #4
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	645a      	str	r2, [r3, #68]	@ 0x44
 8003812:	68f8      	ldr	r0, [r7, #12]
 8003814:	f7ff fd5a 	bl	80032cc <HAL_ADC_ErrorCallback>
 8003818:	bf00      	nop
 800381a:	3710      	adds	r7, #16
 800381c:	46bd      	mov	sp, r7
 800381e:	bd80      	pop	{r7, pc}

08003820 <__NVIC_SetPriorityGrouping>:
 8003820:	b480      	push	{r7}
 8003822:	b085      	sub	sp, #20
 8003824:	af00      	add	r7, sp, #0
 8003826:	6078      	str	r0, [r7, #4]
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	f003 0307 	and.w	r3, r3, #7
 800382e:	60fb      	str	r3, [r7, #12]
 8003830:	4b0c      	ldr	r3, [pc, #48]	@ (8003864 <__NVIC_SetPriorityGrouping+0x44>)
 8003832:	68db      	ldr	r3, [r3, #12]
 8003834:	60bb      	str	r3, [r7, #8]
 8003836:	68ba      	ldr	r2, [r7, #8]
 8003838:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800383c:	4013      	ands	r3, r2
 800383e:	60bb      	str	r3, [r7, #8]
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	021a      	lsls	r2, r3, #8
 8003844:	68bb      	ldr	r3, [r7, #8]
 8003846:	4313      	orrs	r3, r2
 8003848:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800384c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003850:	60bb      	str	r3, [r7, #8]
 8003852:	4a04      	ldr	r2, [pc, #16]	@ (8003864 <__NVIC_SetPriorityGrouping+0x44>)
 8003854:	68bb      	ldr	r3, [r7, #8]
 8003856:	60d3      	str	r3, [r2, #12]
 8003858:	bf00      	nop
 800385a:	3714      	adds	r7, #20
 800385c:	46bd      	mov	sp, r7
 800385e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003862:	4770      	bx	lr
 8003864:	e000ed00 	.word	0xe000ed00

08003868 <__NVIC_GetPriorityGrouping>:
 8003868:	b480      	push	{r7}
 800386a:	af00      	add	r7, sp, #0
 800386c:	4b04      	ldr	r3, [pc, #16]	@ (8003880 <__NVIC_GetPriorityGrouping+0x18>)
 800386e:	68db      	ldr	r3, [r3, #12]
 8003870:	0a1b      	lsrs	r3, r3, #8
 8003872:	f003 0307 	and.w	r3, r3, #7
 8003876:	4618      	mov	r0, r3
 8003878:	46bd      	mov	sp, r7
 800387a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800387e:	4770      	bx	lr
 8003880:	e000ed00 	.word	0xe000ed00

08003884 <__NVIC_EnableIRQ>:
 8003884:	b480      	push	{r7}
 8003886:	b083      	sub	sp, #12
 8003888:	af00      	add	r7, sp, #0
 800388a:	4603      	mov	r3, r0
 800388c:	71fb      	strb	r3, [r7, #7]
 800388e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003892:	2b00      	cmp	r3, #0
 8003894:	db0b      	blt.n	80038ae <__NVIC_EnableIRQ+0x2a>
 8003896:	79fb      	ldrb	r3, [r7, #7]
 8003898:	f003 021f 	and.w	r2, r3, #31
 800389c:	4907      	ldr	r1, [pc, #28]	@ (80038bc <__NVIC_EnableIRQ+0x38>)
 800389e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80038a2:	095b      	lsrs	r3, r3, #5
 80038a4:	2001      	movs	r0, #1
 80038a6:	fa00 f202 	lsl.w	r2, r0, r2
 80038aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80038ae:	bf00      	nop
 80038b0:	370c      	adds	r7, #12
 80038b2:	46bd      	mov	sp, r7
 80038b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b8:	4770      	bx	lr
 80038ba:	bf00      	nop
 80038bc:	e000e100 	.word	0xe000e100

080038c0 <__NVIC_SetPriority>:
 80038c0:	b480      	push	{r7}
 80038c2:	b083      	sub	sp, #12
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	4603      	mov	r3, r0
 80038c8:	6039      	str	r1, [r7, #0]
 80038ca:	71fb      	strb	r3, [r7, #7]
 80038cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80038d0:	2b00      	cmp	r3, #0
 80038d2:	db0a      	blt.n	80038ea <__NVIC_SetPriority+0x2a>
 80038d4:	683b      	ldr	r3, [r7, #0]
 80038d6:	b2da      	uxtb	r2, r3
 80038d8:	490c      	ldr	r1, [pc, #48]	@ (800390c <__NVIC_SetPriority+0x4c>)
 80038da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80038de:	0112      	lsls	r2, r2, #4
 80038e0:	b2d2      	uxtb	r2, r2
 80038e2:	440b      	add	r3, r1
 80038e4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80038e8:	e00a      	b.n	8003900 <__NVIC_SetPriority+0x40>
 80038ea:	683b      	ldr	r3, [r7, #0]
 80038ec:	b2da      	uxtb	r2, r3
 80038ee:	4908      	ldr	r1, [pc, #32]	@ (8003910 <__NVIC_SetPriority+0x50>)
 80038f0:	79fb      	ldrb	r3, [r7, #7]
 80038f2:	f003 030f 	and.w	r3, r3, #15
 80038f6:	3b04      	subs	r3, #4
 80038f8:	0112      	lsls	r2, r2, #4
 80038fa:	b2d2      	uxtb	r2, r2
 80038fc:	440b      	add	r3, r1
 80038fe:	761a      	strb	r2, [r3, #24]
 8003900:	bf00      	nop
 8003902:	370c      	adds	r7, #12
 8003904:	46bd      	mov	sp, r7
 8003906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800390a:	4770      	bx	lr
 800390c:	e000e100 	.word	0xe000e100
 8003910:	e000ed00 	.word	0xe000ed00

08003914 <NVIC_EncodePriority>:
 8003914:	b480      	push	{r7}
 8003916:	b089      	sub	sp, #36	@ 0x24
 8003918:	af00      	add	r7, sp, #0
 800391a:	60f8      	str	r0, [r7, #12]
 800391c:	60b9      	str	r1, [r7, #8]
 800391e:	607a      	str	r2, [r7, #4]
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	f003 0307 	and.w	r3, r3, #7
 8003926:	61fb      	str	r3, [r7, #28]
 8003928:	69fb      	ldr	r3, [r7, #28]
 800392a:	f1c3 0307 	rsb	r3, r3, #7
 800392e:	2b04      	cmp	r3, #4
 8003930:	bf28      	it	cs
 8003932:	2304      	movcs	r3, #4
 8003934:	61bb      	str	r3, [r7, #24]
 8003936:	69fb      	ldr	r3, [r7, #28]
 8003938:	3304      	adds	r3, #4
 800393a:	2b06      	cmp	r3, #6
 800393c:	d902      	bls.n	8003944 <NVIC_EncodePriority+0x30>
 800393e:	69fb      	ldr	r3, [r7, #28]
 8003940:	3b03      	subs	r3, #3
 8003942:	e000      	b.n	8003946 <NVIC_EncodePriority+0x32>
 8003944:	2300      	movs	r3, #0
 8003946:	617b      	str	r3, [r7, #20]
 8003948:	f04f 32ff 	mov.w	r2, #4294967295
 800394c:	69bb      	ldr	r3, [r7, #24]
 800394e:	fa02 f303 	lsl.w	r3, r2, r3
 8003952:	43da      	mvns	r2, r3
 8003954:	68bb      	ldr	r3, [r7, #8]
 8003956:	401a      	ands	r2, r3
 8003958:	697b      	ldr	r3, [r7, #20]
 800395a:	409a      	lsls	r2, r3
 800395c:	f04f 31ff 	mov.w	r1, #4294967295
 8003960:	697b      	ldr	r3, [r7, #20]
 8003962:	fa01 f303 	lsl.w	r3, r1, r3
 8003966:	43d9      	mvns	r1, r3
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	400b      	ands	r3, r1
 800396c:	4313      	orrs	r3, r2
 800396e:	4618      	mov	r0, r3
 8003970:	3724      	adds	r7, #36	@ 0x24
 8003972:	46bd      	mov	sp, r7
 8003974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003978:	4770      	bx	lr
	...

0800397c <SysTick_Config>:
 800397c:	b580      	push	{r7, lr}
 800397e:	b082      	sub	sp, #8
 8003980:	af00      	add	r7, sp, #0
 8003982:	6078      	str	r0, [r7, #4]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	3b01      	subs	r3, #1
 8003988:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800398c:	d301      	bcc.n	8003992 <SysTick_Config+0x16>
 800398e:	2301      	movs	r3, #1
 8003990:	e00f      	b.n	80039b2 <SysTick_Config+0x36>
 8003992:	4a0a      	ldr	r2, [pc, #40]	@ (80039bc <SysTick_Config+0x40>)
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	3b01      	subs	r3, #1
 8003998:	6053      	str	r3, [r2, #4]
 800399a:	210f      	movs	r1, #15
 800399c:	f04f 30ff 	mov.w	r0, #4294967295
 80039a0:	f7ff ff8e 	bl	80038c0 <__NVIC_SetPriority>
 80039a4:	4b05      	ldr	r3, [pc, #20]	@ (80039bc <SysTick_Config+0x40>)
 80039a6:	2200      	movs	r2, #0
 80039a8:	609a      	str	r2, [r3, #8]
 80039aa:	4b04      	ldr	r3, [pc, #16]	@ (80039bc <SysTick_Config+0x40>)
 80039ac:	2207      	movs	r2, #7
 80039ae:	601a      	str	r2, [r3, #0]
 80039b0:	2300      	movs	r3, #0
 80039b2:	4618      	mov	r0, r3
 80039b4:	3708      	adds	r7, #8
 80039b6:	46bd      	mov	sp, r7
 80039b8:	bd80      	pop	{r7, pc}
 80039ba:	bf00      	nop
 80039bc:	e000e010 	.word	0xe000e010

080039c0 <HAL_NVIC_SetPriorityGrouping>:
 80039c0:	b580      	push	{r7, lr}
 80039c2:	b082      	sub	sp, #8
 80039c4:	af00      	add	r7, sp, #0
 80039c6:	6078      	str	r0, [r7, #4]
 80039c8:	6878      	ldr	r0, [r7, #4]
 80039ca:	f7ff ff29 	bl	8003820 <__NVIC_SetPriorityGrouping>
 80039ce:	bf00      	nop
 80039d0:	3708      	adds	r7, #8
 80039d2:	46bd      	mov	sp, r7
 80039d4:	bd80      	pop	{r7, pc}

080039d6 <HAL_NVIC_SetPriority>:
 80039d6:	b580      	push	{r7, lr}
 80039d8:	b086      	sub	sp, #24
 80039da:	af00      	add	r7, sp, #0
 80039dc:	4603      	mov	r3, r0
 80039de:	60b9      	str	r1, [r7, #8]
 80039e0:	607a      	str	r2, [r7, #4]
 80039e2:	73fb      	strb	r3, [r7, #15]
 80039e4:	2300      	movs	r3, #0
 80039e6:	617b      	str	r3, [r7, #20]
 80039e8:	f7ff ff3e 	bl	8003868 <__NVIC_GetPriorityGrouping>
 80039ec:	6178      	str	r0, [r7, #20]
 80039ee:	687a      	ldr	r2, [r7, #4]
 80039f0:	68b9      	ldr	r1, [r7, #8]
 80039f2:	6978      	ldr	r0, [r7, #20]
 80039f4:	f7ff ff8e 	bl	8003914 <NVIC_EncodePriority>
 80039f8:	4602      	mov	r2, r0
 80039fa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80039fe:	4611      	mov	r1, r2
 8003a00:	4618      	mov	r0, r3
 8003a02:	f7ff ff5d 	bl	80038c0 <__NVIC_SetPriority>
 8003a06:	bf00      	nop
 8003a08:	3718      	adds	r7, #24
 8003a0a:	46bd      	mov	sp, r7
 8003a0c:	bd80      	pop	{r7, pc}

08003a0e <HAL_NVIC_EnableIRQ>:
 8003a0e:	b580      	push	{r7, lr}
 8003a10:	b082      	sub	sp, #8
 8003a12:	af00      	add	r7, sp, #0
 8003a14:	4603      	mov	r3, r0
 8003a16:	71fb      	strb	r3, [r7, #7]
 8003a18:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003a1c:	4618      	mov	r0, r3
 8003a1e:	f7ff ff31 	bl	8003884 <__NVIC_EnableIRQ>
 8003a22:	bf00      	nop
 8003a24:	3708      	adds	r7, #8
 8003a26:	46bd      	mov	sp, r7
 8003a28:	bd80      	pop	{r7, pc}

08003a2a <HAL_SYSTICK_Config>:
 8003a2a:	b580      	push	{r7, lr}
 8003a2c:	b082      	sub	sp, #8
 8003a2e:	af00      	add	r7, sp, #0
 8003a30:	6078      	str	r0, [r7, #4]
 8003a32:	6878      	ldr	r0, [r7, #4]
 8003a34:	f7ff ffa2 	bl	800397c <SysTick_Config>
 8003a38:	4603      	mov	r3, r0
 8003a3a:	4618      	mov	r0, r3
 8003a3c:	3708      	adds	r7, #8
 8003a3e:	46bd      	mov	sp, r7
 8003a40:	bd80      	pop	{r7, pc}
	...

08003a44 <HAL_DMA_Init>:
 8003a44:	b580      	push	{r7, lr}
 8003a46:	b086      	sub	sp, #24
 8003a48:	af00      	add	r7, sp, #0
 8003a4a:	6078      	str	r0, [r7, #4]
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	617b      	str	r3, [r7, #20]
 8003a50:	f7ff faa4 	bl	8002f9c <HAL_GetTick>
 8003a54:	6138      	str	r0, [r7, #16]
 8003a56:	687b      	ldr	r3, [r7, #4]
 8003a58:	2b00      	cmp	r3, #0
 8003a5a:	d101      	bne.n	8003a60 <HAL_DMA_Init+0x1c>
 8003a5c:	2301      	movs	r3, #1
 8003a5e:	e099      	b.n	8003b94 <HAL_DMA_Init+0x150>
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	2202      	movs	r2, #2
 8003a64:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	681a      	ldr	r2, [r3, #0]
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	f022 0201 	bic.w	r2, r2, #1
 8003a7e:	601a      	str	r2, [r3, #0]
 8003a80:	e00f      	b.n	8003aa2 <HAL_DMA_Init+0x5e>
 8003a82:	f7ff fa8b 	bl	8002f9c <HAL_GetTick>
 8003a86:	4602      	mov	r2, r0
 8003a88:	693b      	ldr	r3, [r7, #16]
 8003a8a:	1ad3      	subs	r3, r2, r3
 8003a8c:	2b05      	cmp	r3, #5
 8003a8e:	d908      	bls.n	8003aa2 <HAL_DMA_Init+0x5e>
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	2220      	movs	r2, #32
 8003a94:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	2203      	movs	r2, #3
 8003a9a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a9e:	2303      	movs	r3, #3
 8003aa0:	e078      	b.n	8003b94 <HAL_DMA_Init+0x150>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	f003 0301 	and.w	r3, r3, #1
 8003aac:	2b00      	cmp	r3, #0
 8003aae:	d1e8      	bne.n	8003a82 <HAL_DMA_Init+0x3e>
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	617b      	str	r3, [r7, #20]
 8003ab8:	697a      	ldr	r2, [r7, #20]
 8003aba:	4b38      	ldr	r3, [pc, #224]	@ (8003b9c <HAL_DMA_Init+0x158>)
 8003abc:	4013      	ands	r3, r2
 8003abe:	617b      	str	r3, [r7, #20]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	685a      	ldr	r2, [r3, #4]
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	689b      	ldr	r3, [r3, #8]
 8003ac8:	431a      	orrs	r2, r3
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	68db      	ldr	r3, [r3, #12]
 8003ace:	431a      	orrs	r2, r3
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	691b      	ldr	r3, [r3, #16]
 8003ad4:	431a      	orrs	r2, r3
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	695b      	ldr	r3, [r3, #20]
 8003ada:	431a      	orrs	r2, r3
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	699b      	ldr	r3, [r3, #24]
 8003ae0:	431a      	orrs	r2, r3
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	69db      	ldr	r3, [r3, #28]
 8003ae6:	431a      	orrs	r2, r3
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	6a1b      	ldr	r3, [r3, #32]
 8003aec:	4313      	orrs	r3, r2
 8003aee:	697a      	ldr	r2, [r7, #20]
 8003af0:	4313      	orrs	r3, r2
 8003af2:	617b      	str	r3, [r7, #20]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003af8:	2b04      	cmp	r3, #4
 8003afa:	d107      	bne.n	8003b0c <HAL_DMA_Init+0xc8>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003b04:	4313      	orrs	r3, r2
 8003b06:	697a      	ldr	r2, [r7, #20]
 8003b08:	4313      	orrs	r3, r2
 8003b0a:	617b      	str	r3, [r7, #20]
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	697a      	ldr	r2, [r7, #20]
 8003b12:	601a      	str	r2, [r3, #0]
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	695b      	ldr	r3, [r3, #20]
 8003b1a:	617b      	str	r3, [r7, #20]
 8003b1c:	697b      	ldr	r3, [r7, #20]
 8003b1e:	f023 0307 	bic.w	r3, r3, #7
 8003b22:	617b      	str	r3, [r7, #20]
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b28:	697a      	ldr	r2, [r7, #20]
 8003b2a:	4313      	orrs	r3, r2
 8003b2c:	617b      	str	r3, [r7, #20]
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b32:	2b04      	cmp	r3, #4
 8003b34:	d117      	bne.n	8003b66 <HAL_DMA_Init+0x122>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003b3a:	697a      	ldr	r2, [r7, #20]
 8003b3c:	4313      	orrs	r3, r2
 8003b3e:	617b      	str	r3, [r7, #20]
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	d00e      	beq.n	8003b66 <HAL_DMA_Init+0x122>
 8003b48:	6878      	ldr	r0, [r7, #4]
 8003b4a:	f000 fb01 	bl	8004150 <DMA_CheckFifoParam>
 8003b4e:	4603      	mov	r3, r0
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d008      	beq.n	8003b66 <HAL_DMA_Init+0x122>
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	2240      	movs	r2, #64	@ 0x40
 8003b58:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	2201      	movs	r2, #1
 8003b5e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b62:	2301      	movs	r3, #1
 8003b64:	e016      	b.n	8003b94 <HAL_DMA_Init+0x150>
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	697a      	ldr	r2, [r7, #20]
 8003b6c:	615a      	str	r2, [r3, #20]
 8003b6e:	6878      	ldr	r0, [r7, #4]
 8003b70:	f000 fab8 	bl	80040e4 <DMA_CalcBaseAndBitshift>
 8003b74:	4603      	mov	r3, r0
 8003b76:	60fb      	str	r3, [r7, #12]
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b7c:	223f      	movs	r2, #63	@ 0x3f
 8003b7e:	409a      	lsls	r2, r3
 8003b80:	68fb      	ldr	r3, [r7, #12]
 8003b82:	609a      	str	r2, [r3, #8]
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	2200      	movs	r2, #0
 8003b88:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	2201      	movs	r2, #1
 8003b8e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b92:	2300      	movs	r3, #0
 8003b94:	4618      	mov	r0, r3
 8003b96:	3718      	adds	r7, #24
 8003b98:	46bd      	mov	sp, r7
 8003b9a:	bd80      	pop	{r7, pc}
 8003b9c:	f010803f 	.word	0xf010803f

08003ba0 <HAL_DMA_Start_IT>:
 8003ba0:	b580      	push	{r7, lr}
 8003ba2:	b086      	sub	sp, #24
 8003ba4:	af00      	add	r7, sp, #0
 8003ba6:	60f8      	str	r0, [r7, #12]
 8003ba8:	60b9      	str	r1, [r7, #8]
 8003baa:	607a      	str	r2, [r7, #4]
 8003bac:	603b      	str	r3, [r7, #0]
 8003bae:	2300      	movs	r3, #0
 8003bb0:	75fb      	strb	r3, [r7, #23]
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003bb6:	613b      	str	r3, [r7, #16]
 8003bb8:	68fb      	ldr	r3, [r7, #12]
 8003bba:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003bbe:	2b01      	cmp	r3, #1
 8003bc0:	d101      	bne.n	8003bc6 <HAL_DMA_Start_IT+0x26>
 8003bc2:	2302      	movs	r3, #2
 8003bc4:	e040      	b.n	8003c48 <HAL_DMA_Start_IT+0xa8>
 8003bc6:	68fb      	ldr	r3, [r7, #12]
 8003bc8:	2201      	movs	r2, #1
 8003bca:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003bce:	68fb      	ldr	r3, [r7, #12]
 8003bd0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003bd4:	b2db      	uxtb	r3, r3
 8003bd6:	2b01      	cmp	r3, #1
 8003bd8:	d12f      	bne.n	8003c3a <HAL_DMA_Start_IT+0x9a>
 8003bda:	68fb      	ldr	r3, [r7, #12]
 8003bdc:	2202      	movs	r2, #2
 8003bde:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003be2:	68fb      	ldr	r3, [r7, #12]
 8003be4:	2200      	movs	r2, #0
 8003be6:	655a      	str	r2, [r3, #84]	@ 0x54
 8003be8:	683b      	ldr	r3, [r7, #0]
 8003bea:	687a      	ldr	r2, [r7, #4]
 8003bec:	68b9      	ldr	r1, [r7, #8]
 8003bee:	68f8      	ldr	r0, [r7, #12]
 8003bf0:	f000 fa4a 	bl	8004088 <DMA_SetConfig>
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bf8:	223f      	movs	r2, #63	@ 0x3f
 8003bfa:	409a      	lsls	r2, r3
 8003bfc:	693b      	ldr	r3, [r7, #16]
 8003bfe:	609a      	str	r2, [r3, #8]
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	681a      	ldr	r2, [r3, #0]
 8003c06:	68fb      	ldr	r3, [r7, #12]
 8003c08:	681b      	ldr	r3, [r3, #0]
 8003c0a:	f042 0216 	orr.w	r2, r2, #22
 8003c0e:	601a      	str	r2, [r3, #0]
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c14:	2b00      	cmp	r3, #0
 8003c16:	d007      	beq.n	8003c28 <HAL_DMA_Start_IT+0x88>
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	681a      	ldr	r2, [r3, #0]
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	f042 0208 	orr.w	r2, r2, #8
 8003c26:	601a      	str	r2, [r3, #0]
 8003c28:	68fb      	ldr	r3, [r7, #12]
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	681a      	ldr	r2, [r3, #0]
 8003c2e:	68fb      	ldr	r3, [r7, #12]
 8003c30:	681b      	ldr	r3, [r3, #0]
 8003c32:	f042 0201 	orr.w	r2, r2, #1
 8003c36:	601a      	str	r2, [r3, #0]
 8003c38:	e005      	b.n	8003c46 <HAL_DMA_Start_IT+0xa6>
 8003c3a:	68fb      	ldr	r3, [r7, #12]
 8003c3c:	2200      	movs	r2, #0
 8003c3e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c42:	2302      	movs	r3, #2
 8003c44:	75fb      	strb	r3, [r7, #23]
 8003c46:	7dfb      	ldrb	r3, [r7, #23]
 8003c48:	4618      	mov	r0, r3
 8003c4a:	3718      	adds	r7, #24
 8003c4c:	46bd      	mov	sp, r7
 8003c4e:	bd80      	pop	{r7, pc}

08003c50 <HAL_DMA_Abort>:
 8003c50:	b580      	push	{r7, lr}
 8003c52:	b084      	sub	sp, #16
 8003c54:	af00      	add	r7, sp, #0
 8003c56:	6078      	str	r0, [r7, #4]
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003c5c:	60fb      	str	r3, [r7, #12]
 8003c5e:	f7ff f99d 	bl	8002f9c <HAL_GetTick>
 8003c62:	60b8      	str	r0, [r7, #8]
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003c6a:	b2db      	uxtb	r3, r3
 8003c6c:	2b02      	cmp	r3, #2
 8003c6e:	d008      	beq.n	8003c82 <HAL_DMA_Abort+0x32>
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	2280      	movs	r2, #128	@ 0x80
 8003c74:	655a      	str	r2, [r3, #84]	@ 0x54
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	2200      	movs	r2, #0
 8003c7a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c7e:	2301      	movs	r3, #1
 8003c80:	e052      	b.n	8003d28 <HAL_DMA_Abort+0xd8>
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	681a      	ldr	r2, [r3, #0]
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	f022 0216 	bic.w	r2, r2, #22
 8003c90:	601a      	str	r2, [r3, #0]
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	695a      	ldr	r2, [r3, #20]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003ca0:	615a      	str	r2, [r3, #20]
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d103      	bne.n	8003cb2 <HAL_DMA_Abort+0x62>
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d007      	beq.n	8003cc2 <HAL_DMA_Abort+0x72>
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	681a      	ldr	r2, [r3, #0]
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	f022 0208 	bic.w	r2, r2, #8
 8003cc0:	601a      	str	r2, [r3, #0]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	681a      	ldr	r2, [r3, #0]
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	f022 0201 	bic.w	r2, r2, #1
 8003cd0:	601a      	str	r2, [r3, #0]
 8003cd2:	e013      	b.n	8003cfc <HAL_DMA_Abort+0xac>
 8003cd4:	f7ff f962 	bl	8002f9c <HAL_GetTick>
 8003cd8:	4602      	mov	r2, r0
 8003cda:	68bb      	ldr	r3, [r7, #8]
 8003cdc:	1ad3      	subs	r3, r2, r3
 8003cde:	2b05      	cmp	r3, #5
 8003ce0:	d90c      	bls.n	8003cfc <HAL_DMA_Abort+0xac>
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	2220      	movs	r2, #32
 8003ce6:	655a      	str	r2, [r3, #84]	@ 0x54
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	2203      	movs	r2, #3
 8003cec:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	2200      	movs	r2, #0
 8003cf4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003cf8:	2303      	movs	r3, #3
 8003cfa:	e015      	b.n	8003d28 <HAL_DMA_Abort+0xd8>
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	f003 0301 	and.w	r3, r3, #1
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	d1e4      	bne.n	8003cd4 <HAL_DMA_Abort+0x84>
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d0e:	223f      	movs	r2, #63	@ 0x3f
 8003d10:	409a      	lsls	r2, r3
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	609a      	str	r2, [r3, #8]
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	2201      	movs	r2, #1
 8003d1a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	2200      	movs	r2, #0
 8003d22:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003d26:	2300      	movs	r3, #0
 8003d28:	4618      	mov	r0, r3
 8003d2a:	3710      	adds	r7, #16
 8003d2c:	46bd      	mov	sp, r7
 8003d2e:	bd80      	pop	{r7, pc}

08003d30 <HAL_DMA_Abort_IT>:
 8003d30:	b480      	push	{r7}
 8003d32:	b083      	sub	sp, #12
 8003d34:	af00      	add	r7, sp, #0
 8003d36:	6078      	str	r0, [r7, #4]
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003d3e:	b2db      	uxtb	r3, r3
 8003d40:	2b02      	cmp	r3, #2
 8003d42:	d004      	beq.n	8003d4e <HAL_DMA_Abort_IT+0x1e>
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	2280      	movs	r2, #128	@ 0x80
 8003d48:	655a      	str	r2, [r3, #84]	@ 0x54
 8003d4a:	2301      	movs	r3, #1
 8003d4c:	e00c      	b.n	8003d68 <HAL_DMA_Abort_IT+0x38>
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	2205      	movs	r2, #5
 8003d52:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	681a      	ldr	r2, [r3, #0]
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	f022 0201 	bic.w	r2, r2, #1
 8003d64:	601a      	str	r2, [r3, #0]
 8003d66:	2300      	movs	r3, #0
 8003d68:	4618      	mov	r0, r3
 8003d6a:	370c      	adds	r7, #12
 8003d6c:	46bd      	mov	sp, r7
 8003d6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d72:	4770      	bx	lr

08003d74 <HAL_DMA_IRQHandler>:
 8003d74:	b580      	push	{r7, lr}
 8003d76:	b086      	sub	sp, #24
 8003d78:	af00      	add	r7, sp, #0
 8003d7a:	6078      	str	r0, [r7, #4]
 8003d7c:	2300      	movs	r3, #0
 8003d7e:	60bb      	str	r3, [r7, #8]
 8003d80:	4b8e      	ldr	r3, [pc, #568]	@ (8003fbc <HAL_DMA_IRQHandler+0x248>)
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	4a8e      	ldr	r2, [pc, #568]	@ (8003fc0 <HAL_DMA_IRQHandler+0x24c>)
 8003d86:	fba2 2303 	umull	r2, r3, r2, r3
 8003d8a:	0a9b      	lsrs	r3, r3, #10
 8003d8c:	617b      	str	r3, [r7, #20]
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003d92:	613b      	str	r3, [r7, #16]
 8003d94:	693b      	ldr	r3, [r7, #16]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	60fb      	str	r3, [r7, #12]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d9e:	2208      	movs	r2, #8
 8003da0:	409a      	lsls	r2, r3
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	4013      	ands	r3, r2
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	d01a      	beq.n	8003de0 <HAL_DMA_IRQHandler+0x6c>
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	f003 0304 	and.w	r3, r3, #4
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	d013      	beq.n	8003de0 <HAL_DMA_IRQHandler+0x6c>
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	681a      	ldr	r2, [r3, #0]
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	f022 0204 	bic.w	r2, r2, #4
 8003dc6:	601a      	str	r2, [r3, #0]
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003dcc:	2208      	movs	r2, #8
 8003dce:	409a      	lsls	r2, r3
 8003dd0:	693b      	ldr	r3, [r7, #16]
 8003dd2:	609a      	str	r2, [r3, #8]
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003dd8:	f043 0201 	orr.w	r2, r3, #1
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	655a      	str	r2, [r3, #84]	@ 0x54
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003de4:	2201      	movs	r2, #1
 8003de6:	409a      	lsls	r2, r3
 8003de8:	68fb      	ldr	r3, [r7, #12]
 8003dea:	4013      	ands	r3, r2
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	d012      	beq.n	8003e16 <HAL_DMA_IRQHandler+0xa2>
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	695b      	ldr	r3, [r3, #20]
 8003df6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003dfa:	2b00      	cmp	r3, #0
 8003dfc:	d00b      	beq.n	8003e16 <HAL_DMA_IRQHandler+0xa2>
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e02:	2201      	movs	r2, #1
 8003e04:	409a      	lsls	r2, r3
 8003e06:	693b      	ldr	r3, [r7, #16]
 8003e08:	609a      	str	r2, [r3, #8]
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003e0e:	f043 0202 	orr.w	r2, r3, #2
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	655a      	str	r2, [r3, #84]	@ 0x54
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e1a:	2204      	movs	r2, #4
 8003e1c:	409a      	lsls	r2, r3
 8003e1e:	68fb      	ldr	r3, [r7, #12]
 8003e20:	4013      	ands	r3, r2
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d012      	beq.n	8003e4c <HAL_DMA_IRQHandler+0xd8>
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	681b      	ldr	r3, [r3, #0]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	f003 0302 	and.w	r3, r3, #2
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d00b      	beq.n	8003e4c <HAL_DMA_IRQHandler+0xd8>
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e38:	2204      	movs	r2, #4
 8003e3a:	409a      	lsls	r2, r3
 8003e3c:	693b      	ldr	r3, [r7, #16]
 8003e3e:	609a      	str	r2, [r3, #8]
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003e44:	f043 0204 	orr.w	r2, r3, #4
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	655a      	str	r2, [r3, #84]	@ 0x54
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e50:	2210      	movs	r2, #16
 8003e52:	409a      	lsls	r2, r3
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	4013      	ands	r3, r2
 8003e58:	2b00      	cmp	r3, #0
 8003e5a:	d043      	beq.n	8003ee4 <HAL_DMA_IRQHandler+0x170>
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	f003 0308 	and.w	r3, r3, #8
 8003e66:	2b00      	cmp	r3, #0
 8003e68:	d03c      	beq.n	8003ee4 <HAL_DMA_IRQHandler+0x170>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e6e:	2210      	movs	r2, #16
 8003e70:	409a      	lsls	r2, r3
 8003e72:	693b      	ldr	r3, [r7, #16]
 8003e74:	609a      	str	r2, [r3, #8]
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003e80:	2b00      	cmp	r3, #0
 8003e82:	d018      	beq.n	8003eb6 <HAL_DMA_IRQHandler+0x142>
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	681b      	ldr	r3, [r3, #0]
 8003e8a:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d108      	bne.n	8003ea4 <HAL_DMA_IRQHandler+0x130>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	d024      	beq.n	8003ee4 <HAL_DMA_IRQHandler+0x170>
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e9e:	6878      	ldr	r0, [r7, #4]
 8003ea0:	4798      	blx	r3
 8003ea2:	e01f      	b.n	8003ee4 <HAL_DMA_IRQHandler+0x170>
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003ea8:	2b00      	cmp	r3, #0
 8003eaa:	d01b      	beq.n	8003ee4 <HAL_DMA_IRQHandler+0x170>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003eb0:	6878      	ldr	r0, [r7, #4]
 8003eb2:	4798      	blx	r3
 8003eb4:	e016      	b.n	8003ee4 <HAL_DMA_IRQHandler+0x170>
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ec0:	2b00      	cmp	r3, #0
 8003ec2:	d107      	bne.n	8003ed4 <HAL_DMA_IRQHandler+0x160>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	681a      	ldr	r2, [r3, #0]
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	f022 0208 	bic.w	r2, r2, #8
 8003ed2:	601a      	str	r2, [r3, #0]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d003      	beq.n	8003ee4 <HAL_DMA_IRQHandler+0x170>
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ee0:	6878      	ldr	r0, [r7, #4]
 8003ee2:	4798      	blx	r3
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ee8:	2220      	movs	r2, #32
 8003eea:	409a      	lsls	r2, r3
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	4013      	ands	r3, r2
 8003ef0:	2b00      	cmp	r3, #0
 8003ef2:	f000 808f 	beq.w	8004014 <HAL_DMA_IRQHandler+0x2a0>
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	f003 0310 	and.w	r3, r3, #16
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	f000 8087 	beq.w	8004014 <HAL_DMA_IRQHandler+0x2a0>
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003f0a:	2220      	movs	r2, #32
 8003f0c:	409a      	lsls	r2, r3
 8003f0e:	693b      	ldr	r3, [r7, #16]
 8003f10:	609a      	str	r2, [r3, #8]
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003f18:	b2db      	uxtb	r3, r3
 8003f1a:	2b05      	cmp	r3, #5
 8003f1c:	d136      	bne.n	8003f8c <HAL_DMA_IRQHandler+0x218>
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	681a      	ldr	r2, [r3, #0]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	f022 0216 	bic.w	r2, r2, #22
 8003f2c:	601a      	str	r2, [r3, #0]
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	695a      	ldr	r2, [r3, #20]
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003f3c:	615a      	str	r2, [r3, #20]
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d103      	bne.n	8003f4e <HAL_DMA_IRQHandler+0x1da>
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d007      	beq.n	8003f5e <HAL_DMA_IRQHandler+0x1ea>
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	681b      	ldr	r3, [r3, #0]
 8003f52:	681a      	ldr	r2, [r3, #0]
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	f022 0208 	bic.w	r2, r2, #8
 8003f5c:	601a      	str	r2, [r3, #0]
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003f62:	223f      	movs	r2, #63	@ 0x3f
 8003f64:	409a      	lsls	r2, r3
 8003f66:	693b      	ldr	r3, [r7, #16]
 8003f68:	609a      	str	r2, [r3, #8]
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	2201      	movs	r2, #1
 8003f6e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	2200      	movs	r2, #0
 8003f76:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	d07e      	beq.n	8004080 <HAL_DMA_IRQHandler+0x30c>
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003f86:	6878      	ldr	r0, [r7, #4]
 8003f88:	4798      	blx	r3
 8003f8a:	e079      	b.n	8004080 <HAL_DMA_IRQHandler+0x30c>
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d01d      	beq.n	8003fd6 <HAL_DMA_IRQHandler+0x262>
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	d10d      	bne.n	8003fc4 <HAL_DMA_IRQHandler+0x250>
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d031      	beq.n	8004014 <HAL_DMA_IRQHandler+0x2a0>
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fb4:	6878      	ldr	r0, [r7, #4]
 8003fb6:	4798      	blx	r3
 8003fb8:	e02c      	b.n	8004014 <HAL_DMA_IRQHandler+0x2a0>
 8003fba:	bf00      	nop
 8003fbc:	20000014 	.word	0x20000014
 8003fc0:	1b4e81b5 	.word	0x1b4e81b5
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	d023      	beq.n	8004014 <HAL_DMA_IRQHandler+0x2a0>
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003fd0:	6878      	ldr	r0, [r7, #4]
 8003fd2:	4798      	blx	r3
 8003fd4:	e01e      	b.n	8004014 <HAL_DMA_IRQHandler+0x2a0>
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d10f      	bne.n	8004004 <HAL_DMA_IRQHandler+0x290>
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	681a      	ldr	r2, [r3, #0]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	f022 0210 	bic.w	r2, r2, #16
 8003ff2:	601a      	str	r2, [r3, #0]
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	2201      	movs	r2, #1
 8003ff8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	2200      	movs	r2, #0
 8004000:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004008:	2b00      	cmp	r3, #0
 800400a:	d003      	beq.n	8004014 <HAL_DMA_IRQHandler+0x2a0>
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004010:	6878      	ldr	r0, [r7, #4]
 8004012:	4798      	blx	r3
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004018:	2b00      	cmp	r3, #0
 800401a:	d032      	beq.n	8004082 <HAL_DMA_IRQHandler+0x30e>
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004020:	f003 0301 	and.w	r3, r3, #1
 8004024:	2b00      	cmp	r3, #0
 8004026:	d022      	beq.n	800406e <HAL_DMA_IRQHandler+0x2fa>
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	2205      	movs	r2, #5
 800402c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	681a      	ldr	r2, [r3, #0]
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	f022 0201 	bic.w	r2, r2, #1
 800403e:	601a      	str	r2, [r3, #0]
 8004040:	68bb      	ldr	r3, [r7, #8]
 8004042:	3301      	adds	r3, #1
 8004044:	60bb      	str	r3, [r7, #8]
 8004046:	697a      	ldr	r2, [r7, #20]
 8004048:	429a      	cmp	r2, r3
 800404a:	d307      	bcc.n	800405c <HAL_DMA_IRQHandler+0x2e8>
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	f003 0301 	and.w	r3, r3, #1
 8004056:	2b00      	cmp	r3, #0
 8004058:	d1f2      	bne.n	8004040 <HAL_DMA_IRQHandler+0x2cc>
 800405a:	e000      	b.n	800405e <HAL_DMA_IRQHandler+0x2ea>
 800405c:	bf00      	nop
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	2201      	movs	r2, #1
 8004062:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	2200      	movs	r2, #0
 800406a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004072:	2b00      	cmp	r3, #0
 8004074:	d005      	beq.n	8004082 <HAL_DMA_IRQHandler+0x30e>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800407a:	6878      	ldr	r0, [r7, #4]
 800407c:	4798      	blx	r3
 800407e:	e000      	b.n	8004082 <HAL_DMA_IRQHandler+0x30e>
 8004080:	bf00      	nop
 8004082:	3718      	adds	r7, #24
 8004084:	46bd      	mov	sp, r7
 8004086:	bd80      	pop	{r7, pc}

08004088 <DMA_SetConfig>:
 8004088:	b480      	push	{r7}
 800408a:	b085      	sub	sp, #20
 800408c:	af00      	add	r7, sp, #0
 800408e:	60f8      	str	r0, [r7, #12]
 8004090:	60b9      	str	r1, [r7, #8]
 8004092:	607a      	str	r2, [r7, #4]
 8004094:	603b      	str	r3, [r7, #0]
 8004096:	68fb      	ldr	r3, [r7, #12]
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	681a      	ldr	r2, [r3, #0]
 800409c:	68fb      	ldr	r3, [r7, #12]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80040a4:	601a      	str	r2, [r3, #0]
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	683a      	ldr	r2, [r7, #0]
 80040ac:	605a      	str	r2, [r3, #4]
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	689b      	ldr	r3, [r3, #8]
 80040b2:	2b40      	cmp	r3, #64	@ 0x40
 80040b4:	d108      	bne.n	80040c8 <DMA_SetConfig+0x40>
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	687a      	ldr	r2, [r7, #4]
 80040bc:	609a      	str	r2, [r3, #8]
 80040be:	68fb      	ldr	r3, [r7, #12]
 80040c0:	681b      	ldr	r3, [r3, #0]
 80040c2:	68ba      	ldr	r2, [r7, #8]
 80040c4:	60da      	str	r2, [r3, #12]
 80040c6:	e007      	b.n	80040d8 <DMA_SetConfig+0x50>
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	68ba      	ldr	r2, [r7, #8]
 80040ce:	609a      	str	r2, [r3, #8]
 80040d0:	68fb      	ldr	r3, [r7, #12]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	687a      	ldr	r2, [r7, #4]
 80040d6:	60da      	str	r2, [r3, #12]
 80040d8:	bf00      	nop
 80040da:	3714      	adds	r7, #20
 80040dc:	46bd      	mov	sp, r7
 80040de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040e2:	4770      	bx	lr

080040e4 <DMA_CalcBaseAndBitshift>:
 80040e4:	b480      	push	{r7}
 80040e6:	b085      	sub	sp, #20
 80040e8:	af00      	add	r7, sp, #0
 80040ea:	6078      	str	r0, [r7, #4]
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	b2db      	uxtb	r3, r3
 80040f2:	3b10      	subs	r3, #16
 80040f4:	4a14      	ldr	r2, [pc, #80]	@ (8004148 <DMA_CalcBaseAndBitshift+0x64>)
 80040f6:	fba2 2303 	umull	r2, r3, r2, r3
 80040fa:	091b      	lsrs	r3, r3, #4
 80040fc:	60fb      	str	r3, [r7, #12]
 80040fe:	4a13      	ldr	r2, [pc, #76]	@ (800414c <DMA_CalcBaseAndBitshift+0x68>)
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	4413      	add	r3, r2
 8004104:	781b      	ldrb	r3, [r3, #0]
 8004106:	461a      	mov	r2, r3
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800410c:	68fb      	ldr	r3, [r7, #12]
 800410e:	2b03      	cmp	r3, #3
 8004110:	d909      	bls.n	8004126 <DMA_CalcBaseAndBitshift+0x42>
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	681b      	ldr	r3, [r3, #0]
 8004116:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800411a:	f023 0303 	bic.w	r3, r3, #3
 800411e:	1d1a      	adds	r2, r3, #4
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	659a      	str	r2, [r3, #88]	@ 0x58
 8004124:	e007      	b.n	8004136 <DMA_CalcBaseAndBitshift+0x52>
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800412e:	f023 0303 	bic.w	r3, r3, #3
 8004132:	687a      	ldr	r2, [r7, #4]
 8004134:	6593      	str	r3, [r2, #88]	@ 0x58
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800413a:	4618      	mov	r0, r3
 800413c:	3714      	adds	r7, #20
 800413e:	46bd      	mov	sp, r7
 8004140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004144:	4770      	bx	lr
 8004146:	bf00      	nop
 8004148:	aaaaaaab 	.word	0xaaaaaaab
 800414c:	0800d64c 	.word	0x0800d64c

08004150 <DMA_CheckFifoParam>:
 8004150:	b480      	push	{r7}
 8004152:	b085      	sub	sp, #20
 8004154:	af00      	add	r7, sp, #0
 8004156:	6078      	str	r0, [r7, #4]
 8004158:	2300      	movs	r3, #0
 800415a:	73fb      	strb	r3, [r7, #15]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004160:	60bb      	str	r3, [r7, #8]
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	699b      	ldr	r3, [r3, #24]
 8004166:	2b00      	cmp	r3, #0
 8004168:	d11f      	bne.n	80041aa <DMA_CheckFifoParam+0x5a>
 800416a:	68bb      	ldr	r3, [r7, #8]
 800416c:	2b03      	cmp	r3, #3
 800416e:	d856      	bhi.n	800421e <DMA_CheckFifoParam+0xce>
 8004170:	a201      	add	r2, pc, #4	@ (adr r2, 8004178 <DMA_CheckFifoParam+0x28>)
 8004172:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004176:	bf00      	nop
 8004178:	08004189 	.word	0x08004189
 800417c:	0800419b 	.word	0x0800419b
 8004180:	08004189 	.word	0x08004189
 8004184:	0800421f 	.word	0x0800421f
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800418c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004190:	2b00      	cmp	r3, #0
 8004192:	d046      	beq.n	8004222 <DMA_CheckFifoParam+0xd2>
 8004194:	2301      	movs	r3, #1
 8004196:	73fb      	strb	r3, [r7, #15]
 8004198:	e043      	b.n	8004222 <DMA_CheckFifoParam+0xd2>
 800419a:	687b      	ldr	r3, [r7, #4]
 800419c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800419e:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80041a2:	d140      	bne.n	8004226 <DMA_CheckFifoParam+0xd6>
 80041a4:	2301      	movs	r3, #1
 80041a6:	73fb      	strb	r3, [r7, #15]
 80041a8:	e03d      	b.n	8004226 <DMA_CheckFifoParam+0xd6>
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	699b      	ldr	r3, [r3, #24]
 80041ae:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80041b2:	d121      	bne.n	80041f8 <DMA_CheckFifoParam+0xa8>
 80041b4:	68bb      	ldr	r3, [r7, #8]
 80041b6:	2b03      	cmp	r3, #3
 80041b8:	d837      	bhi.n	800422a <DMA_CheckFifoParam+0xda>
 80041ba:	a201      	add	r2, pc, #4	@ (adr r2, 80041c0 <DMA_CheckFifoParam+0x70>)
 80041bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80041c0:	080041d1 	.word	0x080041d1
 80041c4:	080041d7 	.word	0x080041d7
 80041c8:	080041d1 	.word	0x080041d1
 80041cc:	080041e9 	.word	0x080041e9
 80041d0:	2301      	movs	r3, #1
 80041d2:	73fb      	strb	r3, [r7, #15]
 80041d4:	e030      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80041da:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80041de:	2b00      	cmp	r3, #0
 80041e0:	d025      	beq.n	800422e <DMA_CheckFifoParam+0xde>
 80041e2:	2301      	movs	r3, #1
 80041e4:	73fb      	strb	r3, [r7, #15]
 80041e6:	e022      	b.n	800422e <DMA_CheckFifoParam+0xde>
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80041ec:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80041f0:	d11f      	bne.n	8004232 <DMA_CheckFifoParam+0xe2>
 80041f2:	2301      	movs	r3, #1
 80041f4:	73fb      	strb	r3, [r7, #15]
 80041f6:	e01c      	b.n	8004232 <DMA_CheckFifoParam+0xe2>
 80041f8:	68bb      	ldr	r3, [r7, #8]
 80041fa:	2b02      	cmp	r3, #2
 80041fc:	d903      	bls.n	8004206 <DMA_CheckFifoParam+0xb6>
 80041fe:	68bb      	ldr	r3, [r7, #8]
 8004200:	2b03      	cmp	r3, #3
 8004202:	d003      	beq.n	800420c <DMA_CheckFifoParam+0xbc>
 8004204:	e018      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 8004206:	2301      	movs	r3, #1
 8004208:	73fb      	strb	r3, [r7, #15]
 800420a:	e015      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004210:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004214:	2b00      	cmp	r3, #0
 8004216:	d00e      	beq.n	8004236 <DMA_CheckFifoParam+0xe6>
 8004218:	2301      	movs	r3, #1
 800421a:	73fb      	strb	r3, [r7, #15]
 800421c:	e00b      	b.n	8004236 <DMA_CheckFifoParam+0xe6>
 800421e:	bf00      	nop
 8004220:	e00a      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 8004222:	bf00      	nop
 8004224:	e008      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 8004226:	bf00      	nop
 8004228:	e006      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 800422a:	bf00      	nop
 800422c:	e004      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 800422e:	bf00      	nop
 8004230:	e002      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 8004232:	bf00      	nop
 8004234:	e000      	b.n	8004238 <DMA_CheckFifoParam+0xe8>
 8004236:	bf00      	nop
 8004238:	7bfb      	ldrb	r3, [r7, #15]
 800423a:	4618      	mov	r0, r3
 800423c:	3714      	adds	r7, #20
 800423e:	46bd      	mov	sp, r7
 8004240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004244:	4770      	bx	lr
 8004246:	bf00      	nop

08004248 <HAL_GPIO_Init>:
 8004248:	b480      	push	{r7}
 800424a:	b089      	sub	sp, #36	@ 0x24
 800424c:	af00      	add	r7, sp, #0
 800424e:	6078      	str	r0, [r7, #4]
 8004250:	6039      	str	r1, [r7, #0]
 8004252:	2300      	movs	r3, #0
 8004254:	617b      	str	r3, [r7, #20]
 8004256:	2300      	movs	r3, #0
 8004258:	613b      	str	r3, [r7, #16]
 800425a:	2300      	movs	r3, #0
 800425c:	61bb      	str	r3, [r7, #24]
 800425e:	2300      	movs	r3, #0
 8004260:	61fb      	str	r3, [r7, #28]
 8004262:	e16b      	b.n	800453c <HAL_GPIO_Init+0x2f4>
 8004264:	2201      	movs	r2, #1
 8004266:	69fb      	ldr	r3, [r7, #28]
 8004268:	fa02 f303 	lsl.w	r3, r2, r3
 800426c:	617b      	str	r3, [r7, #20]
 800426e:	683b      	ldr	r3, [r7, #0]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	697a      	ldr	r2, [r7, #20]
 8004274:	4013      	ands	r3, r2
 8004276:	613b      	str	r3, [r7, #16]
 8004278:	693a      	ldr	r2, [r7, #16]
 800427a:	697b      	ldr	r3, [r7, #20]
 800427c:	429a      	cmp	r2, r3
 800427e:	f040 815a 	bne.w	8004536 <HAL_GPIO_Init+0x2ee>
 8004282:	683b      	ldr	r3, [r7, #0]
 8004284:	685b      	ldr	r3, [r3, #4]
 8004286:	f003 0303 	and.w	r3, r3, #3
 800428a:	2b01      	cmp	r3, #1
 800428c:	d005      	beq.n	800429a <HAL_GPIO_Init+0x52>
 800428e:	683b      	ldr	r3, [r7, #0]
 8004290:	685b      	ldr	r3, [r3, #4]
 8004292:	f003 0303 	and.w	r3, r3, #3
 8004296:	2b02      	cmp	r3, #2
 8004298:	d130      	bne.n	80042fc <HAL_GPIO_Init+0xb4>
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	689b      	ldr	r3, [r3, #8]
 800429e:	61bb      	str	r3, [r7, #24]
 80042a0:	69fb      	ldr	r3, [r7, #28]
 80042a2:	005b      	lsls	r3, r3, #1
 80042a4:	2203      	movs	r2, #3
 80042a6:	fa02 f303 	lsl.w	r3, r2, r3
 80042aa:	43db      	mvns	r3, r3
 80042ac:	69ba      	ldr	r2, [r7, #24]
 80042ae:	4013      	ands	r3, r2
 80042b0:	61bb      	str	r3, [r7, #24]
 80042b2:	683b      	ldr	r3, [r7, #0]
 80042b4:	68da      	ldr	r2, [r3, #12]
 80042b6:	69fb      	ldr	r3, [r7, #28]
 80042b8:	005b      	lsls	r3, r3, #1
 80042ba:	fa02 f303 	lsl.w	r3, r2, r3
 80042be:	69ba      	ldr	r2, [r7, #24]
 80042c0:	4313      	orrs	r3, r2
 80042c2:	61bb      	str	r3, [r7, #24]
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	69ba      	ldr	r2, [r7, #24]
 80042c8:	609a      	str	r2, [r3, #8]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	685b      	ldr	r3, [r3, #4]
 80042ce:	61bb      	str	r3, [r7, #24]
 80042d0:	2201      	movs	r2, #1
 80042d2:	69fb      	ldr	r3, [r7, #28]
 80042d4:	fa02 f303 	lsl.w	r3, r2, r3
 80042d8:	43db      	mvns	r3, r3
 80042da:	69ba      	ldr	r2, [r7, #24]
 80042dc:	4013      	ands	r3, r2
 80042de:	61bb      	str	r3, [r7, #24]
 80042e0:	683b      	ldr	r3, [r7, #0]
 80042e2:	685b      	ldr	r3, [r3, #4]
 80042e4:	091b      	lsrs	r3, r3, #4
 80042e6:	f003 0201 	and.w	r2, r3, #1
 80042ea:	69fb      	ldr	r3, [r7, #28]
 80042ec:	fa02 f303 	lsl.w	r3, r2, r3
 80042f0:	69ba      	ldr	r2, [r7, #24]
 80042f2:	4313      	orrs	r3, r2
 80042f4:	61bb      	str	r3, [r7, #24]
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	69ba      	ldr	r2, [r7, #24]
 80042fa:	605a      	str	r2, [r3, #4]
 80042fc:	683b      	ldr	r3, [r7, #0]
 80042fe:	685b      	ldr	r3, [r3, #4]
 8004300:	f003 0303 	and.w	r3, r3, #3
 8004304:	2b03      	cmp	r3, #3
 8004306:	d017      	beq.n	8004338 <HAL_GPIO_Init+0xf0>
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	68db      	ldr	r3, [r3, #12]
 800430c:	61bb      	str	r3, [r7, #24]
 800430e:	69fb      	ldr	r3, [r7, #28]
 8004310:	005b      	lsls	r3, r3, #1
 8004312:	2203      	movs	r2, #3
 8004314:	fa02 f303 	lsl.w	r3, r2, r3
 8004318:	43db      	mvns	r3, r3
 800431a:	69ba      	ldr	r2, [r7, #24]
 800431c:	4013      	ands	r3, r2
 800431e:	61bb      	str	r3, [r7, #24]
 8004320:	683b      	ldr	r3, [r7, #0]
 8004322:	689a      	ldr	r2, [r3, #8]
 8004324:	69fb      	ldr	r3, [r7, #28]
 8004326:	005b      	lsls	r3, r3, #1
 8004328:	fa02 f303 	lsl.w	r3, r2, r3
 800432c:	69ba      	ldr	r2, [r7, #24]
 800432e:	4313      	orrs	r3, r2
 8004330:	61bb      	str	r3, [r7, #24]
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	69ba      	ldr	r2, [r7, #24]
 8004336:	60da      	str	r2, [r3, #12]
 8004338:	683b      	ldr	r3, [r7, #0]
 800433a:	685b      	ldr	r3, [r3, #4]
 800433c:	f003 0303 	and.w	r3, r3, #3
 8004340:	2b02      	cmp	r3, #2
 8004342:	d123      	bne.n	800438c <HAL_GPIO_Init+0x144>
 8004344:	69fb      	ldr	r3, [r7, #28]
 8004346:	08da      	lsrs	r2, r3, #3
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	3208      	adds	r2, #8
 800434c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004350:	61bb      	str	r3, [r7, #24]
 8004352:	69fb      	ldr	r3, [r7, #28]
 8004354:	f003 0307 	and.w	r3, r3, #7
 8004358:	009b      	lsls	r3, r3, #2
 800435a:	220f      	movs	r2, #15
 800435c:	fa02 f303 	lsl.w	r3, r2, r3
 8004360:	43db      	mvns	r3, r3
 8004362:	69ba      	ldr	r2, [r7, #24]
 8004364:	4013      	ands	r3, r2
 8004366:	61bb      	str	r3, [r7, #24]
 8004368:	683b      	ldr	r3, [r7, #0]
 800436a:	691a      	ldr	r2, [r3, #16]
 800436c:	69fb      	ldr	r3, [r7, #28]
 800436e:	f003 0307 	and.w	r3, r3, #7
 8004372:	009b      	lsls	r3, r3, #2
 8004374:	fa02 f303 	lsl.w	r3, r2, r3
 8004378:	69ba      	ldr	r2, [r7, #24]
 800437a:	4313      	orrs	r3, r2
 800437c:	61bb      	str	r3, [r7, #24]
 800437e:	69fb      	ldr	r3, [r7, #28]
 8004380:	08da      	lsrs	r2, r3, #3
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	3208      	adds	r2, #8
 8004386:	69b9      	ldr	r1, [r7, #24]
 8004388:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	61bb      	str	r3, [r7, #24]
 8004392:	69fb      	ldr	r3, [r7, #28]
 8004394:	005b      	lsls	r3, r3, #1
 8004396:	2203      	movs	r2, #3
 8004398:	fa02 f303 	lsl.w	r3, r2, r3
 800439c:	43db      	mvns	r3, r3
 800439e:	69ba      	ldr	r2, [r7, #24]
 80043a0:	4013      	ands	r3, r2
 80043a2:	61bb      	str	r3, [r7, #24]
 80043a4:	683b      	ldr	r3, [r7, #0]
 80043a6:	685b      	ldr	r3, [r3, #4]
 80043a8:	f003 0203 	and.w	r2, r3, #3
 80043ac:	69fb      	ldr	r3, [r7, #28]
 80043ae:	005b      	lsls	r3, r3, #1
 80043b0:	fa02 f303 	lsl.w	r3, r2, r3
 80043b4:	69ba      	ldr	r2, [r7, #24]
 80043b6:	4313      	orrs	r3, r2
 80043b8:	61bb      	str	r3, [r7, #24]
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	69ba      	ldr	r2, [r7, #24]
 80043be:	601a      	str	r2, [r3, #0]
 80043c0:	683b      	ldr	r3, [r7, #0]
 80043c2:	685b      	ldr	r3, [r3, #4]
 80043c4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	f000 80b4 	beq.w	8004536 <HAL_GPIO_Init+0x2ee>
 80043ce:	2300      	movs	r3, #0
 80043d0:	60fb      	str	r3, [r7, #12]
 80043d2:	4b60      	ldr	r3, [pc, #384]	@ (8004554 <HAL_GPIO_Init+0x30c>)
 80043d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80043d6:	4a5f      	ldr	r2, [pc, #380]	@ (8004554 <HAL_GPIO_Init+0x30c>)
 80043d8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80043dc:	6453      	str	r3, [r2, #68]	@ 0x44
 80043de:	4b5d      	ldr	r3, [pc, #372]	@ (8004554 <HAL_GPIO_Init+0x30c>)
 80043e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80043e2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80043e6:	60fb      	str	r3, [r7, #12]
 80043e8:	68fb      	ldr	r3, [r7, #12]
 80043ea:	4a5b      	ldr	r2, [pc, #364]	@ (8004558 <HAL_GPIO_Init+0x310>)
 80043ec:	69fb      	ldr	r3, [r7, #28]
 80043ee:	089b      	lsrs	r3, r3, #2
 80043f0:	3302      	adds	r3, #2
 80043f2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80043f6:	61bb      	str	r3, [r7, #24]
 80043f8:	69fb      	ldr	r3, [r7, #28]
 80043fa:	f003 0303 	and.w	r3, r3, #3
 80043fe:	009b      	lsls	r3, r3, #2
 8004400:	220f      	movs	r2, #15
 8004402:	fa02 f303 	lsl.w	r3, r2, r3
 8004406:	43db      	mvns	r3, r3
 8004408:	69ba      	ldr	r2, [r7, #24]
 800440a:	4013      	ands	r3, r2
 800440c:	61bb      	str	r3, [r7, #24]
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	4a52      	ldr	r2, [pc, #328]	@ (800455c <HAL_GPIO_Init+0x314>)
 8004412:	4293      	cmp	r3, r2
 8004414:	d02b      	beq.n	800446e <HAL_GPIO_Init+0x226>
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	4a51      	ldr	r2, [pc, #324]	@ (8004560 <HAL_GPIO_Init+0x318>)
 800441a:	4293      	cmp	r3, r2
 800441c:	d025      	beq.n	800446a <HAL_GPIO_Init+0x222>
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	4a50      	ldr	r2, [pc, #320]	@ (8004564 <HAL_GPIO_Init+0x31c>)
 8004422:	4293      	cmp	r3, r2
 8004424:	d01f      	beq.n	8004466 <HAL_GPIO_Init+0x21e>
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	4a4f      	ldr	r2, [pc, #316]	@ (8004568 <HAL_GPIO_Init+0x320>)
 800442a:	4293      	cmp	r3, r2
 800442c:	d019      	beq.n	8004462 <HAL_GPIO_Init+0x21a>
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	4a4e      	ldr	r2, [pc, #312]	@ (800456c <HAL_GPIO_Init+0x324>)
 8004432:	4293      	cmp	r3, r2
 8004434:	d013      	beq.n	800445e <HAL_GPIO_Init+0x216>
 8004436:	687b      	ldr	r3, [r7, #4]
 8004438:	4a4d      	ldr	r2, [pc, #308]	@ (8004570 <HAL_GPIO_Init+0x328>)
 800443a:	4293      	cmp	r3, r2
 800443c:	d00d      	beq.n	800445a <HAL_GPIO_Init+0x212>
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	4a4c      	ldr	r2, [pc, #304]	@ (8004574 <HAL_GPIO_Init+0x32c>)
 8004442:	4293      	cmp	r3, r2
 8004444:	d007      	beq.n	8004456 <HAL_GPIO_Init+0x20e>
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	4a4b      	ldr	r2, [pc, #300]	@ (8004578 <HAL_GPIO_Init+0x330>)
 800444a:	4293      	cmp	r3, r2
 800444c:	d101      	bne.n	8004452 <HAL_GPIO_Init+0x20a>
 800444e:	2307      	movs	r3, #7
 8004450:	e00e      	b.n	8004470 <HAL_GPIO_Init+0x228>
 8004452:	2308      	movs	r3, #8
 8004454:	e00c      	b.n	8004470 <HAL_GPIO_Init+0x228>
 8004456:	2306      	movs	r3, #6
 8004458:	e00a      	b.n	8004470 <HAL_GPIO_Init+0x228>
 800445a:	2305      	movs	r3, #5
 800445c:	e008      	b.n	8004470 <HAL_GPIO_Init+0x228>
 800445e:	2304      	movs	r3, #4
 8004460:	e006      	b.n	8004470 <HAL_GPIO_Init+0x228>
 8004462:	2303      	movs	r3, #3
 8004464:	e004      	b.n	8004470 <HAL_GPIO_Init+0x228>
 8004466:	2302      	movs	r3, #2
 8004468:	e002      	b.n	8004470 <HAL_GPIO_Init+0x228>
 800446a:	2301      	movs	r3, #1
 800446c:	e000      	b.n	8004470 <HAL_GPIO_Init+0x228>
 800446e:	2300      	movs	r3, #0
 8004470:	69fa      	ldr	r2, [r7, #28]
 8004472:	f002 0203 	and.w	r2, r2, #3
 8004476:	0092      	lsls	r2, r2, #2
 8004478:	4093      	lsls	r3, r2
 800447a:	69ba      	ldr	r2, [r7, #24]
 800447c:	4313      	orrs	r3, r2
 800447e:	61bb      	str	r3, [r7, #24]
 8004480:	4935      	ldr	r1, [pc, #212]	@ (8004558 <HAL_GPIO_Init+0x310>)
 8004482:	69fb      	ldr	r3, [r7, #28]
 8004484:	089b      	lsrs	r3, r3, #2
 8004486:	3302      	adds	r3, #2
 8004488:	69ba      	ldr	r2, [r7, #24]
 800448a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800448e:	4b3b      	ldr	r3, [pc, #236]	@ (800457c <HAL_GPIO_Init+0x334>)
 8004490:	689b      	ldr	r3, [r3, #8]
 8004492:	61bb      	str	r3, [r7, #24]
 8004494:	693b      	ldr	r3, [r7, #16]
 8004496:	43db      	mvns	r3, r3
 8004498:	69ba      	ldr	r2, [r7, #24]
 800449a:	4013      	ands	r3, r2
 800449c:	61bb      	str	r3, [r7, #24]
 800449e:	683b      	ldr	r3, [r7, #0]
 80044a0:	685b      	ldr	r3, [r3, #4]
 80044a2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d003      	beq.n	80044b2 <HAL_GPIO_Init+0x26a>
 80044aa:	69ba      	ldr	r2, [r7, #24]
 80044ac:	693b      	ldr	r3, [r7, #16]
 80044ae:	4313      	orrs	r3, r2
 80044b0:	61bb      	str	r3, [r7, #24]
 80044b2:	4a32      	ldr	r2, [pc, #200]	@ (800457c <HAL_GPIO_Init+0x334>)
 80044b4:	69bb      	ldr	r3, [r7, #24]
 80044b6:	6093      	str	r3, [r2, #8]
 80044b8:	4b30      	ldr	r3, [pc, #192]	@ (800457c <HAL_GPIO_Init+0x334>)
 80044ba:	68db      	ldr	r3, [r3, #12]
 80044bc:	61bb      	str	r3, [r7, #24]
 80044be:	693b      	ldr	r3, [r7, #16]
 80044c0:	43db      	mvns	r3, r3
 80044c2:	69ba      	ldr	r2, [r7, #24]
 80044c4:	4013      	ands	r3, r2
 80044c6:	61bb      	str	r3, [r7, #24]
 80044c8:	683b      	ldr	r3, [r7, #0]
 80044ca:	685b      	ldr	r3, [r3, #4]
 80044cc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	d003      	beq.n	80044dc <HAL_GPIO_Init+0x294>
 80044d4:	69ba      	ldr	r2, [r7, #24]
 80044d6:	693b      	ldr	r3, [r7, #16]
 80044d8:	4313      	orrs	r3, r2
 80044da:	61bb      	str	r3, [r7, #24]
 80044dc:	4a27      	ldr	r2, [pc, #156]	@ (800457c <HAL_GPIO_Init+0x334>)
 80044de:	69bb      	ldr	r3, [r7, #24]
 80044e0:	60d3      	str	r3, [r2, #12]
 80044e2:	4b26      	ldr	r3, [pc, #152]	@ (800457c <HAL_GPIO_Init+0x334>)
 80044e4:	685b      	ldr	r3, [r3, #4]
 80044e6:	61bb      	str	r3, [r7, #24]
 80044e8:	693b      	ldr	r3, [r7, #16]
 80044ea:	43db      	mvns	r3, r3
 80044ec:	69ba      	ldr	r2, [r7, #24]
 80044ee:	4013      	ands	r3, r2
 80044f0:	61bb      	str	r3, [r7, #24]
 80044f2:	683b      	ldr	r3, [r7, #0]
 80044f4:	685b      	ldr	r3, [r3, #4]
 80044f6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d003      	beq.n	8004506 <HAL_GPIO_Init+0x2be>
 80044fe:	69ba      	ldr	r2, [r7, #24]
 8004500:	693b      	ldr	r3, [r7, #16]
 8004502:	4313      	orrs	r3, r2
 8004504:	61bb      	str	r3, [r7, #24]
 8004506:	4a1d      	ldr	r2, [pc, #116]	@ (800457c <HAL_GPIO_Init+0x334>)
 8004508:	69bb      	ldr	r3, [r7, #24]
 800450a:	6053      	str	r3, [r2, #4]
 800450c:	4b1b      	ldr	r3, [pc, #108]	@ (800457c <HAL_GPIO_Init+0x334>)
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	61bb      	str	r3, [r7, #24]
 8004512:	693b      	ldr	r3, [r7, #16]
 8004514:	43db      	mvns	r3, r3
 8004516:	69ba      	ldr	r2, [r7, #24]
 8004518:	4013      	ands	r3, r2
 800451a:	61bb      	str	r3, [r7, #24]
 800451c:	683b      	ldr	r3, [r7, #0]
 800451e:	685b      	ldr	r3, [r3, #4]
 8004520:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004524:	2b00      	cmp	r3, #0
 8004526:	d003      	beq.n	8004530 <HAL_GPIO_Init+0x2e8>
 8004528:	69ba      	ldr	r2, [r7, #24]
 800452a:	693b      	ldr	r3, [r7, #16]
 800452c:	4313      	orrs	r3, r2
 800452e:	61bb      	str	r3, [r7, #24]
 8004530:	4a12      	ldr	r2, [pc, #72]	@ (800457c <HAL_GPIO_Init+0x334>)
 8004532:	69bb      	ldr	r3, [r7, #24]
 8004534:	6013      	str	r3, [r2, #0]
 8004536:	69fb      	ldr	r3, [r7, #28]
 8004538:	3301      	adds	r3, #1
 800453a:	61fb      	str	r3, [r7, #28]
 800453c:	69fb      	ldr	r3, [r7, #28]
 800453e:	2b0f      	cmp	r3, #15
 8004540:	f67f ae90 	bls.w	8004264 <HAL_GPIO_Init+0x1c>
 8004544:	bf00      	nop
 8004546:	bf00      	nop
 8004548:	3724      	adds	r7, #36	@ 0x24
 800454a:	46bd      	mov	sp, r7
 800454c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004550:	4770      	bx	lr
 8004552:	bf00      	nop
 8004554:	40023800 	.word	0x40023800
 8004558:	40013800 	.word	0x40013800
 800455c:	40020000 	.word	0x40020000
 8004560:	40020400 	.word	0x40020400
 8004564:	40020800 	.word	0x40020800
 8004568:	40020c00 	.word	0x40020c00
 800456c:	40021000 	.word	0x40021000
 8004570:	40021400 	.word	0x40021400
 8004574:	40021800 	.word	0x40021800
 8004578:	40021c00 	.word	0x40021c00
 800457c:	40013c00 	.word	0x40013c00

08004580 <HAL_GPIO_WritePin>:
 8004580:	b480      	push	{r7}
 8004582:	b083      	sub	sp, #12
 8004584:	af00      	add	r7, sp, #0
 8004586:	6078      	str	r0, [r7, #4]
 8004588:	460b      	mov	r3, r1
 800458a:	807b      	strh	r3, [r7, #2]
 800458c:	4613      	mov	r3, r2
 800458e:	707b      	strb	r3, [r7, #1]
 8004590:	787b      	ldrb	r3, [r7, #1]
 8004592:	2b00      	cmp	r3, #0
 8004594:	d003      	beq.n	800459e <HAL_GPIO_WritePin+0x1e>
 8004596:	887a      	ldrh	r2, [r7, #2]
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	619a      	str	r2, [r3, #24]
 800459c:	e003      	b.n	80045a6 <HAL_GPIO_WritePin+0x26>
 800459e:	887b      	ldrh	r3, [r7, #2]
 80045a0:	041a      	lsls	r2, r3, #16
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	619a      	str	r2, [r3, #24]
 80045a6:	bf00      	nop
 80045a8:	370c      	adds	r7, #12
 80045aa:	46bd      	mov	sp, r7
 80045ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045b0:	4770      	bx	lr
	...

080045b4 <HAL_I2C_Init>:
 80045b4:	b580      	push	{r7, lr}
 80045b6:	b084      	sub	sp, #16
 80045b8:	af00      	add	r7, sp, #0
 80045ba:	6078      	str	r0, [r7, #4]
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d101      	bne.n	80045c6 <HAL_I2C_Init+0x12>
 80045c2:	2301      	movs	r3, #1
 80045c4:	e12b      	b.n	800481e <HAL_I2C_Init+0x26a>
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80045cc:	b2db      	uxtb	r3, r3
 80045ce:	2b00      	cmp	r3, #0
 80045d0:	d106      	bne.n	80045e0 <HAL_I2C_Init+0x2c>
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	2200      	movs	r2, #0
 80045d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80045da:	6878      	ldr	r0, [r7, #4]
 80045dc:	f7fd f974 	bl	80018c8 <HAL_I2C_MspInit>
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	2224      	movs	r2, #36	@ 0x24
 80045e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	681a      	ldr	r2, [r3, #0]
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	f022 0201 	bic.w	r2, r2, #1
 80045f6:	601a      	str	r2, [r3, #0]
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	681a      	ldr	r2, [r3, #0]
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	681a      	ldr	r2, [r3, #0]
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004616:	601a      	str	r2, [r3, #0]
 8004618:	f000 fd80 	bl	800511c <HAL_RCC_GetPCLK1Freq>
 800461c:	60f8      	str	r0, [r7, #12]
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	685b      	ldr	r3, [r3, #4]
 8004622:	4a81      	ldr	r2, [pc, #516]	@ (8004828 <HAL_I2C_Init+0x274>)
 8004624:	4293      	cmp	r3, r2
 8004626:	d807      	bhi.n	8004638 <HAL_I2C_Init+0x84>
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	4a80      	ldr	r2, [pc, #512]	@ (800482c <HAL_I2C_Init+0x278>)
 800462c:	4293      	cmp	r3, r2
 800462e:	bf94      	ite	ls
 8004630:	2301      	movls	r3, #1
 8004632:	2300      	movhi	r3, #0
 8004634:	b2db      	uxtb	r3, r3
 8004636:	e006      	b.n	8004646 <HAL_I2C_Init+0x92>
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	4a7d      	ldr	r2, [pc, #500]	@ (8004830 <HAL_I2C_Init+0x27c>)
 800463c:	4293      	cmp	r3, r2
 800463e:	bf94      	ite	ls
 8004640:	2301      	movls	r3, #1
 8004642:	2300      	movhi	r3, #0
 8004644:	b2db      	uxtb	r3, r3
 8004646:	2b00      	cmp	r3, #0
 8004648:	d001      	beq.n	800464e <HAL_I2C_Init+0x9a>
 800464a:	2301      	movs	r3, #1
 800464c:	e0e7      	b.n	800481e <HAL_I2C_Init+0x26a>
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	4a78      	ldr	r2, [pc, #480]	@ (8004834 <HAL_I2C_Init+0x280>)
 8004652:	fba2 2303 	umull	r2, r3, r2, r3
 8004656:	0c9b      	lsrs	r3, r3, #18
 8004658:	60bb      	str	r3, [r7, #8]
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	685b      	ldr	r3, [r3, #4]
 8004660:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	68ba      	ldr	r2, [r7, #8]
 800466a:	430a      	orrs	r2, r1
 800466c:	605a      	str	r2, [r3, #4]
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	6a1b      	ldr	r3, [r3, #32]
 8004674:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	685b      	ldr	r3, [r3, #4]
 800467c:	4a6a      	ldr	r2, [pc, #424]	@ (8004828 <HAL_I2C_Init+0x274>)
 800467e:	4293      	cmp	r3, r2
 8004680:	d802      	bhi.n	8004688 <HAL_I2C_Init+0xd4>
 8004682:	68bb      	ldr	r3, [r7, #8]
 8004684:	3301      	adds	r3, #1
 8004686:	e009      	b.n	800469c <HAL_I2C_Init+0xe8>
 8004688:	68bb      	ldr	r3, [r7, #8]
 800468a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800468e:	fb02 f303 	mul.w	r3, r2, r3
 8004692:	4a69      	ldr	r2, [pc, #420]	@ (8004838 <HAL_I2C_Init+0x284>)
 8004694:	fba2 2303 	umull	r2, r3, r2, r3
 8004698:	099b      	lsrs	r3, r3, #6
 800469a:	3301      	adds	r3, #1
 800469c:	687a      	ldr	r2, [r7, #4]
 800469e:	6812      	ldr	r2, [r2, #0]
 80046a0:	430b      	orrs	r3, r1
 80046a2:	6213      	str	r3, [r2, #32]
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	681b      	ldr	r3, [r3, #0]
 80046a8:	69db      	ldr	r3, [r3, #28]
 80046aa:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80046ae:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	685b      	ldr	r3, [r3, #4]
 80046b6:	495c      	ldr	r1, [pc, #368]	@ (8004828 <HAL_I2C_Init+0x274>)
 80046b8:	428b      	cmp	r3, r1
 80046ba:	d819      	bhi.n	80046f0 <HAL_I2C_Init+0x13c>
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	1e59      	subs	r1, r3, #1
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	685b      	ldr	r3, [r3, #4]
 80046c4:	005b      	lsls	r3, r3, #1
 80046c6:	fbb1 f3f3 	udiv	r3, r1, r3
 80046ca:	1c59      	adds	r1, r3, #1
 80046cc:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80046d0:	400b      	ands	r3, r1
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d00a      	beq.n	80046ec <HAL_I2C_Init+0x138>
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	1e59      	subs	r1, r3, #1
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	685b      	ldr	r3, [r3, #4]
 80046de:	005b      	lsls	r3, r3, #1
 80046e0:	fbb1 f3f3 	udiv	r3, r1, r3
 80046e4:	3301      	adds	r3, #1
 80046e6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80046ea:	e051      	b.n	8004790 <HAL_I2C_Init+0x1dc>
 80046ec:	2304      	movs	r3, #4
 80046ee:	e04f      	b.n	8004790 <HAL_I2C_Init+0x1dc>
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	689b      	ldr	r3, [r3, #8]
 80046f4:	2b00      	cmp	r3, #0
 80046f6:	d111      	bne.n	800471c <HAL_I2C_Init+0x168>
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	1e58      	subs	r0, r3, #1
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	6859      	ldr	r1, [r3, #4]
 8004700:	460b      	mov	r3, r1
 8004702:	005b      	lsls	r3, r3, #1
 8004704:	440b      	add	r3, r1
 8004706:	fbb0 f3f3 	udiv	r3, r0, r3
 800470a:	3301      	adds	r3, #1
 800470c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004710:	2b00      	cmp	r3, #0
 8004712:	bf0c      	ite	eq
 8004714:	2301      	moveq	r3, #1
 8004716:	2300      	movne	r3, #0
 8004718:	b2db      	uxtb	r3, r3
 800471a:	e012      	b.n	8004742 <HAL_I2C_Init+0x18e>
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	1e58      	subs	r0, r3, #1
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	6859      	ldr	r1, [r3, #4]
 8004724:	460b      	mov	r3, r1
 8004726:	009b      	lsls	r3, r3, #2
 8004728:	440b      	add	r3, r1
 800472a:	0099      	lsls	r1, r3, #2
 800472c:	440b      	add	r3, r1
 800472e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004732:	3301      	adds	r3, #1
 8004734:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004738:	2b00      	cmp	r3, #0
 800473a:	bf0c      	ite	eq
 800473c:	2301      	moveq	r3, #1
 800473e:	2300      	movne	r3, #0
 8004740:	b2db      	uxtb	r3, r3
 8004742:	2b00      	cmp	r3, #0
 8004744:	d001      	beq.n	800474a <HAL_I2C_Init+0x196>
 8004746:	2301      	movs	r3, #1
 8004748:	e022      	b.n	8004790 <HAL_I2C_Init+0x1dc>
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	689b      	ldr	r3, [r3, #8]
 800474e:	2b00      	cmp	r3, #0
 8004750:	d10e      	bne.n	8004770 <HAL_I2C_Init+0x1bc>
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	1e58      	subs	r0, r3, #1
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	6859      	ldr	r1, [r3, #4]
 800475a:	460b      	mov	r3, r1
 800475c:	005b      	lsls	r3, r3, #1
 800475e:	440b      	add	r3, r1
 8004760:	fbb0 f3f3 	udiv	r3, r0, r3
 8004764:	3301      	adds	r3, #1
 8004766:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800476a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800476e:	e00f      	b.n	8004790 <HAL_I2C_Init+0x1dc>
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	1e58      	subs	r0, r3, #1
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	6859      	ldr	r1, [r3, #4]
 8004778:	460b      	mov	r3, r1
 800477a:	009b      	lsls	r3, r3, #2
 800477c:	440b      	add	r3, r1
 800477e:	0099      	lsls	r1, r3, #2
 8004780:	440b      	add	r3, r1
 8004782:	fbb0 f3f3 	udiv	r3, r0, r3
 8004786:	3301      	adds	r3, #1
 8004788:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800478c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004790:	6879      	ldr	r1, [r7, #4]
 8004792:	6809      	ldr	r1, [r1, #0]
 8004794:	4313      	orrs	r3, r2
 8004796:	61cb      	str	r3, [r1, #28]
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	69da      	ldr	r2, [r3, #28]
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	6a1b      	ldr	r3, [r3, #32]
 80047aa:	431a      	orrs	r2, r3
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	430a      	orrs	r2, r1
 80047b2:	601a      	str	r2, [r3, #0]
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	689b      	ldr	r3, [r3, #8]
 80047ba:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80047be:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80047c2:	687a      	ldr	r2, [r7, #4]
 80047c4:	6911      	ldr	r1, [r2, #16]
 80047c6:	687a      	ldr	r2, [r7, #4]
 80047c8:	68d2      	ldr	r2, [r2, #12]
 80047ca:	4311      	orrs	r1, r2
 80047cc:	687a      	ldr	r2, [r7, #4]
 80047ce:	6812      	ldr	r2, [r2, #0]
 80047d0:	430b      	orrs	r3, r1
 80047d2:	6093      	str	r3, [r2, #8]
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	68db      	ldr	r3, [r3, #12]
 80047da:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	695a      	ldr	r2, [r3, #20]
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	699b      	ldr	r3, [r3, #24]
 80047e6:	431a      	orrs	r2, r3
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	430a      	orrs	r2, r1
 80047ee:	60da      	str	r2, [r3, #12]
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	681a      	ldr	r2, [r3, #0]
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	f042 0201 	orr.w	r2, r2, #1
 80047fe:	601a      	str	r2, [r3, #0]
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	2200      	movs	r2, #0
 8004804:	641a      	str	r2, [r3, #64]	@ 0x40
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	2220      	movs	r2, #32
 800480a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	2200      	movs	r2, #0
 8004812:	631a      	str	r2, [r3, #48]	@ 0x30
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	2200      	movs	r2, #0
 8004818:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800481c:	2300      	movs	r3, #0
 800481e:	4618      	mov	r0, r3
 8004820:	3710      	adds	r7, #16
 8004822:	46bd      	mov	sp, r7
 8004824:	bd80      	pop	{r7, pc}
 8004826:	bf00      	nop
 8004828:	000186a0 	.word	0x000186a0
 800482c:	001e847f 	.word	0x001e847f
 8004830:	003d08ff 	.word	0x003d08ff
 8004834:	431bde83 	.word	0x431bde83
 8004838:	10624dd3 	.word	0x10624dd3

0800483c <HAL_RCC_OscConfig>:
 800483c:	b580      	push	{r7, lr}
 800483e:	b086      	sub	sp, #24
 8004840:	af00      	add	r7, sp, #0
 8004842:	6078      	str	r0, [r7, #4]
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	2b00      	cmp	r3, #0
 8004848:	d101      	bne.n	800484e <HAL_RCC_OscConfig+0x12>
 800484a:	2301      	movs	r3, #1
 800484c:	e267      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	f003 0301 	and.w	r3, r3, #1
 8004856:	2b00      	cmp	r3, #0
 8004858:	d075      	beq.n	8004946 <HAL_RCC_OscConfig+0x10a>
 800485a:	4b88      	ldr	r3, [pc, #544]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 800485c:	689b      	ldr	r3, [r3, #8]
 800485e:	f003 030c 	and.w	r3, r3, #12
 8004862:	2b04      	cmp	r3, #4
 8004864:	d00c      	beq.n	8004880 <HAL_RCC_OscConfig+0x44>
 8004866:	4b85      	ldr	r3, [pc, #532]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004868:	689b      	ldr	r3, [r3, #8]
 800486a:	f003 030c 	and.w	r3, r3, #12
 800486e:	2b08      	cmp	r3, #8
 8004870:	d112      	bne.n	8004898 <HAL_RCC_OscConfig+0x5c>
 8004872:	4b82      	ldr	r3, [pc, #520]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004874:	685b      	ldr	r3, [r3, #4]
 8004876:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800487a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800487e:	d10b      	bne.n	8004898 <HAL_RCC_OscConfig+0x5c>
 8004880:	4b7e      	ldr	r3, [pc, #504]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004888:	2b00      	cmp	r3, #0
 800488a:	d05b      	beq.n	8004944 <HAL_RCC_OscConfig+0x108>
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	685b      	ldr	r3, [r3, #4]
 8004890:	2b00      	cmp	r3, #0
 8004892:	d157      	bne.n	8004944 <HAL_RCC_OscConfig+0x108>
 8004894:	2301      	movs	r3, #1
 8004896:	e242      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	685b      	ldr	r3, [r3, #4]
 800489c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80048a0:	d106      	bne.n	80048b0 <HAL_RCC_OscConfig+0x74>
 80048a2:	4b76      	ldr	r3, [pc, #472]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	4a75      	ldr	r2, [pc, #468]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048a8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80048ac:	6013      	str	r3, [r2, #0]
 80048ae:	e01d      	b.n	80048ec <HAL_RCC_OscConfig+0xb0>
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	685b      	ldr	r3, [r3, #4]
 80048b4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80048b8:	d10c      	bne.n	80048d4 <HAL_RCC_OscConfig+0x98>
 80048ba:	4b70      	ldr	r3, [pc, #448]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	4a6f      	ldr	r2, [pc, #444]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048c0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80048c4:	6013      	str	r3, [r2, #0]
 80048c6:	4b6d      	ldr	r3, [pc, #436]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	4a6c      	ldr	r2, [pc, #432]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048cc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80048d0:	6013      	str	r3, [r2, #0]
 80048d2:	e00b      	b.n	80048ec <HAL_RCC_OscConfig+0xb0>
 80048d4:	4b69      	ldr	r3, [pc, #420]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	4a68      	ldr	r2, [pc, #416]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048da:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80048de:	6013      	str	r3, [r2, #0]
 80048e0:	4b66      	ldr	r3, [pc, #408]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	4a65      	ldr	r2, [pc, #404]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80048e6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80048ea:	6013      	str	r3, [r2, #0]
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	685b      	ldr	r3, [r3, #4]
 80048f0:	2b00      	cmp	r3, #0
 80048f2:	d013      	beq.n	800491c <HAL_RCC_OscConfig+0xe0>
 80048f4:	f7fe fb52 	bl	8002f9c <HAL_GetTick>
 80048f8:	6138      	str	r0, [r7, #16]
 80048fa:	e008      	b.n	800490e <HAL_RCC_OscConfig+0xd2>
 80048fc:	f7fe fb4e 	bl	8002f9c <HAL_GetTick>
 8004900:	4602      	mov	r2, r0
 8004902:	693b      	ldr	r3, [r7, #16]
 8004904:	1ad3      	subs	r3, r2, r3
 8004906:	2b64      	cmp	r3, #100	@ 0x64
 8004908:	d901      	bls.n	800490e <HAL_RCC_OscConfig+0xd2>
 800490a:	2303      	movs	r3, #3
 800490c:	e207      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 800490e:	4b5b      	ldr	r3, [pc, #364]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004916:	2b00      	cmp	r3, #0
 8004918:	d0f0      	beq.n	80048fc <HAL_RCC_OscConfig+0xc0>
 800491a:	e014      	b.n	8004946 <HAL_RCC_OscConfig+0x10a>
 800491c:	f7fe fb3e 	bl	8002f9c <HAL_GetTick>
 8004920:	6138      	str	r0, [r7, #16]
 8004922:	e008      	b.n	8004936 <HAL_RCC_OscConfig+0xfa>
 8004924:	f7fe fb3a 	bl	8002f9c <HAL_GetTick>
 8004928:	4602      	mov	r2, r0
 800492a:	693b      	ldr	r3, [r7, #16]
 800492c:	1ad3      	subs	r3, r2, r3
 800492e:	2b64      	cmp	r3, #100	@ 0x64
 8004930:	d901      	bls.n	8004936 <HAL_RCC_OscConfig+0xfa>
 8004932:	2303      	movs	r3, #3
 8004934:	e1f3      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004936:	4b51      	ldr	r3, [pc, #324]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800493e:	2b00      	cmp	r3, #0
 8004940:	d1f0      	bne.n	8004924 <HAL_RCC_OscConfig+0xe8>
 8004942:	e000      	b.n	8004946 <HAL_RCC_OscConfig+0x10a>
 8004944:	bf00      	nop
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	f003 0302 	and.w	r3, r3, #2
 800494e:	2b00      	cmp	r3, #0
 8004950:	d063      	beq.n	8004a1a <HAL_RCC_OscConfig+0x1de>
 8004952:	4b4a      	ldr	r3, [pc, #296]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004954:	689b      	ldr	r3, [r3, #8]
 8004956:	f003 030c 	and.w	r3, r3, #12
 800495a:	2b00      	cmp	r3, #0
 800495c:	d00b      	beq.n	8004976 <HAL_RCC_OscConfig+0x13a>
 800495e:	4b47      	ldr	r3, [pc, #284]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004960:	689b      	ldr	r3, [r3, #8]
 8004962:	f003 030c 	and.w	r3, r3, #12
 8004966:	2b08      	cmp	r3, #8
 8004968:	d11c      	bne.n	80049a4 <HAL_RCC_OscConfig+0x168>
 800496a:	4b44      	ldr	r3, [pc, #272]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 800496c:	685b      	ldr	r3, [r3, #4]
 800496e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004972:	2b00      	cmp	r3, #0
 8004974:	d116      	bne.n	80049a4 <HAL_RCC_OscConfig+0x168>
 8004976:	4b41      	ldr	r3, [pc, #260]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	f003 0302 	and.w	r3, r3, #2
 800497e:	2b00      	cmp	r3, #0
 8004980:	d005      	beq.n	800498e <HAL_RCC_OscConfig+0x152>
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	68db      	ldr	r3, [r3, #12]
 8004986:	2b01      	cmp	r3, #1
 8004988:	d001      	beq.n	800498e <HAL_RCC_OscConfig+0x152>
 800498a:	2301      	movs	r3, #1
 800498c:	e1c7      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 800498e:	4b3b      	ldr	r3, [pc, #236]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	691b      	ldr	r3, [r3, #16]
 800499a:	00db      	lsls	r3, r3, #3
 800499c:	4937      	ldr	r1, [pc, #220]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 800499e:	4313      	orrs	r3, r2
 80049a0:	600b      	str	r3, [r1, #0]
 80049a2:	e03a      	b.n	8004a1a <HAL_RCC_OscConfig+0x1de>
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	68db      	ldr	r3, [r3, #12]
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d020      	beq.n	80049ee <HAL_RCC_OscConfig+0x1b2>
 80049ac:	4b34      	ldr	r3, [pc, #208]	@ (8004a80 <HAL_RCC_OscConfig+0x244>)
 80049ae:	2201      	movs	r2, #1
 80049b0:	601a      	str	r2, [r3, #0]
 80049b2:	f7fe faf3 	bl	8002f9c <HAL_GetTick>
 80049b6:	6138      	str	r0, [r7, #16]
 80049b8:	e008      	b.n	80049cc <HAL_RCC_OscConfig+0x190>
 80049ba:	f7fe faef 	bl	8002f9c <HAL_GetTick>
 80049be:	4602      	mov	r2, r0
 80049c0:	693b      	ldr	r3, [r7, #16]
 80049c2:	1ad3      	subs	r3, r2, r3
 80049c4:	2b02      	cmp	r3, #2
 80049c6:	d901      	bls.n	80049cc <HAL_RCC_OscConfig+0x190>
 80049c8:	2303      	movs	r3, #3
 80049ca:	e1a8      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 80049cc:	4b2b      	ldr	r3, [pc, #172]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	f003 0302 	and.w	r3, r3, #2
 80049d4:	2b00      	cmp	r3, #0
 80049d6:	d0f0      	beq.n	80049ba <HAL_RCC_OscConfig+0x17e>
 80049d8:	4b28      	ldr	r3, [pc, #160]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	691b      	ldr	r3, [r3, #16]
 80049e4:	00db      	lsls	r3, r3, #3
 80049e6:	4925      	ldr	r1, [pc, #148]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 80049e8:	4313      	orrs	r3, r2
 80049ea:	600b      	str	r3, [r1, #0]
 80049ec:	e015      	b.n	8004a1a <HAL_RCC_OscConfig+0x1de>
 80049ee:	4b24      	ldr	r3, [pc, #144]	@ (8004a80 <HAL_RCC_OscConfig+0x244>)
 80049f0:	2200      	movs	r2, #0
 80049f2:	601a      	str	r2, [r3, #0]
 80049f4:	f7fe fad2 	bl	8002f9c <HAL_GetTick>
 80049f8:	6138      	str	r0, [r7, #16]
 80049fa:	e008      	b.n	8004a0e <HAL_RCC_OscConfig+0x1d2>
 80049fc:	f7fe face 	bl	8002f9c <HAL_GetTick>
 8004a00:	4602      	mov	r2, r0
 8004a02:	693b      	ldr	r3, [r7, #16]
 8004a04:	1ad3      	subs	r3, r2, r3
 8004a06:	2b02      	cmp	r3, #2
 8004a08:	d901      	bls.n	8004a0e <HAL_RCC_OscConfig+0x1d2>
 8004a0a:	2303      	movs	r3, #3
 8004a0c:	e187      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004a0e:	4b1b      	ldr	r3, [pc, #108]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	f003 0302 	and.w	r3, r3, #2
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d1f0      	bne.n	80049fc <HAL_RCC_OscConfig+0x1c0>
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	f003 0308 	and.w	r3, r3, #8
 8004a22:	2b00      	cmp	r3, #0
 8004a24:	d036      	beq.n	8004a94 <HAL_RCC_OscConfig+0x258>
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	695b      	ldr	r3, [r3, #20]
 8004a2a:	2b00      	cmp	r3, #0
 8004a2c:	d016      	beq.n	8004a5c <HAL_RCC_OscConfig+0x220>
 8004a2e:	4b15      	ldr	r3, [pc, #84]	@ (8004a84 <HAL_RCC_OscConfig+0x248>)
 8004a30:	2201      	movs	r2, #1
 8004a32:	601a      	str	r2, [r3, #0]
 8004a34:	f7fe fab2 	bl	8002f9c <HAL_GetTick>
 8004a38:	6138      	str	r0, [r7, #16]
 8004a3a:	e008      	b.n	8004a4e <HAL_RCC_OscConfig+0x212>
 8004a3c:	f7fe faae 	bl	8002f9c <HAL_GetTick>
 8004a40:	4602      	mov	r2, r0
 8004a42:	693b      	ldr	r3, [r7, #16]
 8004a44:	1ad3      	subs	r3, r2, r3
 8004a46:	2b02      	cmp	r3, #2
 8004a48:	d901      	bls.n	8004a4e <HAL_RCC_OscConfig+0x212>
 8004a4a:	2303      	movs	r3, #3
 8004a4c:	e167      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004a4e:	4b0b      	ldr	r3, [pc, #44]	@ (8004a7c <HAL_RCC_OscConfig+0x240>)
 8004a50:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004a52:	f003 0302 	and.w	r3, r3, #2
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	d0f0      	beq.n	8004a3c <HAL_RCC_OscConfig+0x200>
 8004a5a:	e01b      	b.n	8004a94 <HAL_RCC_OscConfig+0x258>
 8004a5c:	4b09      	ldr	r3, [pc, #36]	@ (8004a84 <HAL_RCC_OscConfig+0x248>)
 8004a5e:	2200      	movs	r2, #0
 8004a60:	601a      	str	r2, [r3, #0]
 8004a62:	f7fe fa9b 	bl	8002f9c <HAL_GetTick>
 8004a66:	6138      	str	r0, [r7, #16]
 8004a68:	e00e      	b.n	8004a88 <HAL_RCC_OscConfig+0x24c>
 8004a6a:	f7fe fa97 	bl	8002f9c <HAL_GetTick>
 8004a6e:	4602      	mov	r2, r0
 8004a70:	693b      	ldr	r3, [r7, #16]
 8004a72:	1ad3      	subs	r3, r2, r3
 8004a74:	2b02      	cmp	r3, #2
 8004a76:	d907      	bls.n	8004a88 <HAL_RCC_OscConfig+0x24c>
 8004a78:	2303      	movs	r3, #3
 8004a7a:	e150      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004a7c:	40023800 	.word	0x40023800
 8004a80:	42470000 	.word	0x42470000
 8004a84:	42470e80 	.word	0x42470e80
 8004a88:	4b88      	ldr	r3, [pc, #544]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004a8a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004a8c:	f003 0302 	and.w	r3, r3, #2
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	d1ea      	bne.n	8004a6a <HAL_RCC_OscConfig+0x22e>
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	f003 0304 	and.w	r3, r3, #4
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	f000 8097 	beq.w	8004bd0 <HAL_RCC_OscConfig+0x394>
 8004aa2:	2300      	movs	r3, #0
 8004aa4:	75fb      	strb	r3, [r7, #23]
 8004aa6:	4b81      	ldr	r3, [pc, #516]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004aa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004aaa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	d10f      	bne.n	8004ad2 <HAL_RCC_OscConfig+0x296>
 8004ab2:	2300      	movs	r3, #0
 8004ab4:	60bb      	str	r3, [r7, #8]
 8004ab6:	4b7d      	ldr	r3, [pc, #500]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004ab8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004aba:	4a7c      	ldr	r2, [pc, #496]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004abc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004ac0:	6413      	str	r3, [r2, #64]	@ 0x40
 8004ac2:	4b7a      	ldr	r3, [pc, #488]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004ac4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ac6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004aca:	60bb      	str	r3, [r7, #8]
 8004acc:	68bb      	ldr	r3, [r7, #8]
 8004ace:	2301      	movs	r3, #1
 8004ad0:	75fb      	strb	r3, [r7, #23]
 8004ad2:	4b77      	ldr	r3, [pc, #476]	@ (8004cb0 <HAL_RCC_OscConfig+0x474>)
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	d118      	bne.n	8004b10 <HAL_RCC_OscConfig+0x2d4>
 8004ade:	4b74      	ldr	r3, [pc, #464]	@ (8004cb0 <HAL_RCC_OscConfig+0x474>)
 8004ae0:	681b      	ldr	r3, [r3, #0]
 8004ae2:	4a73      	ldr	r2, [pc, #460]	@ (8004cb0 <HAL_RCC_OscConfig+0x474>)
 8004ae4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004ae8:	6013      	str	r3, [r2, #0]
 8004aea:	f7fe fa57 	bl	8002f9c <HAL_GetTick>
 8004aee:	6138      	str	r0, [r7, #16]
 8004af0:	e008      	b.n	8004b04 <HAL_RCC_OscConfig+0x2c8>
 8004af2:	f7fe fa53 	bl	8002f9c <HAL_GetTick>
 8004af6:	4602      	mov	r2, r0
 8004af8:	693b      	ldr	r3, [r7, #16]
 8004afa:	1ad3      	subs	r3, r2, r3
 8004afc:	2b02      	cmp	r3, #2
 8004afe:	d901      	bls.n	8004b04 <HAL_RCC_OscConfig+0x2c8>
 8004b00:	2303      	movs	r3, #3
 8004b02:	e10c      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004b04:	4b6a      	ldr	r3, [pc, #424]	@ (8004cb0 <HAL_RCC_OscConfig+0x474>)
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	d0f0      	beq.n	8004af2 <HAL_RCC_OscConfig+0x2b6>
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	689b      	ldr	r3, [r3, #8]
 8004b14:	2b01      	cmp	r3, #1
 8004b16:	d106      	bne.n	8004b26 <HAL_RCC_OscConfig+0x2ea>
 8004b18:	4b64      	ldr	r3, [pc, #400]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b1a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004b1c:	4a63      	ldr	r2, [pc, #396]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b1e:	f043 0301 	orr.w	r3, r3, #1
 8004b22:	6713      	str	r3, [r2, #112]	@ 0x70
 8004b24:	e01c      	b.n	8004b60 <HAL_RCC_OscConfig+0x324>
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	689b      	ldr	r3, [r3, #8]
 8004b2a:	2b05      	cmp	r3, #5
 8004b2c:	d10c      	bne.n	8004b48 <HAL_RCC_OscConfig+0x30c>
 8004b2e:	4b5f      	ldr	r3, [pc, #380]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b30:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004b32:	4a5e      	ldr	r2, [pc, #376]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b34:	f043 0304 	orr.w	r3, r3, #4
 8004b38:	6713      	str	r3, [r2, #112]	@ 0x70
 8004b3a:	4b5c      	ldr	r3, [pc, #368]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b3c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004b3e:	4a5b      	ldr	r2, [pc, #364]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b40:	f043 0301 	orr.w	r3, r3, #1
 8004b44:	6713      	str	r3, [r2, #112]	@ 0x70
 8004b46:	e00b      	b.n	8004b60 <HAL_RCC_OscConfig+0x324>
 8004b48:	4b58      	ldr	r3, [pc, #352]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b4a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004b4c:	4a57      	ldr	r2, [pc, #348]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b4e:	f023 0301 	bic.w	r3, r3, #1
 8004b52:	6713      	str	r3, [r2, #112]	@ 0x70
 8004b54:	4b55      	ldr	r3, [pc, #340]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b56:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004b58:	4a54      	ldr	r2, [pc, #336]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b5a:	f023 0304 	bic.w	r3, r3, #4
 8004b5e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	689b      	ldr	r3, [r3, #8]
 8004b64:	2b00      	cmp	r3, #0
 8004b66:	d015      	beq.n	8004b94 <HAL_RCC_OscConfig+0x358>
 8004b68:	f7fe fa18 	bl	8002f9c <HAL_GetTick>
 8004b6c:	6138      	str	r0, [r7, #16]
 8004b6e:	e00a      	b.n	8004b86 <HAL_RCC_OscConfig+0x34a>
 8004b70:	f7fe fa14 	bl	8002f9c <HAL_GetTick>
 8004b74:	4602      	mov	r2, r0
 8004b76:	693b      	ldr	r3, [r7, #16]
 8004b78:	1ad3      	subs	r3, r2, r3
 8004b7a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004b7e:	4293      	cmp	r3, r2
 8004b80:	d901      	bls.n	8004b86 <HAL_RCC_OscConfig+0x34a>
 8004b82:	2303      	movs	r3, #3
 8004b84:	e0cb      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004b86:	4b49      	ldr	r3, [pc, #292]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004b88:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004b8a:	f003 0302 	and.w	r3, r3, #2
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	d0ee      	beq.n	8004b70 <HAL_RCC_OscConfig+0x334>
 8004b92:	e014      	b.n	8004bbe <HAL_RCC_OscConfig+0x382>
 8004b94:	f7fe fa02 	bl	8002f9c <HAL_GetTick>
 8004b98:	6138      	str	r0, [r7, #16]
 8004b9a:	e00a      	b.n	8004bb2 <HAL_RCC_OscConfig+0x376>
 8004b9c:	f7fe f9fe 	bl	8002f9c <HAL_GetTick>
 8004ba0:	4602      	mov	r2, r0
 8004ba2:	693b      	ldr	r3, [r7, #16]
 8004ba4:	1ad3      	subs	r3, r2, r3
 8004ba6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004baa:	4293      	cmp	r3, r2
 8004bac:	d901      	bls.n	8004bb2 <HAL_RCC_OscConfig+0x376>
 8004bae:	2303      	movs	r3, #3
 8004bb0:	e0b5      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004bb2:	4b3e      	ldr	r3, [pc, #248]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004bb4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004bb6:	f003 0302 	and.w	r3, r3, #2
 8004bba:	2b00      	cmp	r3, #0
 8004bbc:	d1ee      	bne.n	8004b9c <HAL_RCC_OscConfig+0x360>
 8004bbe:	7dfb      	ldrb	r3, [r7, #23]
 8004bc0:	2b01      	cmp	r3, #1
 8004bc2:	d105      	bne.n	8004bd0 <HAL_RCC_OscConfig+0x394>
 8004bc4:	4b39      	ldr	r3, [pc, #228]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004bc6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004bc8:	4a38      	ldr	r2, [pc, #224]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004bca:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004bce:	6413      	str	r3, [r2, #64]	@ 0x40
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	699b      	ldr	r3, [r3, #24]
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	f000 80a1 	beq.w	8004d1c <HAL_RCC_OscConfig+0x4e0>
 8004bda:	4b34      	ldr	r3, [pc, #208]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004bdc:	689b      	ldr	r3, [r3, #8]
 8004bde:	f003 030c 	and.w	r3, r3, #12
 8004be2:	2b08      	cmp	r3, #8
 8004be4:	d05c      	beq.n	8004ca0 <HAL_RCC_OscConfig+0x464>
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	699b      	ldr	r3, [r3, #24]
 8004bea:	2b02      	cmp	r3, #2
 8004bec:	d141      	bne.n	8004c72 <HAL_RCC_OscConfig+0x436>
 8004bee:	4b31      	ldr	r3, [pc, #196]	@ (8004cb4 <HAL_RCC_OscConfig+0x478>)
 8004bf0:	2200      	movs	r2, #0
 8004bf2:	601a      	str	r2, [r3, #0]
 8004bf4:	f7fe f9d2 	bl	8002f9c <HAL_GetTick>
 8004bf8:	6138      	str	r0, [r7, #16]
 8004bfa:	e008      	b.n	8004c0e <HAL_RCC_OscConfig+0x3d2>
 8004bfc:	f7fe f9ce 	bl	8002f9c <HAL_GetTick>
 8004c00:	4602      	mov	r2, r0
 8004c02:	693b      	ldr	r3, [r7, #16]
 8004c04:	1ad3      	subs	r3, r2, r3
 8004c06:	2b02      	cmp	r3, #2
 8004c08:	d901      	bls.n	8004c0e <HAL_RCC_OscConfig+0x3d2>
 8004c0a:	2303      	movs	r3, #3
 8004c0c:	e087      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004c0e:	4b27      	ldr	r3, [pc, #156]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004c16:	2b00      	cmp	r3, #0
 8004c18:	d1f0      	bne.n	8004bfc <HAL_RCC_OscConfig+0x3c0>
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	69da      	ldr	r2, [r3, #28]
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	6a1b      	ldr	r3, [r3, #32]
 8004c22:	431a      	orrs	r2, r3
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c28:	019b      	lsls	r3, r3, #6
 8004c2a:	431a      	orrs	r2, r3
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c30:	085b      	lsrs	r3, r3, #1
 8004c32:	3b01      	subs	r3, #1
 8004c34:	041b      	lsls	r3, r3, #16
 8004c36:	431a      	orrs	r2, r3
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004c3c:	061b      	lsls	r3, r3, #24
 8004c3e:	491b      	ldr	r1, [pc, #108]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004c40:	4313      	orrs	r3, r2
 8004c42:	604b      	str	r3, [r1, #4]
 8004c44:	4b1b      	ldr	r3, [pc, #108]	@ (8004cb4 <HAL_RCC_OscConfig+0x478>)
 8004c46:	2201      	movs	r2, #1
 8004c48:	601a      	str	r2, [r3, #0]
 8004c4a:	f7fe f9a7 	bl	8002f9c <HAL_GetTick>
 8004c4e:	6138      	str	r0, [r7, #16]
 8004c50:	e008      	b.n	8004c64 <HAL_RCC_OscConfig+0x428>
 8004c52:	f7fe f9a3 	bl	8002f9c <HAL_GetTick>
 8004c56:	4602      	mov	r2, r0
 8004c58:	693b      	ldr	r3, [r7, #16]
 8004c5a:	1ad3      	subs	r3, r2, r3
 8004c5c:	2b02      	cmp	r3, #2
 8004c5e:	d901      	bls.n	8004c64 <HAL_RCC_OscConfig+0x428>
 8004c60:	2303      	movs	r3, #3
 8004c62:	e05c      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004c64:	4b11      	ldr	r3, [pc, #68]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004c6c:	2b00      	cmp	r3, #0
 8004c6e:	d0f0      	beq.n	8004c52 <HAL_RCC_OscConfig+0x416>
 8004c70:	e054      	b.n	8004d1c <HAL_RCC_OscConfig+0x4e0>
 8004c72:	4b10      	ldr	r3, [pc, #64]	@ (8004cb4 <HAL_RCC_OscConfig+0x478>)
 8004c74:	2200      	movs	r2, #0
 8004c76:	601a      	str	r2, [r3, #0]
 8004c78:	f7fe f990 	bl	8002f9c <HAL_GetTick>
 8004c7c:	6138      	str	r0, [r7, #16]
 8004c7e:	e008      	b.n	8004c92 <HAL_RCC_OscConfig+0x456>
 8004c80:	f7fe f98c 	bl	8002f9c <HAL_GetTick>
 8004c84:	4602      	mov	r2, r0
 8004c86:	693b      	ldr	r3, [r7, #16]
 8004c88:	1ad3      	subs	r3, r2, r3
 8004c8a:	2b02      	cmp	r3, #2
 8004c8c:	d901      	bls.n	8004c92 <HAL_RCC_OscConfig+0x456>
 8004c8e:	2303      	movs	r3, #3
 8004c90:	e045      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004c92:	4b06      	ldr	r3, [pc, #24]	@ (8004cac <HAL_RCC_OscConfig+0x470>)
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d1f0      	bne.n	8004c80 <HAL_RCC_OscConfig+0x444>
 8004c9e:	e03d      	b.n	8004d1c <HAL_RCC_OscConfig+0x4e0>
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	699b      	ldr	r3, [r3, #24]
 8004ca4:	2b01      	cmp	r3, #1
 8004ca6:	d107      	bne.n	8004cb8 <HAL_RCC_OscConfig+0x47c>
 8004ca8:	2301      	movs	r3, #1
 8004caa:	e038      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004cac:	40023800 	.word	0x40023800
 8004cb0:	40007000 	.word	0x40007000
 8004cb4:	42470060 	.word	0x42470060
 8004cb8:	4b1b      	ldr	r3, [pc, #108]	@ (8004d28 <HAL_RCC_OscConfig+0x4ec>)
 8004cba:	685b      	ldr	r3, [r3, #4]
 8004cbc:	60fb      	str	r3, [r7, #12]
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	699b      	ldr	r3, [r3, #24]
 8004cc2:	2b01      	cmp	r3, #1
 8004cc4:	d028      	beq.n	8004d18 <HAL_RCC_OscConfig+0x4dc>
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	69db      	ldr	r3, [r3, #28]
 8004cd0:	429a      	cmp	r2, r3
 8004cd2:	d121      	bne.n	8004d18 <HAL_RCC_OscConfig+0x4dc>
 8004cd4:	68fb      	ldr	r3, [r7, #12]
 8004cd6:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004cda:	687b      	ldr	r3, [r7, #4]
 8004cdc:	6a1b      	ldr	r3, [r3, #32]
 8004cde:	429a      	cmp	r2, r3
 8004ce0:	d11a      	bne.n	8004d18 <HAL_RCC_OscConfig+0x4dc>
 8004ce2:	68fa      	ldr	r2, [r7, #12]
 8004ce4:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004ce8:	4013      	ands	r3, r2
 8004cea:	687a      	ldr	r2, [r7, #4]
 8004cec:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004cee:	0192      	lsls	r2, r2, #6
 8004cf0:	4293      	cmp	r3, r2
 8004cf2:	d111      	bne.n	8004d18 <HAL_RCC_OscConfig+0x4dc>
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004cfe:	085b      	lsrs	r3, r3, #1
 8004d00:	3b01      	subs	r3, #1
 8004d02:	041b      	lsls	r3, r3, #16
 8004d04:	429a      	cmp	r2, r3
 8004d06:	d107      	bne.n	8004d18 <HAL_RCC_OscConfig+0x4dc>
 8004d08:	68fb      	ldr	r3, [r7, #12]
 8004d0a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004d12:	061b      	lsls	r3, r3, #24
 8004d14:	429a      	cmp	r2, r3
 8004d16:	d001      	beq.n	8004d1c <HAL_RCC_OscConfig+0x4e0>
 8004d18:	2301      	movs	r3, #1
 8004d1a:	e000      	b.n	8004d1e <HAL_RCC_OscConfig+0x4e2>
 8004d1c:	2300      	movs	r3, #0
 8004d1e:	4618      	mov	r0, r3
 8004d20:	3718      	adds	r7, #24
 8004d22:	46bd      	mov	sp, r7
 8004d24:	bd80      	pop	{r7, pc}
 8004d26:	bf00      	nop
 8004d28:	40023800 	.word	0x40023800

08004d2c <HAL_RCC_ClockConfig>:
 8004d2c:	b580      	push	{r7, lr}
 8004d2e:	b084      	sub	sp, #16
 8004d30:	af00      	add	r7, sp, #0
 8004d32:	6078      	str	r0, [r7, #4]
 8004d34:	6039      	str	r1, [r7, #0]
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	2b00      	cmp	r3, #0
 8004d3a:	d101      	bne.n	8004d40 <HAL_RCC_ClockConfig+0x14>
 8004d3c:	2301      	movs	r3, #1
 8004d3e:	e0cc      	b.n	8004eda <HAL_RCC_ClockConfig+0x1ae>
 8004d40:	4b68      	ldr	r3, [pc, #416]	@ (8004ee4 <HAL_RCC_ClockConfig+0x1b8>)
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	f003 0307 	and.w	r3, r3, #7
 8004d48:	683a      	ldr	r2, [r7, #0]
 8004d4a:	429a      	cmp	r2, r3
 8004d4c:	d90c      	bls.n	8004d68 <HAL_RCC_ClockConfig+0x3c>
 8004d4e:	4b65      	ldr	r3, [pc, #404]	@ (8004ee4 <HAL_RCC_ClockConfig+0x1b8>)
 8004d50:	683a      	ldr	r2, [r7, #0]
 8004d52:	b2d2      	uxtb	r2, r2
 8004d54:	701a      	strb	r2, [r3, #0]
 8004d56:	4b63      	ldr	r3, [pc, #396]	@ (8004ee4 <HAL_RCC_ClockConfig+0x1b8>)
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	f003 0307 	and.w	r3, r3, #7
 8004d5e:	683a      	ldr	r2, [r7, #0]
 8004d60:	429a      	cmp	r2, r3
 8004d62:	d001      	beq.n	8004d68 <HAL_RCC_ClockConfig+0x3c>
 8004d64:	2301      	movs	r3, #1
 8004d66:	e0b8      	b.n	8004eda <HAL_RCC_ClockConfig+0x1ae>
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f003 0302 	and.w	r3, r3, #2
 8004d70:	2b00      	cmp	r3, #0
 8004d72:	d020      	beq.n	8004db6 <HAL_RCC_ClockConfig+0x8a>
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	f003 0304 	and.w	r3, r3, #4
 8004d7c:	2b00      	cmp	r3, #0
 8004d7e:	d005      	beq.n	8004d8c <HAL_RCC_ClockConfig+0x60>
 8004d80:	4b59      	ldr	r3, [pc, #356]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004d82:	689b      	ldr	r3, [r3, #8]
 8004d84:	4a58      	ldr	r2, [pc, #352]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004d86:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004d8a:	6093      	str	r3, [r2, #8]
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	f003 0308 	and.w	r3, r3, #8
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	d005      	beq.n	8004da4 <HAL_RCC_ClockConfig+0x78>
 8004d98:	4b53      	ldr	r3, [pc, #332]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004d9a:	689b      	ldr	r3, [r3, #8]
 8004d9c:	4a52      	ldr	r2, [pc, #328]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004d9e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8004da2:	6093      	str	r3, [r2, #8]
 8004da4:	4b50      	ldr	r3, [pc, #320]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004da6:	689b      	ldr	r3, [r3, #8]
 8004da8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	689b      	ldr	r3, [r3, #8]
 8004db0:	494d      	ldr	r1, [pc, #308]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004db2:	4313      	orrs	r3, r2
 8004db4:	608b      	str	r3, [r1, #8]
 8004db6:	687b      	ldr	r3, [r7, #4]
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	f003 0301 	and.w	r3, r3, #1
 8004dbe:	2b00      	cmp	r3, #0
 8004dc0:	d044      	beq.n	8004e4c <HAL_RCC_ClockConfig+0x120>
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	685b      	ldr	r3, [r3, #4]
 8004dc6:	2b01      	cmp	r3, #1
 8004dc8:	d107      	bne.n	8004dda <HAL_RCC_ClockConfig+0xae>
 8004dca:	4b47      	ldr	r3, [pc, #284]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	d119      	bne.n	8004e0a <HAL_RCC_ClockConfig+0xde>
 8004dd6:	2301      	movs	r3, #1
 8004dd8:	e07f      	b.n	8004eda <HAL_RCC_ClockConfig+0x1ae>
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	685b      	ldr	r3, [r3, #4]
 8004dde:	2b02      	cmp	r3, #2
 8004de0:	d003      	beq.n	8004dea <HAL_RCC_ClockConfig+0xbe>
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	685b      	ldr	r3, [r3, #4]
 8004de6:	2b03      	cmp	r3, #3
 8004de8:	d107      	bne.n	8004dfa <HAL_RCC_ClockConfig+0xce>
 8004dea:	4b3f      	ldr	r3, [pc, #252]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004dec:	681b      	ldr	r3, [r3, #0]
 8004dee:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d109      	bne.n	8004e0a <HAL_RCC_ClockConfig+0xde>
 8004df6:	2301      	movs	r3, #1
 8004df8:	e06f      	b.n	8004eda <HAL_RCC_ClockConfig+0x1ae>
 8004dfa:	4b3b      	ldr	r3, [pc, #236]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	f003 0302 	and.w	r3, r3, #2
 8004e02:	2b00      	cmp	r3, #0
 8004e04:	d101      	bne.n	8004e0a <HAL_RCC_ClockConfig+0xde>
 8004e06:	2301      	movs	r3, #1
 8004e08:	e067      	b.n	8004eda <HAL_RCC_ClockConfig+0x1ae>
 8004e0a:	4b37      	ldr	r3, [pc, #220]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004e0c:	689b      	ldr	r3, [r3, #8]
 8004e0e:	f023 0203 	bic.w	r2, r3, #3
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	685b      	ldr	r3, [r3, #4]
 8004e16:	4934      	ldr	r1, [pc, #208]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004e18:	4313      	orrs	r3, r2
 8004e1a:	608b      	str	r3, [r1, #8]
 8004e1c:	f7fe f8be 	bl	8002f9c <HAL_GetTick>
 8004e20:	60f8      	str	r0, [r7, #12]
 8004e22:	e00a      	b.n	8004e3a <HAL_RCC_ClockConfig+0x10e>
 8004e24:	f7fe f8ba 	bl	8002f9c <HAL_GetTick>
 8004e28:	4602      	mov	r2, r0
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	1ad3      	subs	r3, r2, r3
 8004e2e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004e32:	4293      	cmp	r3, r2
 8004e34:	d901      	bls.n	8004e3a <HAL_RCC_ClockConfig+0x10e>
 8004e36:	2303      	movs	r3, #3
 8004e38:	e04f      	b.n	8004eda <HAL_RCC_ClockConfig+0x1ae>
 8004e3a:	4b2b      	ldr	r3, [pc, #172]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004e3c:	689b      	ldr	r3, [r3, #8]
 8004e3e:	f003 020c 	and.w	r2, r3, #12
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	685b      	ldr	r3, [r3, #4]
 8004e46:	009b      	lsls	r3, r3, #2
 8004e48:	429a      	cmp	r2, r3
 8004e4a:	d1eb      	bne.n	8004e24 <HAL_RCC_ClockConfig+0xf8>
 8004e4c:	4b25      	ldr	r3, [pc, #148]	@ (8004ee4 <HAL_RCC_ClockConfig+0x1b8>)
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	f003 0307 	and.w	r3, r3, #7
 8004e54:	683a      	ldr	r2, [r7, #0]
 8004e56:	429a      	cmp	r2, r3
 8004e58:	d20c      	bcs.n	8004e74 <HAL_RCC_ClockConfig+0x148>
 8004e5a:	4b22      	ldr	r3, [pc, #136]	@ (8004ee4 <HAL_RCC_ClockConfig+0x1b8>)
 8004e5c:	683a      	ldr	r2, [r7, #0]
 8004e5e:	b2d2      	uxtb	r2, r2
 8004e60:	701a      	strb	r2, [r3, #0]
 8004e62:	4b20      	ldr	r3, [pc, #128]	@ (8004ee4 <HAL_RCC_ClockConfig+0x1b8>)
 8004e64:	681b      	ldr	r3, [r3, #0]
 8004e66:	f003 0307 	and.w	r3, r3, #7
 8004e6a:	683a      	ldr	r2, [r7, #0]
 8004e6c:	429a      	cmp	r2, r3
 8004e6e:	d001      	beq.n	8004e74 <HAL_RCC_ClockConfig+0x148>
 8004e70:	2301      	movs	r3, #1
 8004e72:	e032      	b.n	8004eda <HAL_RCC_ClockConfig+0x1ae>
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	f003 0304 	and.w	r3, r3, #4
 8004e7c:	2b00      	cmp	r3, #0
 8004e7e:	d008      	beq.n	8004e92 <HAL_RCC_ClockConfig+0x166>
 8004e80:	4b19      	ldr	r3, [pc, #100]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004e82:	689b      	ldr	r3, [r3, #8]
 8004e84:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	68db      	ldr	r3, [r3, #12]
 8004e8c:	4916      	ldr	r1, [pc, #88]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004e8e:	4313      	orrs	r3, r2
 8004e90:	608b      	str	r3, [r1, #8]
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	f003 0308 	and.w	r3, r3, #8
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	d009      	beq.n	8004eb2 <HAL_RCC_ClockConfig+0x186>
 8004e9e:	4b12      	ldr	r3, [pc, #72]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004ea0:	689b      	ldr	r3, [r3, #8]
 8004ea2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	691b      	ldr	r3, [r3, #16]
 8004eaa:	00db      	lsls	r3, r3, #3
 8004eac:	490e      	ldr	r1, [pc, #56]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004eae:	4313      	orrs	r3, r2
 8004eb0:	608b      	str	r3, [r1, #8]
 8004eb2:	f000 f821 	bl	8004ef8 <HAL_RCC_GetSysClockFreq>
 8004eb6:	4602      	mov	r2, r0
 8004eb8:	4b0b      	ldr	r3, [pc, #44]	@ (8004ee8 <HAL_RCC_ClockConfig+0x1bc>)
 8004eba:	689b      	ldr	r3, [r3, #8]
 8004ebc:	091b      	lsrs	r3, r3, #4
 8004ebe:	f003 030f 	and.w	r3, r3, #15
 8004ec2:	490a      	ldr	r1, [pc, #40]	@ (8004eec <HAL_RCC_ClockConfig+0x1c0>)
 8004ec4:	5ccb      	ldrb	r3, [r1, r3]
 8004ec6:	fa22 f303 	lsr.w	r3, r2, r3
 8004eca:	4a09      	ldr	r2, [pc, #36]	@ (8004ef0 <HAL_RCC_ClockConfig+0x1c4>)
 8004ecc:	6013      	str	r3, [r2, #0]
 8004ece:	4b09      	ldr	r3, [pc, #36]	@ (8004ef4 <HAL_RCC_ClockConfig+0x1c8>)
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	4618      	mov	r0, r3
 8004ed4:	f7fe f81e 	bl	8002f14 <HAL_InitTick>
 8004ed8:	2300      	movs	r3, #0
 8004eda:	4618      	mov	r0, r3
 8004edc:	3710      	adds	r7, #16
 8004ede:	46bd      	mov	sp, r7
 8004ee0:	bd80      	pop	{r7, pc}
 8004ee2:	bf00      	nop
 8004ee4:	40023c00 	.word	0x40023c00
 8004ee8:	40023800 	.word	0x40023800
 8004eec:	0800d634 	.word	0x0800d634
 8004ef0:	20000014 	.word	0x20000014
 8004ef4:	20000018 	.word	0x20000018

08004ef8 <HAL_RCC_GetSysClockFreq>:
 8004ef8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004efc:	b094      	sub	sp, #80	@ 0x50
 8004efe:	af00      	add	r7, sp, #0
 8004f00:	2300      	movs	r3, #0
 8004f02:	647b      	str	r3, [r7, #68]	@ 0x44
 8004f04:	2300      	movs	r3, #0
 8004f06:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004f08:	2300      	movs	r3, #0
 8004f0a:	643b      	str	r3, [r7, #64]	@ 0x40
 8004f0c:	2300      	movs	r3, #0
 8004f0e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004f10:	4b79      	ldr	r3, [pc, #484]	@ (80050f8 <HAL_RCC_GetSysClockFreq+0x200>)
 8004f12:	689b      	ldr	r3, [r3, #8]
 8004f14:	f003 030c 	and.w	r3, r3, #12
 8004f18:	2b08      	cmp	r3, #8
 8004f1a:	d00d      	beq.n	8004f38 <HAL_RCC_GetSysClockFreq+0x40>
 8004f1c:	2b08      	cmp	r3, #8
 8004f1e:	f200 80e1 	bhi.w	80050e4 <HAL_RCC_GetSysClockFreq+0x1ec>
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d002      	beq.n	8004f2c <HAL_RCC_GetSysClockFreq+0x34>
 8004f26:	2b04      	cmp	r3, #4
 8004f28:	d003      	beq.n	8004f32 <HAL_RCC_GetSysClockFreq+0x3a>
 8004f2a:	e0db      	b.n	80050e4 <HAL_RCC_GetSysClockFreq+0x1ec>
 8004f2c:	4b73      	ldr	r3, [pc, #460]	@ (80050fc <HAL_RCC_GetSysClockFreq+0x204>)
 8004f2e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004f30:	e0db      	b.n	80050ea <HAL_RCC_GetSysClockFreq+0x1f2>
 8004f32:	4b73      	ldr	r3, [pc, #460]	@ (8005100 <HAL_RCC_GetSysClockFreq+0x208>)
 8004f34:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004f36:	e0d8      	b.n	80050ea <HAL_RCC_GetSysClockFreq+0x1f2>
 8004f38:	4b6f      	ldr	r3, [pc, #444]	@ (80050f8 <HAL_RCC_GetSysClockFreq+0x200>)
 8004f3a:	685b      	ldr	r3, [r3, #4]
 8004f3c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004f40:	647b      	str	r3, [r7, #68]	@ 0x44
 8004f42:	4b6d      	ldr	r3, [pc, #436]	@ (80050f8 <HAL_RCC_GetSysClockFreq+0x200>)
 8004f44:	685b      	ldr	r3, [r3, #4]
 8004f46:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004f4a:	2b00      	cmp	r3, #0
 8004f4c:	d063      	beq.n	8005016 <HAL_RCC_GetSysClockFreq+0x11e>
 8004f4e:	4b6a      	ldr	r3, [pc, #424]	@ (80050f8 <HAL_RCC_GetSysClockFreq+0x200>)
 8004f50:	685b      	ldr	r3, [r3, #4]
 8004f52:	099b      	lsrs	r3, r3, #6
 8004f54:	2200      	movs	r2, #0
 8004f56:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004f58:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004f5a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f5c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004f60:	633b      	str	r3, [r7, #48]	@ 0x30
 8004f62:	2300      	movs	r3, #0
 8004f64:	637b      	str	r3, [r7, #52]	@ 0x34
 8004f66:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8004f6a:	4622      	mov	r2, r4
 8004f6c:	462b      	mov	r3, r5
 8004f6e:	f04f 0000 	mov.w	r0, #0
 8004f72:	f04f 0100 	mov.w	r1, #0
 8004f76:	0159      	lsls	r1, r3, #5
 8004f78:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004f7c:	0150      	lsls	r0, r2, #5
 8004f7e:	4602      	mov	r2, r0
 8004f80:	460b      	mov	r3, r1
 8004f82:	4621      	mov	r1, r4
 8004f84:	1a51      	subs	r1, r2, r1
 8004f86:	6139      	str	r1, [r7, #16]
 8004f88:	4629      	mov	r1, r5
 8004f8a:	eb63 0301 	sbc.w	r3, r3, r1
 8004f8e:	617b      	str	r3, [r7, #20]
 8004f90:	f04f 0200 	mov.w	r2, #0
 8004f94:	f04f 0300 	mov.w	r3, #0
 8004f98:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004f9c:	4659      	mov	r1, fp
 8004f9e:	018b      	lsls	r3, r1, #6
 8004fa0:	4651      	mov	r1, sl
 8004fa2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004fa6:	4651      	mov	r1, sl
 8004fa8:	018a      	lsls	r2, r1, #6
 8004faa:	4651      	mov	r1, sl
 8004fac:	ebb2 0801 	subs.w	r8, r2, r1
 8004fb0:	4659      	mov	r1, fp
 8004fb2:	eb63 0901 	sbc.w	r9, r3, r1
 8004fb6:	f04f 0200 	mov.w	r2, #0
 8004fba:	f04f 0300 	mov.w	r3, #0
 8004fbe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004fc2:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004fc6:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004fca:	4690      	mov	r8, r2
 8004fcc:	4699      	mov	r9, r3
 8004fce:	4623      	mov	r3, r4
 8004fd0:	eb18 0303 	adds.w	r3, r8, r3
 8004fd4:	60bb      	str	r3, [r7, #8]
 8004fd6:	462b      	mov	r3, r5
 8004fd8:	eb49 0303 	adc.w	r3, r9, r3
 8004fdc:	60fb      	str	r3, [r7, #12]
 8004fde:	f04f 0200 	mov.w	r2, #0
 8004fe2:	f04f 0300 	mov.w	r3, #0
 8004fe6:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8004fea:	4629      	mov	r1, r5
 8004fec:	024b      	lsls	r3, r1, #9
 8004fee:	4621      	mov	r1, r4
 8004ff0:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8004ff4:	4621      	mov	r1, r4
 8004ff6:	024a      	lsls	r2, r1, #9
 8004ff8:	4610      	mov	r0, r2
 8004ffa:	4619      	mov	r1, r3
 8004ffc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004ffe:	2200      	movs	r2, #0
 8005000:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005002:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005004:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8005008:	f7fb fe1e 	bl	8000c48 <__aeabi_uldivmod>
 800500c:	4602      	mov	r2, r0
 800500e:	460b      	mov	r3, r1
 8005010:	4613      	mov	r3, r2
 8005012:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005014:	e058      	b.n	80050c8 <HAL_RCC_GetSysClockFreq+0x1d0>
 8005016:	4b38      	ldr	r3, [pc, #224]	@ (80050f8 <HAL_RCC_GetSysClockFreq+0x200>)
 8005018:	685b      	ldr	r3, [r3, #4]
 800501a:	099b      	lsrs	r3, r3, #6
 800501c:	2200      	movs	r2, #0
 800501e:	4618      	mov	r0, r3
 8005020:	4611      	mov	r1, r2
 8005022:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005026:	623b      	str	r3, [r7, #32]
 8005028:	2300      	movs	r3, #0
 800502a:	627b      	str	r3, [r7, #36]	@ 0x24
 800502c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005030:	4642      	mov	r2, r8
 8005032:	464b      	mov	r3, r9
 8005034:	f04f 0000 	mov.w	r0, #0
 8005038:	f04f 0100 	mov.w	r1, #0
 800503c:	0159      	lsls	r1, r3, #5
 800503e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005042:	0150      	lsls	r0, r2, #5
 8005044:	4602      	mov	r2, r0
 8005046:	460b      	mov	r3, r1
 8005048:	4641      	mov	r1, r8
 800504a:	ebb2 0a01 	subs.w	sl, r2, r1
 800504e:	4649      	mov	r1, r9
 8005050:	eb63 0b01 	sbc.w	fp, r3, r1
 8005054:	f04f 0200 	mov.w	r2, #0
 8005058:	f04f 0300 	mov.w	r3, #0
 800505c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005060:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005064:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8005068:	ebb2 040a 	subs.w	r4, r2, sl
 800506c:	eb63 050b 	sbc.w	r5, r3, fp
 8005070:	f04f 0200 	mov.w	r2, #0
 8005074:	f04f 0300 	mov.w	r3, #0
 8005078:	00eb      	lsls	r3, r5, #3
 800507a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800507e:	00e2      	lsls	r2, r4, #3
 8005080:	4614      	mov	r4, r2
 8005082:	461d      	mov	r5, r3
 8005084:	4643      	mov	r3, r8
 8005086:	18e3      	adds	r3, r4, r3
 8005088:	603b      	str	r3, [r7, #0]
 800508a:	464b      	mov	r3, r9
 800508c:	eb45 0303 	adc.w	r3, r5, r3
 8005090:	607b      	str	r3, [r7, #4]
 8005092:	f04f 0200 	mov.w	r2, #0
 8005096:	f04f 0300 	mov.w	r3, #0
 800509a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800509e:	4629      	mov	r1, r5
 80050a0:	028b      	lsls	r3, r1, #10
 80050a2:	4621      	mov	r1, r4
 80050a4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80050a8:	4621      	mov	r1, r4
 80050aa:	028a      	lsls	r2, r1, #10
 80050ac:	4610      	mov	r0, r2
 80050ae:	4619      	mov	r1, r3
 80050b0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80050b2:	2200      	movs	r2, #0
 80050b4:	61bb      	str	r3, [r7, #24]
 80050b6:	61fa      	str	r2, [r7, #28]
 80050b8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80050bc:	f7fb fdc4 	bl	8000c48 <__aeabi_uldivmod>
 80050c0:	4602      	mov	r2, r0
 80050c2:	460b      	mov	r3, r1
 80050c4:	4613      	mov	r3, r2
 80050c6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80050c8:	4b0b      	ldr	r3, [pc, #44]	@ (80050f8 <HAL_RCC_GetSysClockFreq+0x200>)
 80050ca:	685b      	ldr	r3, [r3, #4]
 80050cc:	0c1b      	lsrs	r3, r3, #16
 80050ce:	f003 0303 	and.w	r3, r3, #3
 80050d2:	3301      	adds	r3, #1
 80050d4:	005b      	lsls	r3, r3, #1
 80050d6:	643b      	str	r3, [r7, #64]	@ 0x40
 80050d8:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80050da:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80050dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80050e0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80050e2:	e002      	b.n	80050ea <HAL_RCC_GetSysClockFreq+0x1f2>
 80050e4:	4b05      	ldr	r3, [pc, #20]	@ (80050fc <HAL_RCC_GetSysClockFreq+0x204>)
 80050e6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80050e8:	bf00      	nop
 80050ea:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80050ec:	4618      	mov	r0, r3
 80050ee:	3750      	adds	r7, #80	@ 0x50
 80050f0:	46bd      	mov	sp, r7
 80050f2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80050f6:	bf00      	nop
 80050f8:	40023800 	.word	0x40023800
 80050fc:	00f42400 	.word	0x00f42400
 8005100:	007a1200 	.word	0x007a1200

08005104 <HAL_RCC_GetHCLKFreq>:
 8005104:	b480      	push	{r7}
 8005106:	af00      	add	r7, sp, #0
 8005108:	4b03      	ldr	r3, [pc, #12]	@ (8005118 <HAL_RCC_GetHCLKFreq+0x14>)
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	4618      	mov	r0, r3
 800510e:	46bd      	mov	sp, r7
 8005110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005114:	4770      	bx	lr
 8005116:	bf00      	nop
 8005118:	20000014 	.word	0x20000014

0800511c <HAL_RCC_GetPCLK1Freq>:
 800511c:	b580      	push	{r7, lr}
 800511e:	af00      	add	r7, sp, #0
 8005120:	f7ff fff0 	bl	8005104 <HAL_RCC_GetHCLKFreq>
 8005124:	4602      	mov	r2, r0
 8005126:	4b05      	ldr	r3, [pc, #20]	@ (800513c <HAL_RCC_GetPCLK1Freq+0x20>)
 8005128:	689b      	ldr	r3, [r3, #8]
 800512a:	0a9b      	lsrs	r3, r3, #10
 800512c:	f003 0307 	and.w	r3, r3, #7
 8005130:	4903      	ldr	r1, [pc, #12]	@ (8005140 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005132:	5ccb      	ldrb	r3, [r1, r3]
 8005134:	fa22 f303 	lsr.w	r3, r2, r3
 8005138:	4618      	mov	r0, r3
 800513a:	bd80      	pop	{r7, pc}
 800513c:	40023800 	.word	0x40023800
 8005140:	0800d644 	.word	0x0800d644

08005144 <HAL_RCC_GetPCLK2Freq>:
 8005144:	b580      	push	{r7, lr}
 8005146:	af00      	add	r7, sp, #0
 8005148:	f7ff ffdc 	bl	8005104 <HAL_RCC_GetHCLKFreq>
 800514c:	4602      	mov	r2, r0
 800514e:	4b05      	ldr	r3, [pc, #20]	@ (8005164 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005150:	689b      	ldr	r3, [r3, #8]
 8005152:	0b5b      	lsrs	r3, r3, #13
 8005154:	f003 0307 	and.w	r3, r3, #7
 8005158:	4903      	ldr	r1, [pc, #12]	@ (8005168 <HAL_RCC_GetPCLK2Freq+0x24>)
 800515a:	5ccb      	ldrb	r3, [r1, r3]
 800515c:	fa22 f303 	lsr.w	r3, r2, r3
 8005160:	4618      	mov	r0, r3
 8005162:	bd80      	pop	{r7, pc}
 8005164:	40023800 	.word	0x40023800
 8005168:	0800d644 	.word	0x0800d644

0800516c <HAL_SPI_Init>:
 800516c:	b580      	push	{r7, lr}
 800516e:	b082      	sub	sp, #8
 8005170:	af00      	add	r7, sp, #0
 8005172:	6078      	str	r0, [r7, #4]
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	2b00      	cmp	r3, #0
 8005178:	d101      	bne.n	800517e <HAL_SPI_Init+0x12>
 800517a:	2301      	movs	r3, #1
 800517c:	e07b      	b.n	8005276 <HAL_SPI_Init+0x10a>
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005182:	2b00      	cmp	r3, #0
 8005184:	d108      	bne.n	8005198 <HAL_SPI_Init+0x2c>
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	685b      	ldr	r3, [r3, #4]
 800518a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800518e:	d009      	beq.n	80051a4 <HAL_SPI_Init+0x38>
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	2200      	movs	r2, #0
 8005194:	61da      	str	r2, [r3, #28]
 8005196:	e005      	b.n	80051a4 <HAL_SPI_Init+0x38>
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	2200      	movs	r2, #0
 800519c:	611a      	str	r2, [r3, #16]
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	2200      	movs	r2, #0
 80051a2:	615a      	str	r2, [r3, #20]
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	2200      	movs	r2, #0
 80051a8:	629a      	str	r2, [r3, #40]	@ 0x28
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80051b0:	b2db      	uxtb	r3, r3
 80051b2:	2b00      	cmp	r3, #0
 80051b4:	d106      	bne.n	80051c4 <HAL_SPI_Init+0x58>
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	2200      	movs	r2, #0
 80051ba:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80051be:	6878      	ldr	r0, [r7, #4]
 80051c0:	f7fd fb10 	bl	80027e4 <HAL_SPI_MspInit>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	2202      	movs	r2, #2
 80051c8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	681a      	ldr	r2, [r3, #0]
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80051da:	601a      	str	r2, [r3, #0]
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	685b      	ldr	r3, [r3, #4]
 80051e0:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	689b      	ldr	r3, [r3, #8]
 80051e8:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80051ec:	431a      	orrs	r2, r3
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	68db      	ldr	r3, [r3, #12]
 80051f2:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80051f6:	431a      	orrs	r2, r3
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	691b      	ldr	r3, [r3, #16]
 80051fc:	f003 0302 	and.w	r3, r3, #2
 8005200:	431a      	orrs	r2, r3
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	695b      	ldr	r3, [r3, #20]
 8005206:	f003 0301 	and.w	r3, r3, #1
 800520a:	431a      	orrs	r2, r3
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	699b      	ldr	r3, [r3, #24]
 8005210:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005214:	431a      	orrs	r2, r3
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	69db      	ldr	r3, [r3, #28]
 800521a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800521e:	431a      	orrs	r2, r3
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	6a1b      	ldr	r3, [r3, #32]
 8005224:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005228:	ea42 0103 	orr.w	r1, r2, r3
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005230:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	430a      	orrs	r2, r1
 800523a:	601a      	str	r2, [r3, #0]
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	699b      	ldr	r3, [r3, #24]
 8005240:	0c1b      	lsrs	r3, r3, #16
 8005242:	f003 0104 	and.w	r1, r3, #4
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800524a:	f003 0210 	and.w	r2, r3, #16
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	430a      	orrs	r2, r1
 8005254:	605a      	str	r2, [r3, #4]
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	69da      	ldr	r2, [r3, #28]
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005264:	61da      	str	r2, [r3, #28]
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	2200      	movs	r2, #0
 800526a:	655a      	str	r2, [r3, #84]	@ 0x54
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	2201      	movs	r2, #1
 8005270:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005274:	2300      	movs	r3, #0
 8005276:	4618      	mov	r0, r3
 8005278:	3708      	adds	r7, #8
 800527a:	46bd      	mov	sp, r7
 800527c:	bd80      	pop	{r7, pc}

0800527e <HAL_SPI_Transmit>:
 800527e:	b580      	push	{r7, lr}
 8005280:	b088      	sub	sp, #32
 8005282:	af00      	add	r7, sp, #0
 8005284:	60f8      	str	r0, [r7, #12]
 8005286:	60b9      	str	r1, [r7, #8]
 8005288:	603b      	str	r3, [r7, #0]
 800528a:	4613      	mov	r3, r2
 800528c:	80fb      	strh	r3, [r7, #6]
 800528e:	2300      	movs	r3, #0
 8005290:	77fb      	strb	r3, [r7, #31]
 8005292:	68fb      	ldr	r3, [r7, #12]
 8005294:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005298:	2b01      	cmp	r3, #1
 800529a:	d101      	bne.n	80052a0 <HAL_SPI_Transmit+0x22>
 800529c:	2302      	movs	r3, #2
 800529e:	e12d      	b.n	80054fc <HAL_SPI_Transmit+0x27e>
 80052a0:	68fb      	ldr	r3, [r7, #12]
 80052a2:	2201      	movs	r2, #1
 80052a4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80052a8:	f7fd fe78 	bl	8002f9c <HAL_GetTick>
 80052ac:	61b8      	str	r0, [r7, #24]
 80052ae:	88fb      	ldrh	r3, [r7, #6]
 80052b0:	82fb      	strh	r3, [r7, #22]
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80052b8:	b2db      	uxtb	r3, r3
 80052ba:	2b01      	cmp	r3, #1
 80052bc:	d002      	beq.n	80052c4 <HAL_SPI_Transmit+0x46>
 80052be:	2302      	movs	r3, #2
 80052c0:	77fb      	strb	r3, [r7, #31]
 80052c2:	e116      	b.n	80054f2 <HAL_SPI_Transmit+0x274>
 80052c4:	68bb      	ldr	r3, [r7, #8]
 80052c6:	2b00      	cmp	r3, #0
 80052c8:	d002      	beq.n	80052d0 <HAL_SPI_Transmit+0x52>
 80052ca:	88fb      	ldrh	r3, [r7, #6]
 80052cc:	2b00      	cmp	r3, #0
 80052ce:	d102      	bne.n	80052d6 <HAL_SPI_Transmit+0x58>
 80052d0:	2301      	movs	r3, #1
 80052d2:	77fb      	strb	r3, [r7, #31]
 80052d4:	e10d      	b.n	80054f2 <HAL_SPI_Transmit+0x274>
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	2203      	movs	r2, #3
 80052da:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80052de:	68fb      	ldr	r3, [r7, #12]
 80052e0:	2200      	movs	r2, #0
 80052e2:	655a      	str	r2, [r3, #84]	@ 0x54
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	68ba      	ldr	r2, [r7, #8]
 80052e8:	631a      	str	r2, [r3, #48]	@ 0x30
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	88fa      	ldrh	r2, [r7, #6]
 80052ee:	869a      	strh	r2, [r3, #52]	@ 0x34
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	88fa      	ldrh	r2, [r7, #6]
 80052f4:	86da      	strh	r2, [r3, #54]	@ 0x36
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	2200      	movs	r2, #0
 80052fa:	639a      	str	r2, [r3, #56]	@ 0x38
 80052fc:	68fb      	ldr	r3, [r7, #12]
 80052fe:	2200      	movs	r2, #0
 8005300:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	2200      	movs	r2, #0
 8005306:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005308:	68fb      	ldr	r3, [r7, #12]
 800530a:	2200      	movs	r2, #0
 800530c:	645a      	str	r2, [r3, #68]	@ 0x44
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	2200      	movs	r2, #0
 8005312:	641a      	str	r2, [r3, #64]	@ 0x40
 8005314:	68fb      	ldr	r3, [r7, #12]
 8005316:	689b      	ldr	r3, [r3, #8]
 8005318:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800531c:	d10f      	bne.n	800533e <HAL_SPI_Transmit+0xc0>
 800531e:	68fb      	ldr	r3, [r7, #12]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	681a      	ldr	r2, [r3, #0]
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800532c:	601a      	str	r2, [r3, #0]
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	681b      	ldr	r3, [r3, #0]
 8005332:	681a      	ldr	r2, [r3, #0]
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800533c:	601a      	str	r2, [r3, #0]
 800533e:	68fb      	ldr	r3, [r7, #12]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005348:	2b40      	cmp	r3, #64	@ 0x40
 800534a:	d007      	beq.n	800535c <HAL_SPI_Transmit+0xde>
 800534c:	68fb      	ldr	r3, [r7, #12]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	681a      	ldr	r2, [r3, #0]
 8005352:	68fb      	ldr	r3, [r7, #12]
 8005354:	681b      	ldr	r3, [r3, #0]
 8005356:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800535a:	601a      	str	r2, [r3, #0]
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	68db      	ldr	r3, [r3, #12]
 8005360:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005364:	d14f      	bne.n	8005406 <HAL_SPI_Transmit+0x188>
 8005366:	68fb      	ldr	r3, [r7, #12]
 8005368:	685b      	ldr	r3, [r3, #4]
 800536a:	2b00      	cmp	r3, #0
 800536c:	d002      	beq.n	8005374 <HAL_SPI_Transmit+0xf6>
 800536e:	8afb      	ldrh	r3, [r7, #22]
 8005370:	2b01      	cmp	r3, #1
 8005372:	d142      	bne.n	80053fa <HAL_SPI_Transmit+0x17c>
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005378:	881a      	ldrh	r2, [r3, #0]
 800537a:	68fb      	ldr	r3, [r7, #12]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	60da      	str	r2, [r3, #12]
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005384:	1c9a      	adds	r2, r3, #2
 8005386:	68fb      	ldr	r3, [r7, #12]
 8005388:	631a      	str	r2, [r3, #48]	@ 0x30
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800538e:	b29b      	uxth	r3, r3
 8005390:	3b01      	subs	r3, #1
 8005392:	b29a      	uxth	r2, r3
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005398:	e02f      	b.n	80053fa <HAL_SPI_Transmit+0x17c>
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	689b      	ldr	r3, [r3, #8]
 80053a0:	f003 0302 	and.w	r3, r3, #2
 80053a4:	2b02      	cmp	r3, #2
 80053a6:	d112      	bne.n	80053ce <HAL_SPI_Transmit+0x150>
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053ac:	881a      	ldrh	r2, [r3, #0]
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	60da      	str	r2, [r3, #12]
 80053b4:	68fb      	ldr	r3, [r7, #12]
 80053b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053b8:	1c9a      	adds	r2, r3, #2
 80053ba:	68fb      	ldr	r3, [r7, #12]
 80053bc:	631a      	str	r2, [r3, #48]	@ 0x30
 80053be:	68fb      	ldr	r3, [r7, #12]
 80053c0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80053c2:	b29b      	uxth	r3, r3
 80053c4:	3b01      	subs	r3, #1
 80053c6:	b29a      	uxth	r2, r3
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	86da      	strh	r2, [r3, #54]	@ 0x36
 80053cc:	e015      	b.n	80053fa <HAL_SPI_Transmit+0x17c>
 80053ce:	f7fd fde5 	bl	8002f9c <HAL_GetTick>
 80053d2:	4602      	mov	r2, r0
 80053d4:	69bb      	ldr	r3, [r7, #24]
 80053d6:	1ad3      	subs	r3, r2, r3
 80053d8:	683a      	ldr	r2, [r7, #0]
 80053da:	429a      	cmp	r2, r3
 80053dc:	d803      	bhi.n	80053e6 <HAL_SPI_Transmit+0x168>
 80053de:	683b      	ldr	r3, [r7, #0]
 80053e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80053e4:	d102      	bne.n	80053ec <HAL_SPI_Transmit+0x16e>
 80053e6:	683b      	ldr	r3, [r7, #0]
 80053e8:	2b00      	cmp	r3, #0
 80053ea:	d106      	bne.n	80053fa <HAL_SPI_Transmit+0x17c>
 80053ec:	2303      	movs	r3, #3
 80053ee:	77fb      	strb	r3, [r7, #31]
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	2201      	movs	r2, #1
 80053f4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80053f8:	e07b      	b.n	80054f2 <HAL_SPI_Transmit+0x274>
 80053fa:	68fb      	ldr	r3, [r7, #12]
 80053fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80053fe:	b29b      	uxth	r3, r3
 8005400:	2b00      	cmp	r3, #0
 8005402:	d1ca      	bne.n	800539a <HAL_SPI_Transmit+0x11c>
 8005404:	e050      	b.n	80054a8 <HAL_SPI_Transmit+0x22a>
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	685b      	ldr	r3, [r3, #4]
 800540a:	2b00      	cmp	r3, #0
 800540c:	d002      	beq.n	8005414 <HAL_SPI_Transmit+0x196>
 800540e:	8afb      	ldrh	r3, [r7, #22]
 8005410:	2b01      	cmp	r3, #1
 8005412:	d144      	bne.n	800549e <HAL_SPI_Transmit+0x220>
 8005414:	68fb      	ldr	r3, [r7, #12]
 8005416:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	330c      	adds	r3, #12
 800541e:	7812      	ldrb	r2, [r2, #0]
 8005420:	701a      	strb	r2, [r3, #0]
 8005422:	68fb      	ldr	r3, [r7, #12]
 8005424:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005426:	1c5a      	adds	r2, r3, #1
 8005428:	68fb      	ldr	r3, [r7, #12]
 800542a:	631a      	str	r2, [r3, #48]	@ 0x30
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005430:	b29b      	uxth	r3, r3
 8005432:	3b01      	subs	r3, #1
 8005434:	b29a      	uxth	r2, r3
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	86da      	strh	r2, [r3, #54]	@ 0x36
 800543a:	e030      	b.n	800549e <HAL_SPI_Transmit+0x220>
 800543c:	68fb      	ldr	r3, [r7, #12]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	689b      	ldr	r3, [r3, #8]
 8005442:	f003 0302 	and.w	r3, r3, #2
 8005446:	2b02      	cmp	r3, #2
 8005448:	d113      	bne.n	8005472 <HAL_SPI_Transmit+0x1f4>
 800544a:	68fb      	ldr	r3, [r7, #12]
 800544c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800544e:	68fb      	ldr	r3, [r7, #12]
 8005450:	681b      	ldr	r3, [r3, #0]
 8005452:	330c      	adds	r3, #12
 8005454:	7812      	ldrb	r2, [r2, #0]
 8005456:	701a      	strb	r2, [r3, #0]
 8005458:	68fb      	ldr	r3, [r7, #12]
 800545a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800545c:	1c5a      	adds	r2, r3, #1
 800545e:	68fb      	ldr	r3, [r7, #12]
 8005460:	631a      	str	r2, [r3, #48]	@ 0x30
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005466:	b29b      	uxth	r3, r3
 8005468:	3b01      	subs	r3, #1
 800546a:	b29a      	uxth	r2, r3
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005470:	e015      	b.n	800549e <HAL_SPI_Transmit+0x220>
 8005472:	f7fd fd93 	bl	8002f9c <HAL_GetTick>
 8005476:	4602      	mov	r2, r0
 8005478:	69bb      	ldr	r3, [r7, #24]
 800547a:	1ad3      	subs	r3, r2, r3
 800547c:	683a      	ldr	r2, [r7, #0]
 800547e:	429a      	cmp	r2, r3
 8005480:	d803      	bhi.n	800548a <HAL_SPI_Transmit+0x20c>
 8005482:	683b      	ldr	r3, [r7, #0]
 8005484:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005488:	d102      	bne.n	8005490 <HAL_SPI_Transmit+0x212>
 800548a:	683b      	ldr	r3, [r7, #0]
 800548c:	2b00      	cmp	r3, #0
 800548e:	d106      	bne.n	800549e <HAL_SPI_Transmit+0x220>
 8005490:	2303      	movs	r3, #3
 8005492:	77fb      	strb	r3, [r7, #31]
 8005494:	68fb      	ldr	r3, [r7, #12]
 8005496:	2201      	movs	r2, #1
 8005498:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800549c:	e029      	b.n	80054f2 <HAL_SPI_Transmit+0x274>
 800549e:	68fb      	ldr	r3, [r7, #12]
 80054a0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80054a2:	b29b      	uxth	r3, r3
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d1c9      	bne.n	800543c <HAL_SPI_Transmit+0x1be>
 80054a8:	69ba      	ldr	r2, [r7, #24]
 80054aa:	6839      	ldr	r1, [r7, #0]
 80054ac:	68f8      	ldr	r0, [r7, #12]
 80054ae:	f000 f8b1 	bl	8005614 <SPI_EndRxTxTransaction>
 80054b2:	4603      	mov	r3, r0
 80054b4:	2b00      	cmp	r3, #0
 80054b6:	d002      	beq.n	80054be <HAL_SPI_Transmit+0x240>
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	2220      	movs	r2, #32
 80054bc:	655a      	str	r2, [r3, #84]	@ 0x54
 80054be:	68fb      	ldr	r3, [r7, #12]
 80054c0:	689b      	ldr	r3, [r3, #8]
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d10a      	bne.n	80054dc <HAL_SPI_Transmit+0x25e>
 80054c6:	2300      	movs	r3, #0
 80054c8:	613b      	str	r3, [r7, #16]
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	68db      	ldr	r3, [r3, #12]
 80054d0:	613b      	str	r3, [r7, #16]
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	689b      	ldr	r3, [r3, #8]
 80054d8:	613b      	str	r3, [r7, #16]
 80054da:	693b      	ldr	r3, [r7, #16]
 80054dc:	68fb      	ldr	r3, [r7, #12]
 80054de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80054e0:	2b00      	cmp	r3, #0
 80054e2:	d002      	beq.n	80054ea <HAL_SPI_Transmit+0x26c>
 80054e4:	2301      	movs	r3, #1
 80054e6:	77fb      	strb	r3, [r7, #31]
 80054e8:	e003      	b.n	80054f2 <HAL_SPI_Transmit+0x274>
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	2201      	movs	r2, #1
 80054ee:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	2200      	movs	r2, #0
 80054f6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80054fa:	7ffb      	ldrb	r3, [r7, #31]
 80054fc:	4618      	mov	r0, r3
 80054fe:	3720      	adds	r7, #32
 8005500:	46bd      	mov	sp, r7
 8005502:	bd80      	pop	{r7, pc}

08005504 <SPI_WaitFlagStateUntilTimeout>:
 8005504:	b580      	push	{r7, lr}
 8005506:	b088      	sub	sp, #32
 8005508:	af00      	add	r7, sp, #0
 800550a:	60f8      	str	r0, [r7, #12]
 800550c:	60b9      	str	r1, [r7, #8]
 800550e:	603b      	str	r3, [r7, #0]
 8005510:	4613      	mov	r3, r2
 8005512:	71fb      	strb	r3, [r7, #7]
 8005514:	f7fd fd42 	bl	8002f9c <HAL_GetTick>
 8005518:	4602      	mov	r2, r0
 800551a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800551c:	1a9b      	subs	r3, r3, r2
 800551e:	683a      	ldr	r2, [r7, #0]
 8005520:	4413      	add	r3, r2
 8005522:	61fb      	str	r3, [r7, #28]
 8005524:	f7fd fd3a 	bl	8002f9c <HAL_GetTick>
 8005528:	61b8      	str	r0, [r7, #24]
 800552a:	4b39      	ldr	r3, [pc, #228]	@ (8005610 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	015b      	lsls	r3, r3, #5
 8005530:	0d1b      	lsrs	r3, r3, #20
 8005532:	69fa      	ldr	r2, [r7, #28]
 8005534:	fb02 f303 	mul.w	r3, r2, r3
 8005538:	617b      	str	r3, [r7, #20]
 800553a:	e054      	b.n	80055e6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800553c:	683b      	ldr	r3, [r7, #0]
 800553e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005542:	d050      	beq.n	80055e6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005544:	f7fd fd2a 	bl	8002f9c <HAL_GetTick>
 8005548:	4602      	mov	r2, r0
 800554a:	69bb      	ldr	r3, [r7, #24]
 800554c:	1ad3      	subs	r3, r2, r3
 800554e:	69fa      	ldr	r2, [r7, #28]
 8005550:	429a      	cmp	r2, r3
 8005552:	d902      	bls.n	800555a <SPI_WaitFlagStateUntilTimeout+0x56>
 8005554:	69fb      	ldr	r3, [r7, #28]
 8005556:	2b00      	cmp	r3, #0
 8005558:	d13d      	bne.n	80055d6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800555a:	68fb      	ldr	r3, [r7, #12]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	685a      	ldr	r2, [r3, #4]
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005568:	605a      	str	r2, [r3, #4]
 800556a:	68fb      	ldr	r3, [r7, #12]
 800556c:	685b      	ldr	r3, [r3, #4]
 800556e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005572:	d111      	bne.n	8005598 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	689b      	ldr	r3, [r3, #8]
 8005578:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800557c:	d004      	beq.n	8005588 <SPI_WaitFlagStateUntilTimeout+0x84>
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	689b      	ldr	r3, [r3, #8]
 8005582:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005586:	d107      	bne.n	8005598 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	681b      	ldr	r3, [r3, #0]
 800558c:	681a      	ldr	r2, [r3, #0]
 800558e:	68fb      	ldr	r3, [r7, #12]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005596:	601a      	str	r2, [r3, #0]
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800559c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80055a0:	d10f      	bne.n	80055c2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	681a      	ldr	r2, [r3, #0]
 80055a8:	68fb      	ldr	r3, [r7, #12]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80055b0:	601a      	str	r2, [r3, #0]
 80055b2:	68fb      	ldr	r3, [r7, #12]
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	681a      	ldr	r2, [r3, #0]
 80055b8:	68fb      	ldr	r3, [r7, #12]
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80055c0:	601a      	str	r2, [r3, #0]
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	2201      	movs	r2, #1
 80055c6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	2200      	movs	r2, #0
 80055ce:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80055d2:	2303      	movs	r3, #3
 80055d4:	e017      	b.n	8005606 <SPI_WaitFlagStateUntilTimeout+0x102>
 80055d6:	697b      	ldr	r3, [r7, #20]
 80055d8:	2b00      	cmp	r3, #0
 80055da:	d101      	bne.n	80055e0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80055dc:	2300      	movs	r3, #0
 80055de:	61fb      	str	r3, [r7, #28]
 80055e0:	697b      	ldr	r3, [r7, #20]
 80055e2:	3b01      	subs	r3, #1
 80055e4:	617b      	str	r3, [r7, #20]
 80055e6:	68fb      	ldr	r3, [r7, #12]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	689a      	ldr	r2, [r3, #8]
 80055ec:	68bb      	ldr	r3, [r7, #8]
 80055ee:	4013      	ands	r3, r2
 80055f0:	68ba      	ldr	r2, [r7, #8]
 80055f2:	429a      	cmp	r2, r3
 80055f4:	bf0c      	ite	eq
 80055f6:	2301      	moveq	r3, #1
 80055f8:	2300      	movne	r3, #0
 80055fa:	b2db      	uxtb	r3, r3
 80055fc:	461a      	mov	r2, r3
 80055fe:	79fb      	ldrb	r3, [r7, #7]
 8005600:	429a      	cmp	r2, r3
 8005602:	d19b      	bne.n	800553c <SPI_WaitFlagStateUntilTimeout+0x38>
 8005604:	2300      	movs	r3, #0
 8005606:	4618      	mov	r0, r3
 8005608:	3720      	adds	r7, #32
 800560a:	46bd      	mov	sp, r7
 800560c:	bd80      	pop	{r7, pc}
 800560e:	bf00      	nop
 8005610:	20000014 	.word	0x20000014

08005614 <SPI_EndRxTxTransaction>:
 8005614:	b580      	push	{r7, lr}
 8005616:	b088      	sub	sp, #32
 8005618:	af02      	add	r7, sp, #8
 800561a:	60f8      	str	r0, [r7, #12]
 800561c:	60b9      	str	r1, [r7, #8]
 800561e:	607a      	str	r2, [r7, #4]
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	9300      	str	r3, [sp, #0]
 8005624:	68bb      	ldr	r3, [r7, #8]
 8005626:	2201      	movs	r2, #1
 8005628:	2102      	movs	r1, #2
 800562a:	68f8      	ldr	r0, [r7, #12]
 800562c:	f7ff ff6a 	bl	8005504 <SPI_WaitFlagStateUntilTimeout>
 8005630:	4603      	mov	r3, r0
 8005632:	2b00      	cmp	r3, #0
 8005634:	d007      	beq.n	8005646 <SPI_EndRxTxTransaction+0x32>
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800563a:	f043 0220 	orr.w	r2, r3, #32
 800563e:	68fb      	ldr	r3, [r7, #12]
 8005640:	655a      	str	r2, [r3, #84]	@ 0x54
 8005642:	2303      	movs	r3, #3
 8005644:	e032      	b.n	80056ac <SPI_EndRxTxTransaction+0x98>
 8005646:	4b1b      	ldr	r3, [pc, #108]	@ (80056b4 <SPI_EndRxTxTransaction+0xa0>)
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	4a1b      	ldr	r2, [pc, #108]	@ (80056b8 <SPI_EndRxTxTransaction+0xa4>)
 800564c:	fba2 2303 	umull	r2, r3, r2, r3
 8005650:	0d5b      	lsrs	r3, r3, #21
 8005652:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8005656:	fb02 f303 	mul.w	r3, r2, r3
 800565a:	617b      	str	r3, [r7, #20]
 800565c:	68fb      	ldr	r3, [r7, #12]
 800565e:	685b      	ldr	r3, [r3, #4]
 8005660:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005664:	d112      	bne.n	800568c <SPI_EndRxTxTransaction+0x78>
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	9300      	str	r3, [sp, #0]
 800566a:	68bb      	ldr	r3, [r7, #8]
 800566c:	2200      	movs	r2, #0
 800566e:	2180      	movs	r1, #128	@ 0x80
 8005670:	68f8      	ldr	r0, [r7, #12]
 8005672:	f7ff ff47 	bl	8005504 <SPI_WaitFlagStateUntilTimeout>
 8005676:	4603      	mov	r3, r0
 8005678:	2b00      	cmp	r3, #0
 800567a:	d016      	beq.n	80056aa <SPI_EndRxTxTransaction+0x96>
 800567c:	68fb      	ldr	r3, [r7, #12]
 800567e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005680:	f043 0220 	orr.w	r2, r3, #32
 8005684:	68fb      	ldr	r3, [r7, #12]
 8005686:	655a      	str	r2, [r3, #84]	@ 0x54
 8005688:	2303      	movs	r3, #3
 800568a:	e00f      	b.n	80056ac <SPI_EndRxTxTransaction+0x98>
 800568c:	697b      	ldr	r3, [r7, #20]
 800568e:	2b00      	cmp	r3, #0
 8005690:	d00a      	beq.n	80056a8 <SPI_EndRxTxTransaction+0x94>
 8005692:	697b      	ldr	r3, [r7, #20]
 8005694:	3b01      	subs	r3, #1
 8005696:	617b      	str	r3, [r7, #20]
 8005698:	68fb      	ldr	r3, [r7, #12]
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	689b      	ldr	r3, [r3, #8]
 800569e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80056a2:	2b80      	cmp	r3, #128	@ 0x80
 80056a4:	d0f2      	beq.n	800568c <SPI_EndRxTxTransaction+0x78>
 80056a6:	e000      	b.n	80056aa <SPI_EndRxTxTransaction+0x96>
 80056a8:	bf00      	nop
 80056aa:	2300      	movs	r3, #0
 80056ac:	4618      	mov	r0, r3
 80056ae:	3718      	adds	r7, #24
 80056b0:	46bd      	mov	sp, r7
 80056b2:	bd80      	pop	{r7, pc}
 80056b4:	20000014 	.word	0x20000014
 80056b8:	165e9f81 	.word	0x165e9f81

080056bc <HAL_SRAM_Init>:
 80056bc:	b580      	push	{r7, lr}
 80056be:	b084      	sub	sp, #16
 80056c0:	af00      	add	r7, sp, #0
 80056c2:	60f8      	str	r0, [r7, #12]
 80056c4:	60b9      	str	r1, [r7, #8]
 80056c6:	607a      	str	r2, [r7, #4]
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d101      	bne.n	80056d2 <HAL_SRAM_Init+0x16>
 80056ce:	2301      	movs	r3, #1
 80056d0:	e038      	b.n	8005744 <HAL_SRAM_Init+0x88>
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	f893 3049 	ldrb.w	r3, [r3, #73]	@ 0x49
 80056d8:	b2db      	uxtb	r3, r3
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d106      	bne.n	80056ec <HAL_SRAM_Init+0x30>
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	2200      	movs	r2, #0
 80056e2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80056e6:	68f8      	ldr	r0, [r7, #12]
 80056e8:	f7fb ffb0 	bl	800164c <HAL_SRAM_MspInit>
 80056ec:	68fb      	ldr	r3, [r7, #12]
 80056ee:	681a      	ldr	r2, [r3, #0]
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	3308      	adds	r3, #8
 80056f4:	4619      	mov	r1, r3
 80056f6:	4610      	mov	r0, r2
 80056f8:	f002 f8ae 	bl	8007858 <FSMC_NORSRAM_Init>
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	6818      	ldr	r0, [r3, #0]
 8005700:	68fb      	ldr	r3, [r7, #12]
 8005702:	689b      	ldr	r3, [r3, #8]
 8005704:	461a      	mov	r2, r3
 8005706:	68b9      	ldr	r1, [r7, #8]
 8005708:	f002 f910 	bl	800792c <FSMC_NORSRAM_Timing_Init>
 800570c:	68fb      	ldr	r3, [r7, #12]
 800570e:	6858      	ldr	r0, [r3, #4]
 8005710:	68fb      	ldr	r3, [r7, #12]
 8005712:	689a      	ldr	r2, [r3, #8]
 8005714:	68fb      	ldr	r3, [r7, #12]
 8005716:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005718:	6879      	ldr	r1, [r7, #4]
 800571a:	f002 f93d 	bl	8007998 <FSMC_NORSRAM_Extended_Timing_Init>
 800571e:	68fb      	ldr	r3, [r7, #12]
 8005720:	681b      	ldr	r3, [r3, #0]
 8005722:	68fa      	ldr	r2, [r7, #12]
 8005724:	6892      	ldr	r2, [r2, #8]
 8005726:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	681b      	ldr	r3, [r3, #0]
 800572e:	68fa      	ldr	r2, [r7, #12]
 8005730:	6892      	ldr	r2, [r2, #8]
 8005732:	f041 0101 	orr.w	r1, r1, #1
 8005736:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	2201      	movs	r2, #1
 800573e:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
 8005742:	2300      	movs	r3, #0
 8005744:	4618      	mov	r0, r3
 8005746:	3710      	adds	r7, #16
 8005748:	46bd      	mov	sp, r7
 800574a:	bd80      	pop	{r7, pc}

0800574c <HAL_TIM_Base_Init>:
 800574c:	b580      	push	{r7, lr}
 800574e:	b082      	sub	sp, #8
 8005750:	af00      	add	r7, sp, #0
 8005752:	6078      	str	r0, [r7, #4]
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	2b00      	cmp	r3, #0
 8005758:	d101      	bne.n	800575e <HAL_TIM_Base_Init+0x12>
 800575a:	2301      	movs	r3, #1
 800575c:	e041      	b.n	80057e2 <HAL_TIM_Base_Init+0x96>
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005764:	b2db      	uxtb	r3, r3
 8005766:	2b00      	cmp	r3, #0
 8005768:	d106      	bne.n	8005778 <HAL_TIM_Base_Init+0x2c>
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	2200      	movs	r2, #0
 800576e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005772:	6878      	ldr	r0, [r7, #4]
 8005774:	f7fd fa66 	bl	8002c44 <HAL_TIM_Base_MspInit>
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	2202      	movs	r2, #2
 800577c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	681a      	ldr	r2, [r3, #0]
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	3304      	adds	r3, #4
 8005788:	4619      	mov	r1, r3
 800578a:	4610      	mov	r0, r2
 800578c:	f000 fc62 	bl	8006054 <TIM_Base_SetConfig>
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	2201      	movs	r2, #1
 8005794:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	2201      	movs	r2, #1
 800579c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	2201      	movs	r2, #1
 80057a4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	2201      	movs	r2, #1
 80057ac:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	2201      	movs	r2, #1
 80057b4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	2201      	movs	r2, #1
 80057bc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	2201      	movs	r2, #1
 80057c4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80057c8:	687b      	ldr	r3, [r7, #4]
 80057ca:	2201      	movs	r2, #1
 80057cc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	2201      	movs	r2, #1
 80057d4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80057d8:	687b      	ldr	r3, [r7, #4]
 80057da:	2201      	movs	r2, #1
 80057dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80057e0:	2300      	movs	r3, #0
 80057e2:	4618      	mov	r0, r3
 80057e4:	3708      	adds	r7, #8
 80057e6:	46bd      	mov	sp, r7
 80057e8:	bd80      	pop	{r7, pc}
	...

080057ec <HAL_TIM_Base_Start_IT>:
 80057ec:	b480      	push	{r7}
 80057ee:	b085      	sub	sp, #20
 80057f0:	af00      	add	r7, sp, #0
 80057f2:	6078      	str	r0, [r7, #4]
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80057fa:	b2db      	uxtb	r3, r3
 80057fc:	2b01      	cmp	r3, #1
 80057fe:	d001      	beq.n	8005804 <HAL_TIM_Base_Start_IT+0x18>
 8005800:	2301      	movs	r3, #1
 8005802:	e04e      	b.n	80058a2 <HAL_TIM_Base_Start_IT+0xb6>
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	2202      	movs	r2, #2
 8005808:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800580c:	687b      	ldr	r3, [r7, #4]
 800580e:	681b      	ldr	r3, [r3, #0]
 8005810:	68da      	ldr	r2, [r3, #12]
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	f042 0201 	orr.w	r2, r2, #1
 800581a:	60da      	str	r2, [r3, #12]
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	681b      	ldr	r3, [r3, #0]
 8005820:	4a23      	ldr	r2, [pc, #140]	@ (80058b0 <HAL_TIM_Base_Start_IT+0xc4>)
 8005822:	4293      	cmp	r3, r2
 8005824:	d022      	beq.n	800586c <HAL_TIM_Base_Start_IT+0x80>
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800582e:	d01d      	beq.n	800586c <HAL_TIM_Base_Start_IT+0x80>
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	4a1f      	ldr	r2, [pc, #124]	@ (80058b4 <HAL_TIM_Base_Start_IT+0xc8>)
 8005836:	4293      	cmp	r3, r2
 8005838:	d018      	beq.n	800586c <HAL_TIM_Base_Start_IT+0x80>
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	4a1e      	ldr	r2, [pc, #120]	@ (80058b8 <HAL_TIM_Base_Start_IT+0xcc>)
 8005840:	4293      	cmp	r3, r2
 8005842:	d013      	beq.n	800586c <HAL_TIM_Base_Start_IT+0x80>
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	4a1c      	ldr	r2, [pc, #112]	@ (80058bc <HAL_TIM_Base_Start_IT+0xd0>)
 800584a:	4293      	cmp	r3, r2
 800584c:	d00e      	beq.n	800586c <HAL_TIM_Base_Start_IT+0x80>
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	4a1b      	ldr	r2, [pc, #108]	@ (80058c0 <HAL_TIM_Base_Start_IT+0xd4>)
 8005854:	4293      	cmp	r3, r2
 8005856:	d009      	beq.n	800586c <HAL_TIM_Base_Start_IT+0x80>
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	681b      	ldr	r3, [r3, #0]
 800585c:	4a19      	ldr	r2, [pc, #100]	@ (80058c4 <HAL_TIM_Base_Start_IT+0xd8>)
 800585e:	4293      	cmp	r3, r2
 8005860:	d004      	beq.n	800586c <HAL_TIM_Base_Start_IT+0x80>
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	4a18      	ldr	r2, [pc, #96]	@ (80058c8 <HAL_TIM_Base_Start_IT+0xdc>)
 8005868:	4293      	cmp	r3, r2
 800586a:	d111      	bne.n	8005890 <HAL_TIM_Base_Start_IT+0xa4>
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	689b      	ldr	r3, [r3, #8]
 8005872:	f003 0307 	and.w	r3, r3, #7
 8005876:	60fb      	str	r3, [r7, #12]
 8005878:	68fb      	ldr	r3, [r7, #12]
 800587a:	2b06      	cmp	r3, #6
 800587c:	d010      	beq.n	80058a0 <HAL_TIM_Base_Start_IT+0xb4>
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	681a      	ldr	r2, [r3, #0]
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	681b      	ldr	r3, [r3, #0]
 8005888:	f042 0201 	orr.w	r2, r2, #1
 800588c:	601a      	str	r2, [r3, #0]
 800588e:	e007      	b.n	80058a0 <HAL_TIM_Base_Start_IT+0xb4>
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	681a      	ldr	r2, [r3, #0]
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	f042 0201 	orr.w	r2, r2, #1
 800589e:	601a      	str	r2, [r3, #0]
 80058a0:	2300      	movs	r3, #0
 80058a2:	4618      	mov	r0, r3
 80058a4:	3714      	adds	r7, #20
 80058a6:	46bd      	mov	sp, r7
 80058a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058ac:	4770      	bx	lr
 80058ae:	bf00      	nop
 80058b0:	40010000 	.word	0x40010000
 80058b4:	40000400 	.word	0x40000400
 80058b8:	40000800 	.word	0x40000800
 80058bc:	40000c00 	.word	0x40000c00
 80058c0:	40010400 	.word	0x40010400
 80058c4:	40014000 	.word	0x40014000
 80058c8:	40001800 	.word	0x40001800

080058cc <HAL_TIM_PWM_Init>:
 80058cc:	b580      	push	{r7, lr}
 80058ce:	b082      	sub	sp, #8
 80058d0:	af00      	add	r7, sp, #0
 80058d2:	6078      	str	r0, [r7, #4]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	d101      	bne.n	80058de <HAL_TIM_PWM_Init+0x12>
 80058da:	2301      	movs	r3, #1
 80058dc:	e041      	b.n	8005962 <HAL_TIM_PWM_Init+0x96>
 80058de:	687b      	ldr	r3, [r7, #4]
 80058e0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80058e4:	b2db      	uxtb	r3, r3
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d106      	bne.n	80058f8 <HAL_TIM_PWM_Init+0x2c>
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	2200      	movs	r2, #0
 80058ee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80058f2:	6878      	ldr	r0, [r7, #4]
 80058f4:	f000 f839 	bl	800596a <HAL_TIM_PWM_MspInit>
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	2202      	movs	r2, #2
 80058fc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005900:	687b      	ldr	r3, [r7, #4]
 8005902:	681a      	ldr	r2, [r3, #0]
 8005904:	687b      	ldr	r3, [r7, #4]
 8005906:	3304      	adds	r3, #4
 8005908:	4619      	mov	r1, r3
 800590a:	4610      	mov	r0, r2
 800590c:	f000 fba2 	bl	8006054 <TIM_Base_SetConfig>
 8005910:	687b      	ldr	r3, [r7, #4]
 8005912:	2201      	movs	r2, #1
 8005914:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	2201      	movs	r2, #1
 800591c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	2201      	movs	r2, #1
 8005924:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	2201      	movs	r2, #1
 800592c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	2201      	movs	r2, #1
 8005934:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	2201      	movs	r2, #1
 800593c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	2201      	movs	r2, #1
 8005944:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	2201      	movs	r2, #1
 800594c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	2201      	movs	r2, #1
 8005954:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	2201      	movs	r2, #1
 800595c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005960:	2300      	movs	r3, #0
 8005962:	4618      	mov	r0, r3
 8005964:	3708      	adds	r7, #8
 8005966:	46bd      	mov	sp, r7
 8005968:	bd80      	pop	{r7, pc}

0800596a <HAL_TIM_PWM_MspInit>:
 800596a:	b480      	push	{r7}
 800596c:	b083      	sub	sp, #12
 800596e:	af00      	add	r7, sp, #0
 8005970:	6078      	str	r0, [r7, #4]
 8005972:	bf00      	nop
 8005974:	370c      	adds	r7, #12
 8005976:	46bd      	mov	sp, r7
 8005978:	f85d 7b04 	ldr.w	r7, [sp], #4
 800597c:	4770      	bx	lr
	...

08005980 <HAL_TIM_PWM_Start>:
 8005980:	b580      	push	{r7, lr}
 8005982:	b084      	sub	sp, #16
 8005984:	af00      	add	r7, sp, #0
 8005986:	6078      	str	r0, [r7, #4]
 8005988:	6039      	str	r1, [r7, #0]
 800598a:	683b      	ldr	r3, [r7, #0]
 800598c:	2b00      	cmp	r3, #0
 800598e:	d109      	bne.n	80059a4 <HAL_TIM_PWM_Start+0x24>
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005996:	b2db      	uxtb	r3, r3
 8005998:	2b01      	cmp	r3, #1
 800599a:	bf14      	ite	ne
 800599c:	2301      	movne	r3, #1
 800599e:	2300      	moveq	r3, #0
 80059a0:	b2db      	uxtb	r3, r3
 80059a2:	e022      	b.n	80059ea <HAL_TIM_PWM_Start+0x6a>
 80059a4:	683b      	ldr	r3, [r7, #0]
 80059a6:	2b04      	cmp	r3, #4
 80059a8:	d109      	bne.n	80059be <HAL_TIM_PWM_Start+0x3e>
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80059b0:	b2db      	uxtb	r3, r3
 80059b2:	2b01      	cmp	r3, #1
 80059b4:	bf14      	ite	ne
 80059b6:	2301      	movne	r3, #1
 80059b8:	2300      	moveq	r3, #0
 80059ba:	b2db      	uxtb	r3, r3
 80059bc:	e015      	b.n	80059ea <HAL_TIM_PWM_Start+0x6a>
 80059be:	683b      	ldr	r3, [r7, #0]
 80059c0:	2b08      	cmp	r3, #8
 80059c2:	d109      	bne.n	80059d8 <HAL_TIM_PWM_Start+0x58>
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80059ca:	b2db      	uxtb	r3, r3
 80059cc:	2b01      	cmp	r3, #1
 80059ce:	bf14      	ite	ne
 80059d0:	2301      	movne	r3, #1
 80059d2:	2300      	moveq	r3, #0
 80059d4:	b2db      	uxtb	r3, r3
 80059d6:	e008      	b.n	80059ea <HAL_TIM_PWM_Start+0x6a>
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80059de:	b2db      	uxtb	r3, r3
 80059e0:	2b01      	cmp	r3, #1
 80059e2:	bf14      	ite	ne
 80059e4:	2301      	movne	r3, #1
 80059e6:	2300      	moveq	r3, #0
 80059e8:	b2db      	uxtb	r3, r3
 80059ea:	2b00      	cmp	r3, #0
 80059ec:	d001      	beq.n	80059f2 <HAL_TIM_PWM_Start+0x72>
 80059ee:	2301      	movs	r3, #1
 80059f0:	e07c      	b.n	8005aec <HAL_TIM_PWM_Start+0x16c>
 80059f2:	683b      	ldr	r3, [r7, #0]
 80059f4:	2b00      	cmp	r3, #0
 80059f6:	d104      	bne.n	8005a02 <HAL_TIM_PWM_Start+0x82>
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	2202      	movs	r2, #2
 80059fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005a00:	e013      	b.n	8005a2a <HAL_TIM_PWM_Start+0xaa>
 8005a02:	683b      	ldr	r3, [r7, #0]
 8005a04:	2b04      	cmp	r3, #4
 8005a06:	d104      	bne.n	8005a12 <HAL_TIM_PWM_Start+0x92>
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	2202      	movs	r2, #2
 8005a0c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005a10:	e00b      	b.n	8005a2a <HAL_TIM_PWM_Start+0xaa>
 8005a12:	683b      	ldr	r3, [r7, #0]
 8005a14:	2b08      	cmp	r3, #8
 8005a16:	d104      	bne.n	8005a22 <HAL_TIM_PWM_Start+0xa2>
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	2202      	movs	r2, #2
 8005a1c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005a20:	e003      	b.n	8005a2a <HAL_TIM_PWM_Start+0xaa>
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	2202      	movs	r2, #2
 8005a26:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	2201      	movs	r2, #1
 8005a30:	6839      	ldr	r1, [r7, #0]
 8005a32:	4618      	mov	r0, r3
 8005a34:	f000 fe04 	bl	8006640 <TIM_CCxChannelCmd>
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	4a2d      	ldr	r2, [pc, #180]	@ (8005af4 <HAL_TIM_PWM_Start+0x174>)
 8005a3e:	4293      	cmp	r3, r2
 8005a40:	d004      	beq.n	8005a4c <HAL_TIM_PWM_Start+0xcc>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	4a2c      	ldr	r2, [pc, #176]	@ (8005af8 <HAL_TIM_PWM_Start+0x178>)
 8005a48:	4293      	cmp	r3, r2
 8005a4a:	d101      	bne.n	8005a50 <HAL_TIM_PWM_Start+0xd0>
 8005a4c:	2301      	movs	r3, #1
 8005a4e:	e000      	b.n	8005a52 <HAL_TIM_PWM_Start+0xd2>
 8005a50:	2300      	movs	r3, #0
 8005a52:	2b00      	cmp	r3, #0
 8005a54:	d007      	beq.n	8005a66 <HAL_TIM_PWM_Start+0xe6>
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	681b      	ldr	r3, [r3, #0]
 8005a5a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	681b      	ldr	r3, [r3, #0]
 8005a60:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005a64:	645a      	str	r2, [r3, #68]	@ 0x44
 8005a66:	687b      	ldr	r3, [r7, #4]
 8005a68:	681b      	ldr	r3, [r3, #0]
 8005a6a:	4a22      	ldr	r2, [pc, #136]	@ (8005af4 <HAL_TIM_PWM_Start+0x174>)
 8005a6c:	4293      	cmp	r3, r2
 8005a6e:	d022      	beq.n	8005ab6 <HAL_TIM_PWM_Start+0x136>
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005a78:	d01d      	beq.n	8005ab6 <HAL_TIM_PWM_Start+0x136>
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	4a1f      	ldr	r2, [pc, #124]	@ (8005afc <HAL_TIM_PWM_Start+0x17c>)
 8005a80:	4293      	cmp	r3, r2
 8005a82:	d018      	beq.n	8005ab6 <HAL_TIM_PWM_Start+0x136>
 8005a84:	687b      	ldr	r3, [r7, #4]
 8005a86:	681b      	ldr	r3, [r3, #0]
 8005a88:	4a1d      	ldr	r2, [pc, #116]	@ (8005b00 <HAL_TIM_PWM_Start+0x180>)
 8005a8a:	4293      	cmp	r3, r2
 8005a8c:	d013      	beq.n	8005ab6 <HAL_TIM_PWM_Start+0x136>
 8005a8e:	687b      	ldr	r3, [r7, #4]
 8005a90:	681b      	ldr	r3, [r3, #0]
 8005a92:	4a1c      	ldr	r2, [pc, #112]	@ (8005b04 <HAL_TIM_PWM_Start+0x184>)
 8005a94:	4293      	cmp	r3, r2
 8005a96:	d00e      	beq.n	8005ab6 <HAL_TIM_PWM_Start+0x136>
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	4a16      	ldr	r2, [pc, #88]	@ (8005af8 <HAL_TIM_PWM_Start+0x178>)
 8005a9e:	4293      	cmp	r3, r2
 8005aa0:	d009      	beq.n	8005ab6 <HAL_TIM_PWM_Start+0x136>
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	4a18      	ldr	r2, [pc, #96]	@ (8005b08 <HAL_TIM_PWM_Start+0x188>)
 8005aa8:	4293      	cmp	r3, r2
 8005aaa:	d004      	beq.n	8005ab6 <HAL_TIM_PWM_Start+0x136>
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	4a16      	ldr	r2, [pc, #88]	@ (8005b0c <HAL_TIM_PWM_Start+0x18c>)
 8005ab2:	4293      	cmp	r3, r2
 8005ab4:	d111      	bne.n	8005ada <HAL_TIM_PWM_Start+0x15a>
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	689b      	ldr	r3, [r3, #8]
 8005abc:	f003 0307 	and.w	r3, r3, #7
 8005ac0:	60fb      	str	r3, [r7, #12]
 8005ac2:	68fb      	ldr	r3, [r7, #12]
 8005ac4:	2b06      	cmp	r3, #6
 8005ac6:	d010      	beq.n	8005aea <HAL_TIM_PWM_Start+0x16a>
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	681b      	ldr	r3, [r3, #0]
 8005acc:	681a      	ldr	r2, [r3, #0]
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	f042 0201 	orr.w	r2, r2, #1
 8005ad6:	601a      	str	r2, [r3, #0]
 8005ad8:	e007      	b.n	8005aea <HAL_TIM_PWM_Start+0x16a>
 8005ada:	687b      	ldr	r3, [r7, #4]
 8005adc:	681b      	ldr	r3, [r3, #0]
 8005ade:	681a      	ldr	r2, [r3, #0]
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	f042 0201 	orr.w	r2, r2, #1
 8005ae8:	601a      	str	r2, [r3, #0]
 8005aea:	2300      	movs	r3, #0
 8005aec:	4618      	mov	r0, r3
 8005aee:	3710      	adds	r7, #16
 8005af0:	46bd      	mov	sp, r7
 8005af2:	bd80      	pop	{r7, pc}
 8005af4:	40010000 	.word	0x40010000
 8005af8:	40010400 	.word	0x40010400
 8005afc:	40000400 	.word	0x40000400
 8005b00:	40000800 	.word	0x40000800
 8005b04:	40000c00 	.word	0x40000c00
 8005b08:	40014000 	.word	0x40014000
 8005b0c:	40001800 	.word	0x40001800

08005b10 <HAL_TIM_IRQHandler>:
 8005b10:	b580      	push	{r7, lr}
 8005b12:	b084      	sub	sp, #16
 8005b14:	af00      	add	r7, sp, #0
 8005b16:	6078      	str	r0, [r7, #4]
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	68db      	ldr	r3, [r3, #12]
 8005b1e:	60fb      	str	r3, [r7, #12]
 8005b20:	687b      	ldr	r3, [r7, #4]
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	691b      	ldr	r3, [r3, #16]
 8005b26:	60bb      	str	r3, [r7, #8]
 8005b28:	68bb      	ldr	r3, [r7, #8]
 8005b2a:	f003 0302 	and.w	r3, r3, #2
 8005b2e:	2b00      	cmp	r3, #0
 8005b30:	d020      	beq.n	8005b74 <HAL_TIM_IRQHandler+0x64>
 8005b32:	68fb      	ldr	r3, [r7, #12]
 8005b34:	f003 0302 	and.w	r3, r3, #2
 8005b38:	2b00      	cmp	r3, #0
 8005b3a:	d01b      	beq.n	8005b74 <HAL_TIM_IRQHandler+0x64>
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	f06f 0202 	mvn.w	r2, #2
 8005b44:	611a      	str	r2, [r3, #16]
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	2201      	movs	r2, #1
 8005b4a:	771a      	strb	r2, [r3, #28]
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	699b      	ldr	r3, [r3, #24]
 8005b52:	f003 0303 	and.w	r3, r3, #3
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	d003      	beq.n	8005b62 <HAL_TIM_IRQHandler+0x52>
 8005b5a:	6878      	ldr	r0, [r7, #4]
 8005b5c:	f000 fa5b 	bl	8006016 <HAL_TIM_IC_CaptureCallback>
 8005b60:	e005      	b.n	8005b6e <HAL_TIM_IRQHandler+0x5e>
 8005b62:	6878      	ldr	r0, [r7, #4]
 8005b64:	f000 fa4d 	bl	8006002 <HAL_TIM_OC_DelayElapsedCallback>
 8005b68:	6878      	ldr	r0, [r7, #4]
 8005b6a:	f000 fa5e 	bl	800602a <HAL_TIM_PWM_PulseFinishedCallback>
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	2200      	movs	r2, #0
 8005b72:	771a      	strb	r2, [r3, #28]
 8005b74:	68bb      	ldr	r3, [r7, #8]
 8005b76:	f003 0304 	and.w	r3, r3, #4
 8005b7a:	2b00      	cmp	r3, #0
 8005b7c:	d020      	beq.n	8005bc0 <HAL_TIM_IRQHandler+0xb0>
 8005b7e:	68fb      	ldr	r3, [r7, #12]
 8005b80:	f003 0304 	and.w	r3, r3, #4
 8005b84:	2b00      	cmp	r3, #0
 8005b86:	d01b      	beq.n	8005bc0 <HAL_TIM_IRQHandler+0xb0>
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	681b      	ldr	r3, [r3, #0]
 8005b8c:	f06f 0204 	mvn.w	r2, #4
 8005b90:	611a      	str	r2, [r3, #16]
 8005b92:	687b      	ldr	r3, [r7, #4]
 8005b94:	2202      	movs	r2, #2
 8005b96:	771a      	strb	r2, [r3, #28]
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	699b      	ldr	r3, [r3, #24]
 8005b9e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005ba2:	2b00      	cmp	r3, #0
 8005ba4:	d003      	beq.n	8005bae <HAL_TIM_IRQHandler+0x9e>
 8005ba6:	6878      	ldr	r0, [r7, #4]
 8005ba8:	f000 fa35 	bl	8006016 <HAL_TIM_IC_CaptureCallback>
 8005bac:	e005      	b.n	8005bba <HAL_TIM_IRQHandler+0xaa>
 8005bae:	6878      	ldr	r0, [r7, #4]
 8005bb0:	f000 fa27 	bl	8006002 <HAL_TIM_OC_DelayElapsedCallback>
 8005bb4:	6878      	ldr	r0, [r7, #4]
 8005bb6:	f000 fa38 	bl	800602a <HAL_TIM_PWM_PulseFinishedCallback>
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	2200      	movs	r2, #0
 8005bbe:	771a      	strb	r2, [r3, #28]
 8005bc0:	68bb      	ldr	r3, [r7, #8]
 8005bc2:	f003 0308 	and.w	r3, r3, #8
 8005bc6:	2b00      	cmp	r3, #0
 8005bc8:	d020      	beq.n	8005c0c <HAL_TIM_IRQHandler+0xfc>
 8005bca:	68fb      	ldr	r3, [r7, #12]
 8005bcc:	f003 0308 	and.w	r3, r3, #8
 8005bd0:	2b00      	cmp	r3, #0
 8005bd2:	d01b      	beq.n	8005c0c <HAL_TIM_IRQHandler+0xfc>
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	f06f 0208 	mvn.w	r2, #8
 8005bdc:	611a      	str	r2, [r3, #16]
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	2204      	movs	r2, #4
 8005be2:	771a      	strb	r2, [r3, #28]
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	69db      	ldr	r3, [r3, #28]
 8005bea:	f003 0303 	and.w	r3, r3, #3
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d003      	beq.n	8005bfa <HAL_TIM_IRQHandler+0xea>
 8005bf2:	6878      	ldr	r0, [r7, #4]
 8005bf4:	f000 fa0f 	bl	8006016 <HAL_TIM_IC_CaptureCallback>
 8005bf8:	e005      	b.n	8005c06 <HAL_TIM_IRQHandler+0xf6>
 8005bfa:	6878      	ldr	r0, [r7, #4]
 8005bfc:	f000 fa01 	bl	8006002 <HAL_TIM_OC_DelayElapsedCallback>
 8005c00:	6878      	ldr	r0, [r7, #4]
 8005c02:	f000 fa12 	bl	800602a <HAL_TIM_PWM_PulseFinishedCallback>
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	2200      	movs	r2, #0
 8005c0a:	771a      	strb	r2, [r3, #28]
 8005c0c:	68bb      	ldr	r3, [r7, #8]
 8005c0e:	f003 0310 	and.w	r3, r3, #16
 8005c12:	2b00      	cmp	r3, #0
 8005c14:	d020      	beq.n	8005c58 <HAL_TIM_IRQHandler+0x148>
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	f003 0310 	and.w	r3, r3, #16
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d01b      	beq.n	8005c58 <HAL_TIM_IRQHandler+0x148>
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	f06f 0210 	mvn.w	r2, #16
 8005c28:	611a      	str	r2, [r3, #16]
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	2208      	movs	r2, #8
 8005c2e:	771a      	strb	r2, [r3, #28]
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	69db      	ldr	r3, [r3, #28]
 8005c36:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	d003      	beq.n	8005c46 <HAL_TIM_IRQHandler+0x136>
 8005c3e:	6878      	ldr	r0, [r7, #4]
 8005c40:	f000 f9e9 	bl	8006016 <HAL_TIM_IC_CaptureCallback>
 8005c44:	e005      	b.n	8005c52 <HAL_TIM_IRQHandler+0x142>
 8005c46:	6878      	ldr	r0, [r7, #4]
 8005c48:	f000 f9db 	bl	8006002 <HAL_TIM_OC_DelayElapsedCallback>
 8005c4c:	6878      	ldr	r0, [r7, #4]
 8005c4e:	f000 f9ec 	bl	800602a <HAL_TIM_PWM_PulseFinishedCallback>
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	2200      	movs	r2, #0
 8005c56:	771a      	strb	r2, [r3, #28]
 8005c58:	68bb      	ldr	r3, [r7, #8]
 8005c5a:	f003 0301 	and.w	r3, r3, #1
 8005c5e:	2b00      	cmp	r3, #0
 8005c60:	d00c      	beq.n	8005c7c <HAL_TIM_IRQHandler+0x16c>
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	f003 0301 	and.w	r3, r3, #1
 8005c68:	2b00      	cmp	r3, #0
 8005c6a:	d007      	beq.n	8005c7c <HAL_TIM_IRQHandler+0x16c>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	f06f 0201 	mvn.w	r2, #1
 8005c74:	611a      	str	r2, [r3, #16]
 8005c76:	6878      	ldr	r0, [r7, #4]
 8005c78:	f7fc fd54 	bl	8002724 <HAL_TIM_PeriodElapsedCallback>
 8005c7c:	68bb      	ldr	r3, [r7, #8]
 8005c7e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d00c      	beq.n	8005ca0 <HAL_TIM_IRQHandler+0x190>
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d007      	beq.n	8005ca0 <HAL_TIM_IRQHandler+0x190>
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	681b      	ldr	r3, [r3, #0]
 8005c94:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8005c98:	611a      	str	r2, [r3, #16]
 8005c9a:	6878      	ldr	r0, [r7, #4]
 8005c9c:	f000 fd7c 	bl	8006798 <HAL_TIMEx_BreakCallback>
 8005ca0:	68bb      	ldr	r3, [r7, #8]
 8005ca2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005ca6:	2b00      	cmp	r3, #0
 8005ca8:	d00c      	beq.n	8005cc4 <HAL_TIM_IRQHandler+0x1b4>
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005cb0:	2b00      	cmp	r3, #0
 8005cb2:	d007      	beq.n	8005cc4 <HAL_TIM_IRQHandler+0x1b4>
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8005cbc:	611a      	str	r2, [r3, #16]
 8005cbe:	6878      	ldr	r0, [r7, #4]
 8005cc0:	f000 f9bd 	bl	800603e <HAL_TIM_TriggerCallback>
 8005cc4:	68bb      	ldr	r3, [r7, #8]
 8005cc6:	f003 0320 	and.w	r3, r3, #32
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	d00c      	beq.n	8005ce8 <HAL_TIM_IRQHandler+0x1d8>
 8005cce:	68fb      	ldr	r3, [r7, #12]
 8005cd0:	f003 0320 	and.w	r3, r3, #32
 8005cd4:	2b00      	cmp	r3, #0
 8005cd6:	d007      	beq.n	8005ce8 <HAL_TIM_IRQHandler+0x1d8>
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	f06f 0220 	mvn.w	r2, #32
 8005ce0:	611a      	str	r2, [r3, #16]
 8005ce2:	6878      	ldr	r0, [r7, #4]
 8005ce4:	f000 fd4e 	bl	8006784 <HAL_TIMEx_CommutCallback>
 8005ce8:	bf00      	nop
 8005cea:	3710      	adds	r7, #16
 8005cec:	46bd      	mov	sp, r7
 8005cee:	bd80      	pop	{r7, pc}

08005cf0 <HAL_TIM_PWM_ConfigChannel>:
 8005cf0:	b580      	push	{r7, lr}
 8005cf2:	b086      	sub	sp, #24
 8005cf4:	af00      	add	r7, sp, #0
 8005cf6:	60f8      	str	r0, [r7, #12]
 8005cf8:	60b9      	str	r1, [r7, #8]
 8005cfa:	607a      	str	r2, [r7, #4]
 8005cfc:	2300      	movs	r3, #0
 8005cfe:	75fb      	strb	r3, [r7, #23]
 8005d00:	68fb      	ldr	r3, [r7, #12]
 8005d02:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005d06:	2b01      	cmp	r3, #1
 8005d08:	d101      	bne.n	8005d0e <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005d0a:	2302      	movs	r3, #2
 8005d0c:	e0ae      	b.n	8005e6c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8005d0e:	68fb      	ldr	r3, [r7, #12]
 8005d10:	2201      	movs	r2, #1
 8005d12:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	2b0c      	cmp	r3, #12
 8005d1a:	f200 809f 	bhi.w	8005e5c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8005d1e:	a201      	add	r2, pc, #4	@ (adr r2, 8005d24 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005d20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005d24:	08005d59 	.word	0x08005d59
 8005d28:	08005e5d 	.word	0x08005e5d
 8005d2c:	08005e5d 	.word	0x08005e5d
 8005d30:	08005e5d 	.word	0x08005e5d
 8005d34:	08005d99 	.word	0x08005d99
 8005d38:	08005e5d 	.word	0x08005e5d
 8005d3c:	08005e5d 	.word	0x08005e5d
 8005d40:	08005e5d 	.word	0x08005e5d
 8005d44:	08005ddb 	.word	0x08005ddb
 8005d48:	08005e5d 	.word	0x08005e5d
 8005d4c:	08005e5d 	.word	0x08005e5d
 8005d50:	08005e5d 	.word	0x08005e5d
 8005d54:	08005e1b 	.word	0x08005e1b
 8005d58:	68fb      	ldr	r3, [r7, #12]
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	68b9      	ldr	r1, [r7, #8]
 8005d5e:	4618      	mov	r0, r3
 8005d60:	f000 fa24 	bl	80061ac <TIM_OC1_SetConfig>
 8005d64:	68fb      	ldr	r3, [r7, #12]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	699a      	ldr	r2, [r3, #24]
 8005d6a:	68fb      	ldr	r3, [r7, #12]
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	f042 0208 	orr.w	r2, r2, #8
 8005d72:	619a      	str	r2, [r3, #24]
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	699a      	ldr	r2, [r3, #24]
 8005d7a:	68fb      	ldr	r3, [r7, #12]
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	f022 0204 	bic.w	r2, r2, #4
 8005d82:	619a      	str	r2, [r3, #24]
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	681b      	ldr	r3, [r3, #0]
 8005d88:	6999      	ldr	r1, [r3, #24]
 8005d8a:	68bb      	ldr	r3, [r7, #8]
 8005d8c:	691a      	ldr	r2, [r3, #16]
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	430a      	orrs	r2, r1
 8005d94:	619a      	str	r2, [r3, #24]
 8005d96:	e064      	b.n	8005e62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005d98:	68fb      	ldr	r3, [r7, #12]
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	68b9      	ldr	r1, [r7, #8]
 8005d9e:	4618      	mov	r0, r3
 8005da0:	f000 fa74 	bl	800628c <TIM_OC2_SetConfig>
 8005da4:	68fb      	ldr	r3, [r7, #12]
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	699a      	ldr	r2, [r3, #24]
 8005daa:	68fb      	ldr	r3, [r7, #12]
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005db2:	619a      	str	r2, [r3, #24]
 8005db4:	68fb      	ldr	r3, [r7, #12]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	699a      	ldr	r2, [r3, #24]
 8005dba:	68fb      	ldr	r3, [r7, #12]
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005dc2:	619a      	str	r2, [r3, #24]
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	6999      	ldr	r1, [r3, #24]
 8005dca:	68bb      	ldr	r3, [r7, #8]
 8005dcc:	691b      	ldr	r3, [r3, #16]
 8005dce:	021a      	lsls	r2, r3, #8
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	430a      	orrs	r2, r1
 8005dd6:	619a      	str	r2, [r3, #24]
 8005dd8:	e043      	b.n	8005e62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005dda:	68fb      	ldr	r3, [r7, #12]
 8005ddc:	681b      	ldr	r3, [r3, #0]
 8005dde:	68b9      	ldr	r1, [r7, #8]
 8005de0:	4618      	mov	r0, r3
 8005de2:	f000 fac9 	bl	8006378 <TIM_OC3_SetConfig>
 8005de6:	68fb      	ldr	r3, [r7, #12]
 8005de8:	681b      	ldr	r3, [r3, #0]
 8005dea:	69da      	ldr	r2, [r3, #28]
 8005dec:	68fb      	ldr	r3, [r7, #12]
 8005dee:	681b      	ldr	r3, [r3, #0]
 8005df0:	f042 0208 	orr.w	r2, r2, #8
 8005df4:	61da      	str	r2, [r3, #28]
 8005df6:	68fb      	ldr	r3, [r7, #12]
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	69da      	ldr	r2, [r3, #28]
 8005dfc:	68fb      	ldr	r3, [r7, #12]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	f022 0204 	bic.w	r2, r2, #4
 8005e04:	61da      	str	r2, [r3, #28]
 8005e06:	68fb      	ldr	r3, [r7, #12]
 8005e08:	681b      	ldr	r3, [r3, #0]
 8005e0a:	69d9      	ldr	r1, [r3, #28]
 8005e0c:	68bb      	ldr	r3, [r7, #8]
 8005e0e:	691a      	ldr	r2, [r3, #16]
 8005e10:	68fb      	ldr	r3, [r7, #12]
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	430a      	orrs	r2, r1
 8005e16:	61da      	str	r2, [r3, #28]
 8005e18:	e023      	b.n	8005e62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005e1a:	68fb      	ldr	r3, [r7, #12]
 8005e1c:	681b      	ldr	r3, [r3, #0]
 8005e1e:	68b9      	ldr	r1, [r7, #8]
 8005e20:	4618      	mov	r0, r3
 8005e22:	f000 fb1d 	bl	8006460 <TIM_OC4_SetConfig>
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	69da      	ldr	r2, [r3, #28]
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	681b      	ldr	r3, [r3, #0]
 8005e30:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005e34:	61da      	str	r2, [r3, #28]
 8005e36:	68fb      	ldr	r3, [r7, #12]
 8005e38:	681b      	ldr	r3, [r3, #0]
 8005e3a:	69da      	ldr	r2, [r3, #28]
 8005e3c:	68fb      	ldr	r3, [r7, #12]
 8005e3e:	681b      	ldr	r3, [r3, #0]
 8005e40:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005e44:	61da      	str	r2, [r3, #28]
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	69d9      	ldr	r1, [r3, #28]
 8005e4c:	68bb      	ldr	r3, [r7, #8]
 8005e4e:	691b      	ldr	r3, [r3, #16]
 8005e50:	021a      	lsls	r2, r3, #8
 8005e52:	68fb      	ldr	r3, [r7, #12]
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	430a      	orrs	r2, r1
 8005e58:	61da      	str	r2, [r3, #28]
 8005e5a:	e002      	b.n	8005e62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005e5c:	2301      	movs	r3, #1
 8005e5e:	75fb      	strb	r3, [r7, #23]
 8005e60:	bf00      	nop
 8005e62:	68fb      	ldr	r3, [r7, #12]
 8005e64:	2200      	movs	r2, #0
 8005e66:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e6a:	7dfb      	ldrb	r3, [r7, #23]
 8005e6c:	4618      	mov	r0, r3
 8005e6e:	3718      	adds	r7, #24
 8005e70:	46bd      	mov	sp, r7
 8005e72:	bd80      	pop	{r7, pc}

08005e74 <HAL_TIM_ConfigClockSource>:
 8005e74:	b580      	push	{r7, lr}
 8005e76:	b084      	sub	sp, #16
 8005e78:	af00      	add	r7, sp, #0
 8005e7a:	6078      	str	r0, [r7, #4]
 8005e7c:	6039      	str	r1, [r7, #0]
 8005e7e:	2300      	movs	r3, #0
 8005e80:	73fb      	strb	r3, [r7, #15]
 8005e82:	687b      	ldr	r3, [r7, #4]
 8005e84:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005e88:	2b01      	cmp	r3, #1
 8005e8a:	d101      	bne.n	8005e90 <HAL_TIM_ConfigClockSource+0x1c>
 8005e8c:	2302      	movs	r3, #2
 8005e8e:	e0b4      	b.n	8005ffa <HAL_TIM_ConfigClockSource+0x186>
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	2201      	movs	r2, #1
 8005e94:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	2202      	movs	r2, #2
 8005e9c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	689b      	ldr	r3, [r3, #8]
 8005ea6:	60bb      	str	r3, [r7, #8]
 8005ea8:	68bb      	ldr	r3, [r7, #8]
 8005eaa:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8005eae:	60bb      	str	r3, [r7, #8]
 8005eb0:	68bb      	ldr	r3, [r7, #8]
 8005eb2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005eb6:	60bb      	str	r3, [r7, #8]
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	681b      	ldr	r3, [r3, #0]
 8005ebc:	68ba      	ldr	r2, [r7, #8]
 8005ebe:	609a      	str	r2, [r3, #8]
 8005ec0:	683b      	ldr	r3, [r7, #0]
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005ec8:	d03e      	beq.n	8005f48 <HAL_TIM_ConfigClockSource+0xd4>
 8005eca:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005ece:	f200 8087 	bhi.w	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005ed2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005ed6:	f000 8086 	beq.w	8005fe6 <HAL_TIM_ConfigClockSource+0x172>
 8005eda:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005ede:	d87f      	bhi.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005ee0:	2b70      	cmp	r3, #112	@ 0x70
 8005ee2:	d01a      	beq.n	8005f1a <HAL_TIM_ConfigClockSource+0xa6>
 8005ee4:	2b70      	cmp	r3, #112	@ 0x70
 8005ee6:	d87b      	bhi.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005ee8:	2b60      	cmp	r3, #96	@ 0x60
 8005eea:	d050      	beq.n	8005f8e <HAL_TIM_ConfigClockSource+0x11a>
 8005eec:	2b60      	cmp	r3, #96	@ 0x60
 8005eee:	d877      	bhi.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005ef0:	2b50      	cmp	r3, #80	@ 0x50
 8005ef2:	d03c      	beq.n	8005f6e <HAL_TIM_ConfigClockSource+0xfa>
 8005ef4:	2b50      	cmp	r3, #80	@ 0x50
 8005ef6:	d873      	bhi.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005ef8:	2b40      	cmp	r3, #64	@ 0x40
 8005efa:	d058      	beq.n	8005fae <HAL_TIM_ConfigClockSource+0x13a>
 8005efc:	2b40      	cmp	r3, #64	@ 0x40
 8005efe:	d86f      	bhi.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005f00:	2b30      	cmp	r3, #48	@ 0x30
 8005f02:	d064      	beq.n	8005fce <HAL_TIM_ConfigClockSource+0x15a>
 8005f04:	2b30      	cmp	r3, #48	@ 0x30
 8005f06:	d86b      	bhi.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005f08:	2b20      	cmp	r3, #32
 8005f0a:	d060      	beq.n	8005fce <HAL_TIM_ConfigClockSource+0x15a>
 8005f0c:	2b20      	cmp	r3, #32
 8005f0e:	d867      	bhi.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	d05c      	beq.n	8005fce <HAL_TIM_ConfigClockSource+0x15a>
 8005f14:	2b10      	cmp	r3, #16
 8005f16:	d05a      	beq.n	8005fce <HAL_TIM_ConfigClockSource+0x15a>
 8005f18:	e062      	b.n	8005fe0 <HAL_TIM_ConfigClockSource+0x16c>
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	6818      	ldr	r0, [r3, #0]
 8005f1e:	683b      	ldr	r3, [r7, #0]
 8005f20:	6899      	ldr	r1, [r3, #8]
 8005f22:	683b      	ldr	r3, [r7, #0]
 8005f24:	685a      	ldr	r2, [r3, #4]
 8005f26:	683b      	ldr	r3, [r7, #0]
 8005f28:	68db      	ldr	r3, [r3, #12]
 8005f2a:	f000 fb69 	bl	8006600 <TIM_ETR_SetConfig>
 8005f2e:	687b      	ldr	r3, [r7, #4]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	689b      	ldr	r3, [r3, #8]
 8005f34:	60bb      	str	r3, [r7, #8]
 8005f36:	68bb      	ldr	r3, [r7, #8]
 8005f38:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005f3c:	60bb      	str	r3, [r7, #8]
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	68ba      	ldr	r2, [r7, #8]
 8005f44:	609a      	str	r2, [r3, #8]
 8005f46:	e04f      	b.n	8005fe8 <HAL_TIM_ConfigClockSource+0x174>
 8005f48:	687b      	ldr	r3, [r7, #4]
 8005f4a:	6818      	ldr	r0, [r3, #0]
 8005f4c:	683b      	ldr	r3, [r7, #0]
 8005f4e:	6899      	ldr	r1, [r3, #8]
 8005f50:	683b      	ldr	r3, [r7, #0]
 8005f52:	685a      	ldr	r2, [r3, #4]
 8005f54:	683b      	ldr	r3, [r7, #0]
 8005f56:	68db      	ldr	r3, [r3, #12]
 8005f58:	f000 fb52 	bl	8006600 <TIM_ETR_SetConfig>
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	689a      	ldr	r2, [r3, #8]
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005f6a:	609a      	str	r2, [r3, #8]
 8005f6c:	e03c      	b.n	8005fe8 <HAL_TIM_ConfigClockSource+0x174>
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	6818      	ldr	r0, [r3, #0]
 8005f72:	683b      	ldr	r3, [r7, #0]
 8005f74:	6859      	ldr	r1, [r3, #4]
 8005f76:	683b      	ldr	r3, [r7, #0]
 8005f78:	68db      	ldr	r3, [r3, #12]
 8005f7a:	461a      	mov	r2, r3
 8005f7c:	f000 fac6 	bl	800650c <TIM_TI1_ConfigInputStage>
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	2150      	movs	r1, #80	@ 0x50
 8005f86:	4618      	mov	r0, r3
 8005f88:	f000 fb1f 	bl	80065ca <TIM_ITRx_SetConfig>
 8005f8c:	e02c      	b.n	8005fe8 <HAL_TIM_ConfigClockSource+0x174>
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	6818      	ldr	r0, [r3, #0]
 8005f92:	683b      	ldr	r3, [r7, #0]
 8005f94:	6859      	ldr	r1, [r3, #4]
 8005f96:	683b      	ldr	r3, [r7, #0]
 8005f98:	68db      	ldr	r3, [r3, #12]
 8005f9a:	461a      	mov	r2, r3
 8005f9c:	f000 fae5 	bl	800656a <TIM_TI2_ConfigInputStage>
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	2160      	movs	r1, #96	@ 0x60
 8005fa6:	4618      	mov	r0, r3
 8005fa8:	f000 fb0f 	bl	80065ca <TIM_ITRx_SetConfig>
 8005fac:	e01c      	b.n	8005fe8 <HAL_TIM_ConfigClockSource+0x174>
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	6818      	ldr	r0, [r3, #0]
 8005fb2:	683b      	ldr	r3, [r7, #0]
 8005fb4:	6859      	ldr	r1, [r3, #4]
 8005fb6:	683b      	ldr	r3, [r7, #0]
 8005fb8:	68db      	ldr	r3, [r3, #12]
 8005fba:	461a      	mov	r2, r3
 8005fbc:	f000 faa6 	bl	800650c <TIM_TI1_ConfigInputStage>
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	2140      	movs	r1, #64	@ 0x40
 8005fc6:	4618      	mov	r0, r3
 8005fc8:	f000 faff 	bl	80065ca <TIM_ITRx_SetConfig>
 8005fcc:	e00c      	b.n	8005fe8 <HAL_TIM_ConfigClockSource+0x174>
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	681a      	ldr	r2, [r3, #0]
 8005fd2:	683b      	ldr	r3, [r7, #0]
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	4619      	mov	r1, r3
 8005fd8:	4610      	mov	r0, r2
 8005fda:	f000 faf6 	bl	80065ca <TIM_ITRx_SetConfig>
 8005fde:	e003      	b.n	8005fe8 <HAL_TIM_ConfigClockSource+0x174>
 8005fe0:	2301      	movs	r3, #1
 8005fe2:	73fb      	strb	r3, [r7, #15]
 8005fe4:	e000      	b.n	8005fe8 <HAL_TIM_ConfigClockSource+0x174>
 8005fe6:	bf00      	nop
 8005fe8:	687b      	ldr	r3, [r7, #4]
 8005fea:	2201      	movs	r2, #1
 8005fec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	2200      	movs	r2, #0
 8005ff4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005ff8:	7bfb      	ldrb	r3, [r7, #15]
 8005ffa:	4618      	mov	r0, r3
 8005ffc:	3710      	adds	r7, #16
 8005ffe:	46bd      	mov	sp, r7
 8006000:	bd80      	pop	{r7, pc}

08006002 <HAL_TIM_OC_DelayElapsedCallback>:
 8006002:	b480      	push	{r7}
 8006004:	b083      	sub	sp, #12
 8006006:	af00      	add	r7, sp, #0
 8006008:	6078      	str	r0, [r7, #4]
 800600a:	bf00      	nop
 800600c:	370c      	adds	r7, #12
 800600e:	46bd      	mov	sp, r7
 8006010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006014:	4770      	bx	lr

08006016 <HAL_TIM_IC_CaptureCallback>:
 8006016:	b480      	push	{r7}
 8006018:	b083      	sub	sp, #12
 800601a:	af00      	add	r7, sp, #0
 800601c:	6078      	str	r0, [r7, #4]
 800601e:	bf00      	nop
 8006020:	370c      	adds	r7, #12
 8006022:	46bd      	mov	sp, r7
 8006024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006028:	4770      	bx	lr

0800602a <HAL_TIM_PWM_PulseFinishedCallback>:
 800602a:	b480      	push	{r7}
 800602c:	b083      	sub	sp, #12
 800602e:	af00      	add	r7, sp, #0
 8006030:	6078      	str	r0, [r7, #4]
 8006032:	bf00      	nop
 8006034:	370c      	adds	r7, #12
 8006036:	46bd      	mov	sp, r7
 8006038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800603c:	4770      	bx	lr

0800603e <HAL_TIM_TriggerCallback>:
 800603e:	b480      	push	{r7}
 8006040:	b083      	sub	sp, #12
 8006042:	af00      	add	r7, sp, #0
 8006044:	6078      	str	r0, [r7, #4]
 8006046:	bf00      	nop
 8006048:	370c      	adds	r7, #12
 800604a:	46bd      	mov	sp, r7
 800604c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006050:	4770      	bx	lr
	...

08006054 <TIM_Base_SetConfig>:
 8006054:	b480      	push	{r7}
 8006056:	b085      	sub	sp, #20
 8006058:	af00      	add	r7, sp, #0
 800605a:	6078      	str	r0, [r7, #4]
 800605c:	6039      	str	r1, [r7, #0]
 800605e:	687b      	ldr	r3, [r7, #4]
 8006060:	681b      	ldr	r3, [r3, #0]
 8006062:	60fb      	str	r3, [r7, #12]
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	4a46      	ldr	r2, [pc, #280]	@ (8006180 <TIM_Base_SetConfig+0x12c>)
 8006068:	4293      	cmp	r3, r2
 800606a:	d013      	beq.n	8006094 <TIM_Base_SetConfig+0x40>
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006072:	d00f      	beq.n	8006094 <TIM_Base_SetConfig+0x40>
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	4a43      	ldr	r2, [pc, #268]	@ (8006184 <TIM_Base_SetConfig+0x130>)
 8006078:	4293      	cmp	r3, r2
 800607a:	d00b      	beq.n	8006094 <TIM_Base_SetConfig+0x40>
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	4a42      	ldr	r2, [pc, #264]	@ (8006188 <TIM_Base_SetConfig+0x134>)
 8006080:	4293      	cmp	r3, r2
 8006082:	d007      	beq.n	8006094 <TIM_Base_SetConfig+0x40>
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	4a41      	ldr	r2, [pc, #260]	@ (800618c <TIM_Base_SetConfig+0x138>)
 8006088:	4293      	cmp	r3, r2
 800608a:	d003      	beq.n	8006094 <TIM_Base_SetConfig+0x40>
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	4a40      	ldr	r2, [pc, #256]	@ (8006190 <TIM_Base_SetConfig+0x13c>)
 8006090:	4293      	cmp	r3, r2
 8006092:	d108      	bne.n	80060a6 <TIM_Base_SetConfig+0x52>
 8006094:	68fb      	ldr	r3, [r7, #12]
 8006096:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800609a:	60fb      	str	r3, [r7, #12]
 800609c:	683b      	ldr	r3, [r7, #0]
 800609e:	685b      	ldr	r3, [r3, #4]
 80060a0:	68fa      	ldr	r2, [r7, #12]
 80060a2:	4313      	orrs	r3, r2
 80060a4:	60fb      	str	r3, [r7, #12]
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	4a35      	ldr	r2, [pc, #212]	@ (8006180 <TIM_Base_SetConfig+0x12c>)
 80060aa:	4293      	cmp	r3, r2
 80060ac:	d02b      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80060b4:	d027      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	4a32      	ldr	r2, [pc, #200]	@ (8006184 <TIM_Base_SetConfig+0x130>)
 80060ba:	4293      	cmp	r3, r2
 80060bc:	d023      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	4a31      	ldr	r2, [pc, #196]	@ (8006188 <TIM_Base_SetConfig+0x134>)
 80060c2:	4293      	cmp	r3, r2
 80060c4:	d01f      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	4a30      	ldr	r2, [pc, #192]	@ (800618c <TIM_Base_SetConfig+0x138>)
 80060ca:	4293      	cmp	r3, r2
 80060cc:	d01b      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	4a2f      	ldr	r2, [pc, #188]	@ (8006190 <TIM_Base_SetConfig+0x13c>)
 80060d2:	4293      	cmp	r3, r2
 80060d4:	d017      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	4a2e      	ldr	r2, [pc, #184]	@ (8006194 <TIM_Base_SetConfig+0x140>)
 80060da:	4293      	cmp	r3, r2
 80060dc:	d013      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	4a2d      	ldr	r2, [pc, #180]	@ (8006198 <TIM_Base_SetConfig+0x144>)
 80060e2:	4293      	cmp	r3, r2
 80060e4:	d00f      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	4a2c      	ldr	r2, [pc, #176]	@ (800619c <TIM_Base_SetConfig+0x148>)
 80060ea:	4293      	cmp	r3, r2
 80060ec:	d00b      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	4a2b      	ldr	r2, [pc, #172]	@ (80061a0 <TIM_Base_SetConfig+0x14c>)
 80060f2:	4293      	cmp	r3, r2
 80060f4:	d007      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	4a2a      	ldr	r2, [pc, #168]	@ (80061a4 <TIM_Base_SetConfig+0x150>)
 80060fa:	4293      	cmp	r3, r2
 80060fc:	d003      	beq.n	8006106 <TIM_Base_SetConfig+0xb2>
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	4a29      	ldr	r2, [pc, #164]	@ (80061a8 <TIM_Base_SetConfig+0x154>)
 8006102:	4293      	cmp	r3, r2
 8006104:	d108      	bne.n	8006118 <TIM_Base_SetConfig+0xc4>
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800610c:	60fb      	str	r3, [r7, #12]
 800610e:	683b      	ldr	r3, [r7, #0]
 8006110:	68db      	ldr	r3, [r3, #12]
 8006112:	68fa      	ldr	r2, [r7, #12]
 8006114:	4313      	orrs	r3, r2
 8006116:	60fb      	str	r3, [r7, #12]
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800611e:	683b      	ldr	r3, [r7, #0]
 8006120:	695b      	ldr	r3, [r3, #20]
 8006122:	4313      	orrs	r3, r2
 8006124:	60fb      	str	r3, [r7, #12]
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	68fa      	ldr	r2, [r7, #12]
 800612a:	601a      	str	r2, [r3, #0]
 800612c:	683b      	ldr	r3, [r7, #0]
 800612e:	689a      	ldr	r2, [r3, #8]
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006134:	683b      	ldr	r3, [r7, #0]
 8006136:	681a      	ldr	r2, [r3, #0]
 8006138:	687b      	ldr	r3, [r7, #4]
 800613a:	629a      	str	r2, [r3, #40]	@ 0x28
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	4a10      	ldr	r2, [pc, #64]	@ (8006180 <TIM_Base_SetConfig+0x12c>)
 8006140:	4293      	cmp	r3, r2
 8006142:	d003      	beq.n	800614c <TIM_Base_SetConfig+0xf8>
 8006144:	687b      	ldr	r3, [r7, #4]
 8006146:	4a12      	ldr	r2, [pc, #72]	@ (8006190 <TIM_Base_SetConfig+0x13c>)
 8006148:	4293      	cmp	r3, r2
 800614a:	d103      	bne.n	8006154 <TIM_Base_SetConfig+0x100>
 800614c:	683b      	ldr	r3, [r7, #0]
 800614e:	691a      	ldr	r2, [r3, #16]
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	631a      	str	r2, [r3, #48]	@ 0x30
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	2201      	movs	r2, #1
 8006158:	615a      	str	r2, [r3, #20]
 800615a:	687b      	ldr	r3, [r7, #4]
 800615c:	691b      	ldr	r3, [r3, #16]
 800615e:	f003 0301 	and.w	r3, r3, #1
 8006162:	2b01      	cmp	r3, #1
 8006164:	d105      	bne.n	8006172 <TIM_Base_SetConfig+0x11e>
 8006166:	687b      	ldr	r3, [r7, #4]
 8006168:	691b      	ldr	r3, [r3, #16]
 800616a:	f023 0201 	bic.w	r2, r3, #1
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	611a      	str	r2, [r3, #16]
 8006172:	bf00      	nop
 8006174:	3714      	adds	r7, #20
 8006176:	46bd      	mov	sp, r7
 8006178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800617c:	4770      	bx	lr
 800617e:	bf00      	nop
 8006180:	40010000 	.word	0x40010000
 8006184:	40000400 	.word	0x40000400
 8006188:	40000800 	.word	0x40000800
 800618c:	40000c00 	.word	0x40000c00
 8006190:	40010400 	.word	0x40010400
 8006194:	40014000 	.word	0x40014000
 8006198:	40014400 	.word	0x40014400
 800619c:	40014800 	.word	0x40014800
 80061a0:	40001800 	.word	0x40001800
 80061a4:	40001c00 	.word	0x40001c00
 80061a8:	40002000 	.word	0x40002000

080061ac <TIM_OC1_SetConfig>:
 80061ac:	b480      	push	{r7}
 80061ae:	b087      	sub	sp, #28
 80061b0:	af00      	add	r7, sp, #0
 80061b2:	6078      	str	r0, [r7, #4]
 80061b4:	6039      	str	r1, [r7, #0]
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	6a1b      	ldr	r3, [r3, #32]
 80061ba:	617b      	str	r3, [r7, #20]
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	6a1b      	ldr	r3, [r3, #32]
 80061c0:	f023 0201 	bic.w	r2, r3, #1
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	621a      	str	r2, [r3, #32]
 80061c8:	687b      	ldr	r3, [r7, #4]
 80061ca:	685b      	ldr	r3, [r3, #4]
 80061cc:	613b      	str	r3, [r7, #16]
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	699b      	ldr	r3, [r3, #24]
 80061d2:	60fb      	str	r3, [r7, #12]
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80061da:	60fb      	str	r3, [r7, #12]
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	f023 0303 	bic.w	r3, r3, #3
 80061e2:	60fb      	str	r3, [r7, #12]
 80061e4:	683b      	ldr	r3, [r7, #0]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	68fa      	ldr	r2, [r7, #12]
 80061ea:	4313      	orrs	r3, r2
 80061ec:	60fb      	str	r3, [r7, #12]
 80061ee:	697b      	ldr	r3, [r7, #20]
 80061f0:	f023 0302 	bic.w	r3, r3, #2
 80061f4:	617b      	str	r3, [r7, #20]
 80061f6:	683b      	ldr	r3, [r7, #0]
 80061f8:	689b      	ldr	r3, [r3, #8]
 80061fa:	697a      	ldr	r2, [r7, #20]
 80061fc:	4313      	orrs	r3, r2
 80061fe:	617b      	str	r3, [r7, #20]
 8006200:	687b      	ldr	r3, [r7, #4]
 8006202:	4a20      	ldr	r2, [pc, #128]	@ (8006284 <TIM_OC1_SetConfig+0xd8>)
 8006204:	4293      	cmp	r3, r2
 8006206:	d003      	beq.n	8006210 <TIM_OC1_SetConfig+0x64>
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	4a1f      	ldr	r2, [pc, #124]	@ (8006288 <TIM_OC1_SetConfig+0xdc>)
 800620c:	4293      	cmp	r3, r2
 800620e:	d10c      	bne.n	800622a <TIM_OC1_SetConfig+0x7e>
 8006210:	697b      	ldr	r3, [r7, #20]
 8006212:	f023 0308 	bic.w	r3, r3, #8
 8006216:	617b      	str	r3, [r7, #20]
 8006218:	683b      	ldr	r3, [r7, #0]
 800621a:	68db      	ldr	r3, [r3, #12]
 800621c:	697a      	ldr	r2, [r7, #20]
 800621e:	4313      	orrs	r3, r2
 8006220:	617b      	str	r3, [r7, #20]
 8006222:	697b      	ldr	r3, [r7, #20]
 8006224:	f023 0304 	bic.w	r3, r3, #4
 8006228:	617b      	str	r3, [r7, #20]
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	4a15      	ldr	r2, [pc, #84]	@ (8006284 <TIM_OC1_SetConfig+0xd8>)
 800622e:	4293      	cmp	r3, r2
 8006230:	d003      	beq.n	800623a <TIM_OC1_SetConfig+0x8e>
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	4a14      	ldr	r2, [pc, #80]	@ (8006288 <TIM_OC1_SetConfig+0xdc>)
 8006236:	4293      	cmp	r3, r2
 8006238:	d111      	bne.n	800625e <TIM_OC1_SetConfig+0xb2>
 800623a:	693b      	ldr	r3, [r7, #16]
 800623c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006240:	613b      	str	r3, [r7, #16]
 8006242:	693b      	ldr	r3, [r7, #16]
 8006244:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006248:	613b      	str	r3, [r7, #16]
 800624a:	683b      	ldr	r3, [r7, #0]
 800624c:	695b      	ldr	r3, [r3, #20]
 800624e:	693a      	ldr	r2, [r7, #16]
 8006250:	4313      	orrs	r3, r2
 8006252:	613b      	str	r3, [r7, #16]
 8006254:	683b      	ldr	r3, [r7, #0]
 8006256:	699b      	ldr	r3, [r3, #24]
 8006258:	693a      	ldr	r2, [r7, #16]
 800625a:	4313      	orrs	r3, r2
 800625c:	613b      	str	r3, [r7, #16]
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	693a      	ldr	r2, [r7, #16]
 8006262:	605a      	str	r2, [r3, #4]
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	68fa      	ldr	r2, [r7, #12]
 8006268:	619a      	str	r2, [r3, #24]
 800626a:	683b      	ldr	r3, [r7, #0]
 800626c:	685a      	ldr	r2, [r3, #4]
 800626e:	687b      	ldr	r3, [r7, #4]
 8006270:	635a      	str	r2, [r3, #52]	@ 0x34
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	697a      	ldr	r2, [r7, #20]
 8006276:	621a      	str	r2, [r3, #32]
 8006278:	bf00      	nop
 800627a:	371c      	adds	r7, #28
 800627c:	46bd      	mov	sp, r7
 800627e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006282:	4770      	bx	lr
 8006284:	40010000 	.word	0x40010000
 8006288:	40010400 	.word	0x40010400

0800628c <TIM_OC2_SetConfig>:
 800628c:	b480      	push	{r7}
 800628e:	b087      	sub	sp, #28
 8006290:	af00      	add	r7, sp, #0
 8006292:	6078      	str	r0, [r7, #4]
 8006294:	6039      	str	r1, [r7, #0]
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	6a1b      	ldr	r3, [r3, #32]
 800629a:	617b      	str	r3, [r7, #20]
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	6a1b      	ldr	r3, [r3, #32]
 80062a0:	f023 0210 	bic.w	r2, r3, #16
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	621a      	str	r2, [r3, #32]
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	685b      	ldr	r3, [r3, #4]
 80062ac:	613b      	str	r3, [r7, #16]
 80062ae:	687b      	ldr	r3, [r7, #4]
 80062b0:	699b      	ldr	r3, [r3, #24]
 80062b2:	60fb      	str	r3, [r7, #12]
 80062b4:	68fb      	ldr	r3, [r7, #12]
 80062b6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80062ba:	60fb      	str	r3, [r7, #12]
 80062bc:	68fb      	ldr	r3, [r7, #12]
 80062be:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80062c2:	60fb      	str	r3, [r7, #12]
 80062c4:	683b      	ldr	r3, [r7, #0]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	021b      	lsls	r3, r3, #8
 80062ca:	68fa      	ldr	r2, [r7, #12]
 80062cc:	4313      	orrs	r3, r2
 80062ce:	60fb      	str	r3, [r7, #12]
 80062d0:	697b      	ldr	r3, [r7, #20]
 80062d2:	f023 0320 	bic.w	r3, r3, #32
 80062d6:	617b      	str	r3, [r7, #20]
 80062d8:	683b      	ldr	r3, [r7, #0]
 80062da:	689b      	ldr	r3, [r3, #8]
 80062dc:	011b      	lsls	r3, r3, #4
 80062de:	697a      	ldr	r2, [r7, #20]
 80062e0:	4313      	orrs	r3, r2
 80062e2:	617b      	str	r3, [r7, #20]
 80062e4:	687b      	ldr	r3, [r7, #4]
 80062e6:	4a22      	ldr	r2, [pc, #136]	@ (8006370 <TIM_OC2_SetConfig+0xe4>)
 80062e8:	4293      	cmp	r3, r2
 80062ea:	d003      	beq.n	80062f4 <TIM_OC2_SetConfig+0x68>
 80062ec:	687b      	ldr	r3, [r7, #4]
 80062ee:	4a21      	ldr	r2, [pc, #132]	@ (8006374 <TIM_OC2_SetConfig+0xe8>)
 80062f0:	4293      	cmp	r3, r2
 80062f2:	d10d      	bne.n	8006310 <TIM_OC2_SetConfig+0x84>
 80062f4:	697b      	ldr	r3, [r7, #20]
 80062f6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80062fa:	617b      	str	r3, [r7, #20]
 80062fc:	683b      	ldr	r3, [r7, #0]
 80062fe:	68db      	ldr	r3, [r3, #12]
 8006300:	011b      	lsls	r3, r3, #4
 8006302:	697a      	ldr	r2, [r7, #20]
 8006304:	4313      	orrs	r3, r2
 8006306:	617b      	str	r3, [r7, #20]
 8006308:	697b      	ldr	r3, [r7, #20]
 800630a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800630e:	617b      	str	r3, [r7, #20]
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	4a17      	ldr	r2, [pc, #92]	@ (8006370 <TIM_OC2_SetConfig+0xe4>)
 8006314:	4293      	cmp	r3, r2
 8006316:	d003      	beq.n	8006320 <TIM_OC2_SetConfig+0x94>
 8006318:	687b      	ldr	r3, [r7, #4]
 800631a:	4a16      	ldr	r2, [pc, #88]	@ (8006374 <TIM_OC2_SetConfig+0xe8>)
 800631c:	4293      	cmp	r3, r2
 800631e:	d113      	bne.n	8006348 <TIM_OC2_SetConfig+0xbc>
 8006320:	693b      	ldr	r3, [r7, #16]
 8006322:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006326:	613b      	str	r3, [r7, #16]
 8006328:	693b      	ldr	r3, [r7, #16]
 800632a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800632e:	613b      	str	r3, [r7, #16]
 8006330:	683b      	ldr	r3, [r7, #0]
 8006332:	695b      	ldr	r3, [r3, #20]
 8006334:	009b      	lsls	r3, r3, #2
 8006336:	693a      	ldr	r2, [r7, #16]
 8006338:	4313      	orrs	r3, r2
 800633a:	613b      	str	r3, [r7, #16]
 800633c:	683b      	ldr	r3, [r7, #0]
 800633e:	699b      	ldr	r3, [r3, #24]
 8006340:	009b      	lsls	r3, r3, #2
 8006342:	693a      	ldr	r2, [r7, #16]
 8006344:	4313      	orrs	r3, r2
 8006346:	613b      	str	r3, [r7, #16]
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	693a      	ldr	r2, [r7, #16]
 800634c:	605a      	str	r2, [r3, #4]
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	68fa      	ldr	r2, [r7, #12]
 8006352:	619a      	str	r2, [r3, #24]
 8006354:	683b      	ldr	r3, [r7, #0]
 8006356:	685a      	ldr	r2, [r3, #4]
 8006358:	687b      	ldr	r3, [r7, #4]
 800635a:	639a      	str	r2, [r3, #56]	@ 0x38
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	697a      	ldr	r2, [r7, #20]
 8006360:	621a      	str	r2, [r3, #32]
 8006362:	bf00      	nop
 8006364:	371c      	adds	r7, #28
 8006366:	46bd      	mov	sp, r7
 8006368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800636c:	4770      	bx	lr
 800636e:	bf00      	nop
 8006370:	40010000 	.word	0x40010000
 8006374:	40010400 	.word	0x40010400

08006378 <TIM_OC3_SetConfig>:
 8006378:	b480      	push	{r7}
 800637a:	b087      	sub	sp, #28
 800637c:	af00      	add	r7, sp, #0
 800637e:	6078      	str	r0, [r7, #4]
 8006380:	6039      	str	r1, [r7, #0]
 8006382:	687b      	ldr	r3, [r7, #4]
 8006384:	6a1b      	ldr	r3, [r3, #32]
 8006386:	617b      	str	r3, [r7, #20]
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	6a1b      	ldr	r3, [r3, #32]
 800638c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006390:	687b      	ldr	r3, [r7, #4]
 8006392:	621a      	str	r2, [r3, #32]
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	685b      	ldr	r3, [r3, #4]
 8006398:	613b      	str	r3, [r7, #16]
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	69db      	ldr	r3, [r3, #28]
 800639e:	60fb      	str	r3, [r7, #12]
 80063a0:	68fb      	ldr	r3, [r7, #12]
 80063a2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80063a6:	60fb      	str	r3, [r7, #12]
 80063a8:	68fb      	ldr	r3, [r7, #12]
 80063aa:	f023 0303 	bic.w	r3, r3, #3
 80063ae:	60fb      	str	r3, [r7, #12]
 80063b0:	683b      	ldr	r3, [r7, #0]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	68fa      	ldr	r2, [r7, #12]
 80063b6:	4313      	orrs	r3, r2
 80063b8:	60fb      	str	r3, [r7, #12]
 80063ba:	697b      	ldr	r3, [r7, #20]
 80063bc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80063c0:	617b      	str	r3, [r7, #20]
 80063c2:	683b      	ldr	r3, [r7, #0]
 80063c4:	689b      	ldr	r3, [r3, #8]
 80063c6:	021b      	lsls	r3, r3, #8
 80063c8:	697a      	ldr	r2, [r7, #20]
 80063ca:	4313      	orrs	r3, r2
 80063cc:	617b      	str	r3, [r7, #20]
 80063ce:	687b      	ldr	r3, [r7, #4]
 80063d0:	4a21      	ldr	r2, [pc, #132]	@ (8006458 <TIM_OC3_SetConfig+0xe0>)
 80063d2:	4293      	cmp	r3, r2
 80063d4:	d003      	beq.n	80063de <TIM_OC3_SetConfig+0x66>
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	4a20      	ldr	r2, [pc, #128]	@ (800645c <TIM_OC3_SetConfig+0xe4>)
 80063da:	4293      	cmp	r3, r2
 80063dc:	d10d      	bne.n	80063fa <TIM_OC3_SetConfig+0x82>
 80063de:	697b      	ldr	r3, [r7, #20]
 80063e0:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80063e4:	617b      	str	r3, [r7, #20]
 80063e6:	683b      	ldr	r3, [r7, #0]
 80063e8:	68db      	ldr	r3, [r3, #12]
 80063ea:	021b      	lsls	r3, r3, #8
 80063ec:	697a      	ldr	r2, [r7, #20]
 80063ee:	4313      	orrs	r3, r2
 80063f0:	617b      	str	r3, [r7, #20]
 80063f2:	697b      	ldr	r3, [r7, #20]
 80063f4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80063f8:	617b      	str	r3, [r7, #20]
 80063fa:	687b      	ldr	r3, [r7, #4]
 80063fc:	4a16      	ldr	r2, [pc, #88]	@ (8006458 <TIM_OC3_SetConfig+0xe0>)
 80063fe:	4293      	cmp	r3, r2
 8006400:	d003      	beq.n	800640a <TIM_OC3_SetConfig+0x92>
 8006402:	687b      	ldr	r3, [r7, #4]
 8006404:	4a15      	ldr	r2, [pc, #84]	@ (800645c <TIM_OC3_SetConfig+0xe4>)
 8006406:	4293      	cmp	r3, r2
 8006408:	d113      	bne.n	8006432 <TIM_OC3_SetConfig+0xba>
 800640a:	693b      	ldr	r3, [r7, #16]
 800640c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006410:	613b      	str	r3, [r7, #16]
 8006412:	693b      	ldr	r3, [r7, #16]
 8006414:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006418:	613b      	str	r3, [r7, #16]
 800641a:	683b      	ldr	r3, [r7, #0]
 800641c:	695b      	ldr	r3, [r3, #20]
 800641e:	011b      	lsls	r3, r3, #4
 8006420:	693a      	ldr	r2, [r7, #16]
 8006422:	4313      	orrs	r3, r2
 8006424:	613b      	str	r3, [r7, #16]
 8006426:	683b      	ldr	r3, [r7, #0]
 8006428:	699b      	ldr	r3, [r3, #24]
 800642a:	011b      	lsls	r3, r3, #4
 800642c:	693a      	ldr	r2, [r7, #16]
 800642e:	4313      	orrs	r3, r2
 8006430:	613b      	str	r3, [r7, #16]
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	693a      	ldr	r2, [r7, #16]
 8006436:	605a      	str	r2, [r3, #4]
 8006438:	687b      	ldr	r3, [r7, #4]
 800643a:	68fa      	ldr	r2, [r7, #12]
 800643c:	61da      	str	r2, [r3, #28]
 800643e:	683b      	ldr	r3, [r7, #0]
 8006440:	685a      	ldr	r2, [r3, #4]
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006446:	687b      	ldr	r3, [r7, #4]
 8006448:	697a      	ldr	r2, [r7, #20]
 800644a:	621a      	str	r2, [r3, #32]
 800644c:	bf00      	nop
 800644e:	371c      	adds	r7, #28
 8006450:	46bd      	mov	sp, r7
 8006452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006456:	4770      	bx	lr
 8006458:	40010000 	.word	0x40010000
 800645c:	40010400 	.word	0x40010400

08006460 <TIM_OC4_SetConfig>:
 8006460:	b480      	push	{r7}
 8006462:	b087      	sub	sp, #28
 8006464:	af00      	add	r7, sp, #0
 8006466:	6078      	str	r0, [r7, #4]
 8006468:	6039      	str	r1, [r7, #0]
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	6a1b      	ldr	r3, [r3, #32]
 800646e:	613b      	str	r3, [r7, #16]
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	6a1b      	ldr	r3, [r3, #32]
 8006474:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	621a      	str	r2, [r3, #32]
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	685b      	ldr	r3, [r3, #4]
 8006480:	617b      	str	r3, [r7, #20]
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	69db      	ldr	r3, [r3, #28]
 8006486:	60fb      	str	r3, [r7, #12]
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800648e:	60fb      	str	r3, [r7, #12]
 8006490:	68fb      	ldr	r3, [r7, #12]
 8006492:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006496:	60fb      	str	r3, [r7, #12]
 8006498:	683b      	ldr	r3, [r7, #0]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	021b      	lsls	r3, r3, #8
 800649e:	68fa      	ldr	r2, [r7, #12]
 80064a0:	4313      	orrs	r3, r2
 80064a2:	60fb      	str	r3, [r7, #12]
 80064a4:	693b      	ldr	r3, [r7, #16]
 80064a6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80064aa:	613b      	str	r3, [r7, #16]
 80064ac:	683b      	ldr	r3, [r7, #0]
 80064ae:	689b      	ldr	r3, [r3, #8]
 80064b0:	031b      	lsls	r3, r3, #12
 80064b2:	693a      	ldr	r2, [r7, #16]
 80064b4:	4313      	orrs	r3, r2
 80064b6:	613b      	str	r3, [r7, #16]
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	4a12      	ldr	r2, [pc, #72]	@ (8006504 <TIM_OC4_SetConfig+0xa4>)
 80064bc:	4293      	cmp	r3, r2
 80064be:	d003      	beq.n	80064c8 <TIM_OC4_SetConfig+0x68>
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	4a11      	ldr	r2, [pc, #68]	@ (8006508 <TIM_OC4_SetConfig+0xa8>)
 80064c4:	4293      	cmp	r3, r2
 80064c6:	d109      	bne.n	80064dc <TIM_OC4_SetConfig+0x7c>
 80064c8:	697b      	ldr	r3, [r7, #20]
 80064ca:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80064ce:	617b      	str	r3, [r7, #20]
 80064d0:	683b      	ldr	r3, [r7, #0]
 80064d2:	695b      	ldr	r3, [r3, #20]
 80064d4:	019b      	lsls	r3, r3, #6
 80064d6:	697a      	ldr	r2, [r7, #20]
 80064d8:	4313      	orrs	r3, r2
 80064da:	617b      	str	r3, [r7, #20]
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	697a      	ldr	r2, [r7, #20]
 80064e0:	605a      	str	r2, [r3, #4]
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	68fa      	ldr	r2, [r7, #12]
 80064e6:	61da      	str	r2, [r3, #28]
 80064e8:	683b      	ldr	r3, [r7, #0]
 80064ea:	685a      	ldr	r2, [r3, #4]
 80064ec:	687b      	ldr	r3, [r7, #4]
 80064ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	693a      	ldr	r2, [r7, #16]
 80064f4:	621a      	str	r2, [r3, #32]
 80064f6:	bf00      	nop
 80064f8:	371c      	adds	r7, #28
 80064fa:	46bd      	mov	sp, r7
 80064fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006500:	4770      	bx	lr
 8006502:	bf00      	nop
 8006504:	40010000 	.word	0x40010000
 8006508:	40010400 	.word	0x40010400

0800650c <TIM_TI1_ConfigInputStage>:
 800650c:	b480      	push	{r7}
 800650e:	b087      	sub	sp, #28
 8006510:	af00      	add	r7, sp, #0
 8006512:	60f8      	str	r0, [r7, #12]
 8006514:	60b9      	str	r1, [r7, #8]
 8006516:	607a      	str	r2, [r7, #4]
 8006518:	68fb      	ldr	r3, [r7, #12]
 800651a:	6a1b      	ldr	r3, [r3, #32]
 800651c:	617b      	str	r3, [r7, #20]
 800651e:	68fb      	ldr	r3, [r7, #12]
 8006520:	6a1b      	ldr	r3, [r3, #32]
 8006522:	f023 0201 	bic.w	r2, r3, #1
 8006526:	68fb      	ldr	r3, [r7, #12]
 8006528:	621a      	str	r2, [r3, #32]
 800652a:	68fb      	ldr	r3, [r7, #12]
 800652c:	699b      	ldr	r3, [r3, #24]
 800652e:	613b      	str	r3, [r7, #16]
 8006530:	693b      	ldr	r3, [r7, #16]
 8006532:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006536:	613b      	str	r3, [r7, #16]
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	011b      	lsls	r3, r3, #4
 800653c:	693a      	ldr	r2, [r7, #16]
 800653e:	4313      	orrs	r3, r2
 8006540:	613b      	str	r3, [r7, #16]
 8006542:	697b      	ldr	r3, [r7, #20]
 8006544:	f023 030a 	bic.w	r3, r3, #10
 8006548:	617b      	str	r3, [r7, #20]
 800654a:	697a      	ldr	r2, [r7, #20]
 800654c:	68bb      	ldr	r3, [r7, #8]
 800654e:	4313      	orrs	r3, r2
 8006550:	617b      	str	r3, [r7, #20]
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	693a      	ldr	r2, [r7, #16]
 8006556:	619a      	str	r2, [r3, #24]
 8006558:	68fb      	ldr	r3, [r7, #12]
 800655a:	697a      	ldr	r2, [r7, #20]
 800655c:	621a      	str	r2, [r3, #32]
 800655e:	bf00      	nop
 8006560:	371c      	adds	r7, #28
 8006562:	46bd      	mov	sp, r7
 8006564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006568:	4770      	bx	lr

0800656a <TIM_TI2_ConfigInputStage>:
 800656a:	b480      	push	{r7}
 800656c:	b087      	sub	sp, #28
 800656e:	af00      	add	r7, sp, #0
 8006570:	60f8      	str	r0, [r7, #12]
 8006572:	60b9      	str	r1, [r7, #8]
 8006574:	607a      	str	r2, [r7, #4]
 8006576:	68fb      	ldr	r3, [r7, #12]
 8006578:	6a1b      	ldr	r3, [r3, #32]
 800657a:	617b      	str	r3, [r7, #20]
 800657c:	68fb      	ldr	r3, [r7, #12]
 800657e:	6a1b      	ldr	r3, [r3, #32]
 8006580:	f023 0210 	bic.w	r2, r3, #16
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	621a      	str	r2, [r3, #32]
 8006588:	68fb      	ldr	r3, [r7, #12]
 800658a:	699b      	ldr	r3, [r3, #24]
 800658c:	613b      	str	r3, [r7, #16]
 800658e:	693b      	ldr	r3, [r7, #16]
 8006590:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006594:	613b      	str	r3, [r7, #16]
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	031b      	lsls	r3, r3, #12
 800659a:	693a      	ldr	r2, [r7, #16]
 800659c:	4313      	orrs	r3, r2
 800659e:	613b      	str	r3, [r7, #16]
 80065a0:	697b      	ldr	r3, [r7, #20]
 80065a2:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80065a6:	617b      	str	r3, [r7, #20]
 80065a8:	68bb      	ldr	r3, [r7, #8]
 80065aa:	011b      	lsls	r3, r3, #4
 80065ac:	697a      	ldr	r2, [r7, #20]
 80065ae:	4313      	orrs	r3, r2
 80065b0:	617b      	str	r3, [r7, #20]
 80065b2:	68fb      	ldr	r3, [r7, #12]
 80065b4:	693a      	ldr	r2, [r7, #16]
 80065b6:	619a      	str	r2, [r3, #24]
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	697a      	ldr	r2, [r7, #20]
 80065bc:	621a      	str	r2, [r3, #32]
 80065be:	bf00      	nop
 80065c0:	371c      	adds	r7, #28
 80065c2:	46bd      	mov	sp, r7
 80065c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065c8:	4770      	bx	lr

080065ca <TIM_ITRx_SetConfig>:
 80065ca:	b480      	push	{r7}
 80065cc:	b085      	sub	sp, #20
 80065ce:	af00      	add	r7, sp, #0
 80065d0:	6078      	str	r0, [r7, #4]
 80065d2:	6039      	str	r1, [r7, #0]
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	689b      	ldr	r3, [r3, #8]
 80065d8:	60fb      	str	r3, [r7, #12]
 80065da:	68fb      	ldr	r3, [r7, #12]
 80065dc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80065e0:	60fb      	str	r3, [r7, #12]
 80065e2:	683a      	ldr	r2, [r7, #0]
 80065e4:	68fb      	ldr	r3, [r7, #12]
 80065e6:	4313      	orrs	r3, r2
 80065e8:	f043 0307 	orr.w	r3, r3, #7
 80065ec:	60fb      	str	r3, [r7, #12]
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	68fa      	ldr	r2, [r7, #12]
 80065f2:	609a      	str	r2, [r3, #8]
 80065f4:	bf00      	nop
 80065f6:	3714      	adds	r7, #20
 80065f8:	46bd      	mov	sp, r7
 80065fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065fe:	4770      	bx	lr

08006600 <TIM_ETR_SetConfig>:
 8006600:	b480      	push	{r7}
 8006602:	b087      	sub	sp, #28
 8006604:	af00      	add	r7, sp, #0
 8006606:	60f8      	str	r0, [r7, #12]
 8006608:	60b9      	str	r1, [r7, #8]
 800660a:	607a      	str	r2, [r7, #4]
 800660c:	603b      	str	r3, [r7, #0]
 800660e:	68fb      	ldr	r3, [r7, #12]
 8006610:	689b      	ldr	r3, [r3, #8]
 8006612:	617b      	str	r3, [r7, #20]
 8006614:	697b      	ldr	r3, [r7, #20]
 8006616:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800661a:	617b      	str	r3, [r7, #20]
 800661c:	683b      	ldr	r3, [r7, #0]
 800661e:	021a      	lsls	r2, r3, #8
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	431a      	orrs	r2, r3
 8006624:	68bb      	ldr	r3, [r7, #8]
 8006626:	4313      	orrs	r3, r2
 8006628:	697a      	ldr	r2, [r7, #20]
 800662a:	4313      	orrs	r3, r2
 800662c:	617b      	str	r3, [r7, #20]
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	697a      	ldr	r2, [r7, #20]
 8006632:	609a      	str	r2, [r3, #8]
 8006634:	bf00      	nop
 8006636:	371c      	adds	r7, #28
 8006638:	46bd      	mov	sp, r7
 800663a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800663e:	4770      	bx	lr

08006640 <TIM_CCxChannelCmd>:
 8006640:	b480      	push	{r7}
 8006642:	b087      	sub	sp, #28
 8006644:	af00      	add	r7, sp, #0
 8006646:	60f8      	str	r0, [r7, #12]
 8006648:	60b9      	str	r1, [r7, #8]
 800664a:	607a      	str	r2, [r7, #4]
 800664c:	68bb      	ldr	r3, [r7, #8]
 800664e:	f003 031f 	and.w	r3, r3, #31
 8006652:	2201      	movs	r2, #1
 8006654:	fa02 f303 	lsl.w	r3, r2, r3
 8006658:	617b      	str	r3, [r7, #20]
 800665a:	68fb      	ldr	r3, [r7, #12]
 800665c:	6a1a      	ldr	r2, [r3, #32]
 800665e:	697b      	ldr	r3, [r7, #20]
 8006660:	43db      	mvns	r3, r3
 8006662:	401a      	ands	r2, r3
 8006664:	68fb      	ldr	r3, [r7, #12]
 8006666:	621a      	str	r2, [r3, #32]
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	6a1a      	ldr	r2, [r3, #32]
 800666c:	68bb      	ldr	r3, [r7, #8]
 800666e:	f003 031f 	and.w	r3, r3, #31
 8006672:	6879      	ldr	r1, [r7, #4]
 8006674:	fa01 f303 	lsl.w	r3, r1, r3
 8006678:	431a      	orrs	r2, r3
 800667a:	68fb      	ldr	r3, [r7, #12]
 800667c:	621a      	str	r2, [r3, #32]
 800667e:	bf00      	nop
 8006680:	371c      	adds	r7, #28
 8006682:	46bd      	mov	sp, r7
 8006684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006688:	4770      	bx	lr
	...

0800668c <HAL_TIMEx_MasterConfigSynchronization>:
 800668c:	b480      	push	{r7}
 800668e:	b085      	sub	sp, #20
 8006690:	af00      	add	r7, sp, #0
 8006692:	6078      	str	r0, [r7, #4]
 8006694:	6039      	str	r1, [r7, #0]
 8006696:	687b      	ldr	r3, [r7, #4]
 8006698:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800669c:	2b01      	cmp	r3, #1
 800669e:	d101      	bne.n	80066a4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80066a0:	2302      	movs	r3, #2
 80066a2:	e05a      	b.n	800675a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	2201      	movs	r2, #1
 80066a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80066ac:	687b      	ldr	r3, [r7, #4]
 80066ae:	2202      	movs	r2, #2
 80066b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80066b4:	687b      	ldr	r3, [r7, #4]
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	685b      	ldr	r3, [r3, #4]
 80066ba:	60fb      	str	r3, [r7, #12]
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	681b      	ldr	r3, [r3, #0]
 80066c0:	689b      	ldr	r3, [r3, #8]
 80066c2:	60bb      	str	r3, [r7, #8]
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80066ca:	60fb      	str	r3, [r7, #12]
 80066cc:	683b      	ldr	r3, [r7, #0]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	68fa      	ldr	r2, [r7, #12]
 80066d2:	4313      	orrs	r3, r2
 80066d4:	60fb      	str	r3, [r7, #12]
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	681b      	ldr	r3, [r3, #0]
 80066da:	68fa      	ldr	r2, [r7, #12]
 80066dc:	605a      	str	r2, [r3, #4]
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	4a21      	ldr	r2, [pc, #132]	@ (8006768 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80066e4:	4293      	cmp	r3, r2
 80066e6:	d022      	beq.n	800672e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80066f0:	d01d      	beq.n	800672e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80066f2:	687b      	ldr	r3, [r7, #4]
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	4a1d      	ldr	r2, [pc, #116]	@ (800676c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80066f8:	4293      	cmp	r3, r2
 80066fa:	d018      	beq.n	800672e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	681b      	ldr	r3, [r3, #0]
 8006700:	4a1b      	ldr	r2, [pc, #108]	@ (8006770 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8006702:	4293      	cmp	r3, r2
 8006704:	d013      	beq.n	800672e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	4a1a      	ldr	r2, [pc, #104]	@ (8006774 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800670c:	4293      	cmp	r3, r2
 800670e:	d00e      	beq.n	800672e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	681b      	ldr	r3, [r3, #0]
 8006714:	4a18      	ldr	r2, [pc, #96]	@ (8006778 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8006716:	4293      	cmp	r3, r2
 8006718:	d009      	beq.n	800672e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	4a17      	ldr	r2, [pc, #92]	@ (800677c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006720:	4293      	cmp	r3, r2
 8006722:	d004      	beq.n	800672e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	681b      	ldr	r3, [r3, #0]
 8006728:	4a15      	ldr	r2, [pc, #84]	@ (8006780 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800672a:	4293      	cmp	r3, r2
 800672c:	d10c      	bne.n	8006748 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800672e:	68bb      	ldr	r3, [r7, #8]
 8006730:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006734:	60bb      	str	r3, [r7, #8]
 8006736:	683b      	ldr	r3, [r7, #0]
 8006738:	685b      	ldr	r3, [r3, #4]
 800673a:	68ba      	ldr	r2, [r7, #8]
 800673c:	4313      	orrs	r3, r2
 800673e:	60bb      	str	r3, [r7, #8]
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	68ba      	ldr	r2, [r7, #8]
 8006746:	609a      	str	r2, [r3, #8]
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	2201      	movs	r2, #1
 800674c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	2200      	movs	r2, #0
 8006754:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006758:	2300      	movs	r3, #0
 800675a:	4618      	mov	r0, r3
 800675c:	3714      	adds	r7, #20
 800675e:	46bd      	mov	sp, r7
 8006760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006764:	4770      	bx	lr
 8006766:	bf00      	nop
 8006768:	40010000 	.word	0x40010000
 800676c:	40000400 	.word	0x40000400
 8006770:	40000800 	.word	0x40000800
 8006774:	40000c00 	.word	0x40000c00
 8006778:	40010400 	.word	0x40010400
 800677c:	40014000 	.word	0x40014000
 8006780:	40001800 	.word	0x40001800

08006784 <HAL_TIMEx_CommutCallback>:
 8006784:	b480      	push	{r7}
 8006786:	b083      	sub	sp, #12
 8006788:	af00      	add	r7, sp, #0
 800678a:	6078      	str	r0, [r7, #4]
 800678c:	bf00      	nop
 800678e:	370c      	adds	r7, #12
 8006790:	46bd      	mov	sp, r7
 8006792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006796:	4770      	bx	lr

08006798 <HAL_TIMEx_BreakCallback>:
 8006798:	b480      	push	{r7}
 800679a:	b083      	sub	sp, #12
 800679c:	af00      	add	r7, sp, #0
 800679e:	6078      	str	r0, [r7, #4]
 80067a0:	bf00      	nop
 80067a2:	370c      	adds	r7, #12
 80067a4:	46bd      	mov	sp, r7
 80067a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067aa:	4770      	bx	lr

080067ac <HAL_UART_Init>:
 80067ac:	b580      	push	{r7, lr}
 80067ae:	b082      	sub	sp, #8
 80067b0:	af00      	add	r7, sp, #0
 80067b2:	6078      	str	r0, [r7, #4]
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	2b00      	cmp	r3, #0
 80067b8:	d101      	bne.n	80067be <HAL_UART_Init+0x12>
 80067ba:	2301      	movs	r3, #1
 80067bc:	e042      	b.n	8006844 <HAL_UART_Init+0x98>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80067c4:	b2db      	uxtb	r3, r3
 80067c6:	2b00      	cmp	r3, #0
 80067c8:	d106      	bne.n	80067d8 <HAL_UART_Init+0x2c>
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	2200      	movs	r2, #0
 80067ce:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80067d2:	6878      	ldr	r0, [r7, #4]
 80067d4:	f7fc fb02 	bl	8002ddc <HAL_UART_MspInit>
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	2224      	movs	r2, #36	@ 0x24
 80067dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	68da      	ldr	r2, [r3, #12]
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80067ee:	60da      	str	r2, [r3, #12]
 80067f0:	6878      	ldr	r0, [r7, #4]
 80067f2:	f000 fdbd 	bl	8007370 <UART_SetConfig>
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	681b      	ldr	r3, [r3, #0]
 80067fa:	691a      	ldr	r2, [r3, #16]
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006804:	611a      	str	r2, [r3, #16]
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	695a      	ldr	r2, [r3, #20]
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006814:	615a      	str	r2, [r3, #20]
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	681b      	ldr	r3, [r3, #0]
 800681a:	68da      	ldr	r2, [r3, #12]
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006824:	60da      	str	r2, [r3, #12]
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	2200      	movs	r2, #0
 800682a:	645a      	str	r2, [r3, #68]	@ 0x44
 800682c:	687b      	ldr	r3, [r7, #4]
 800682e:	2220      	movs	r2, #32
 8006830:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	2220      	movs	r2, #32
 8006838:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	2200      	movs	r2, #0
 8006840:	635a      	str	r2, [r3, #52]	@ 0x34
 8006842:	2300      	movs	r3, #0
 8006844:	4618      	mov	r0, r3
 8006846:	3708      	adds	r7, #8
 8006848:	46bd      	mov	sp, r7
 800684a:	bd80      	pop	{r7, pc}

0800684c <HAL_UART_Transmit>:
 800684c:	b580      	push	{r7, lr}
 800684e:	b08a      	sub	sp, #40	@ 0x28
 8006850:	af02      	add	r7, sp, #8
 8006852:	60f8      	str	r0, [r7, #12]
 8006854:	60b9      	str	r1, [r7, #8]
 8006856:	603b      	str	r3, [r7, #0]
 8006858:	4613      	mov	r3, r2
 800685a:	80fb      	strh	r3, [r7, #6]
 800685c:	2300      	movs	r3, #0
 800685e:	617b      	str	r3, [r7, #20]
 8006860:	68fb      	ldr	r3, [r7, #12]
 8006862:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006866:	b2db      	uxtb	r3, r3
 8006868:	2b20      	cmp	r3, #32
 800686a:	d175      	bne.n	8006958 <HAL_UART_Transmit+0x10c>
 800686c:	68bb      	ldr	r3, [r7, #8]
 800686e:	2b00      	cmp	r3, #0
 8006870:	d002      	beq.n	8006878 <HAL_UART_Transmit+0x2c>
 8006872:	88fb      	ldrh	r3, [r7, #6]
 8006874:	2b00      	cmp	r3, #0
 8006876:	d101      	bne.n	800687c <HAL_UART_Transmit+0x30>
 8006878:	2301      	movs	r3, #1
 800687a:	e06e      	b.n	800695a <HAL_UART_Transmit+0x10e>
 800687c:	68fb      	ldr	r3, [r7, #12]
 800687e:	2200      	movs	r2, #0
 8006880:	645a      	str	r2, [r3, #68]	@ 0x44
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	2221      	movs	r2, #33	@ 0x21
 8006886:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800688a:	f7fc fb87 	bl	8002f9c <HAL_GetTick>
 800688e:	6178      	str	r0, [r7, #20]
 8006890:	68fb      	ldr	r3, [r7, #12]
 8006892:	88fa      	ldrh	r2, [r7, #6]
 8006894:	849a      	strh	r2, [r3, #36]	@ 0x24
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	88fa      	ldrh	r2, [r7, #6]
 800689a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800689c:	68fb      	ldr	r3, [r7, #12]
 800689e:	689b      	ldr	r3, [r3, #8]
 80068a0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80068a4:	d108      	bne.n	80068b8 <HAL_UART_Transmit+0x6c>
 80068a6:	68fb      	ldr	r3, [r7, #12]
 80068a8:	691b      	ldr	r3, [r3, #16]
 80068aa:	2b00      	cmp	r3, #0
 80068ac:	d104      	bne.n	80068b8 <HAL_UART_Transmit+0x6c>
 80068ae:	2300      	movs	r3, #0
 80068b0:	61fb      	str	r3, [r7, #28]
 80068b2:	68bb      	ldr	r3, [r7, #8]
 80068b4:	61bb      	str	r3, [r7, #24]
 80068b6:	e003      	b.n	80068c0 <HAL_UART_Transmit+0x74>
 80068b8:	68bb      	ldr	r3, [r7, #8]
 80068ba:	61fb      	str	r3, [r7, #28]
 80068bc:	2300      	movs	r3, #0
 80068be:	61bb      	str	r3, [r7, #24]
 80068c0:	e02e      	b.n	8006920 <HAL_UART_Transmit+0xd4>
 80068c2:	683b      	ldr	r3, [r7, #0]
 80068c4:	9300      	str	r3, [sp, #0]
 80068c6:	697b      	ldr	r3, [r7, #20]
 80068c8:	2200      	movs	r2, #0
 80068ca:	2180      	movs	r1, #128	@ 0x80
 80068cc:	68f8      	ldr	r0, [r7, #12]
 80068ce:	f000 fb1f 	bl	8006f10 <UART_WaitOnFlagUntilTimeout>
 80068d2:	4603      	mov	r3, r0
 80068d4:	2b00      	cmp	r3, #0
 80068d6:	d005      	beq.n	80068e4 <HAL_UART_Transmit+0x98>
 80068d8:	68fb      	ldr	r3, [r7, #12]
 80068da:	2220      	movs	r2, #32
 80068dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80068e0:	2303      	movs	r3, #3
 80068e2:	e03a      	b.n	800695a <HAL_UART_Transmit+0x10e>
 80068e4:	69fb      	ldr	r3, [r7, #28]
 80068e6:	2b00      	cmp	r3, #0
 80068e8:	d10b      	bne.n	8006902 <HAL_UART_Transmit+0xb6>
 80068ea:	69bb      	ldr	r3, [r7, #24]
 80068ec:	881b      	ldrh	r3, [r3, #0]
 80068ee:	461a      	mov	r2, r3
 80068f0:	68fb      	ldr	r3, [r7, #12]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80068f8:	605a      	str	r2, [r3, #4]
 80068fa:	69bb      	ldr	r3, [r7, #24]
 80068fc:	3302      	adds	r3, #2
 80068fe:	61bb      	str	r3, [r7, #24]
 8006900:	e007      	b.n	8006912 <HAL_UART_Transmit+0xc6>
 8006902:	69fb      	ldr	r3, [r7, #28]
 8006904:	781a      	ldrb	r2, [r3, #0]
 8006906:	68fb      	ldr	r3, [r7, #12]
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	605a      	str	r2, [r3, #4]
 800690c:	69fb      	ldr	r3, [r7, #28]
 800690e:	3301      	adds	r3, #1
 8006910:	61fb      	str	r3, [r7, #28]
 8006912:	68fb      	ldr	r3, [r7, #12]
 8006914:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006916:	b29b      	uxth	r3, r3
 8006918:	3b01      	subs	r3, #1
 800691a:	b29a      	uxth	r2, r3
 800691c:	68fb      	ldr	r3, [r7, #12]
 800691e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006924:	b29b      	uxth	r3, r3
 8006926:	2b00      	cmp	r3, #0
 8006928:	d1cb      	bne.n	80068c2 <HAL_UART_Transmit+0x76>
 800692a:	683b      	ldr	r3, [r7, #0]
 800692c:	9300      	str	r3, [sp, #0]
 800692e:	697b      	ldr	r3, [r7, #20]
 8006930:	2200      	movs	r2, #0
 8006932:	2140      	movs	r1, #64	@ 0x40
 8006934:	68f8      	ldr	r0, [r7, #12]
 8006936:	f000 faeb 	bl	8006f10 <UART_WaitOnFlagUntilTimeout>
 800693a:	4603      	mov	r3, r0
 800693c:	2b00      	cmp	r3, #0
 800693e:	d005      	beq.n	800694c <HAL_UART_Transmit+0x100>
 8006940:	68fb      	ldr	r3, [r7, #12]
 8006942:	2220      	movs	r2, #32
 8006944:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006948:	2303      	movs	r3, #3
 800694a:	e006      	b.n	800695a <HAL_UART_Transmit+0x10e>
 800694c:	68fb      	ldr	r3, [r7, #12]
 800694e:	2220      	movs	r2, #32
 8006950:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006954:	2300      	movs	r3, #0
 8006956:	e000      	b.n	800695a <HAL_UART_Transmit+0x10e>
 8006958:	2302      	movs	r3, #2
 800695a:	4618      	mov	r0, r3
 800695c:	3720      	adds	r7, #32
 800695e:	46bd      	mov	sp, r7
 8006960:	bd80      	pop	{r7, pc}

08006962 <HAL_UART_Receive_IT>:
 8006962:	b580      	push	{r7, lr}
 8006964:	b084      	sub	sp, #16
 8006966:	af00      	add	r7, sp, #0
 8006968:	60f8      	str	r0, [r7, #12]
 800696a:	60b9      	str	r1, [r7, #8]
 800696c:	4613      	mov	r3, r2
 800696e:	80fb      	strh	r3, [r7, #6]
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006976:	b2db      	uxtb	r3, r3
 8006978:	2b20      	cmp	r3, #32
 800697a:	d112      	bne.n	80069a2 <HAL_UART_Receive_IT+0x40>
 800697c:	68bb      	ldr	r3, [r7, #8]
 800697e:	2b00      	cmp	r3, #0
 8006980:	d002      	beq.n	8006988 <HAL_UART_Receive_IT+0x26>
 8006982:	88fb      	ldrh	r3, [r7, #6]
 8006984:	2b00      	cmp	r3, #0
 8006986:	d101      	bne.n	800698c <HAL_UART_Receive_IT+0x2a>
 8006988:	2301      	movs	r3, #1
 800698a:	e00b      	b.n	80069a4 <HAL_UART_Receive_IT+0x42>
 800698c:	68fb      	ldr	r3, [r7, #12]
 800698e:	2200      	movs	r2, #0
 8006990:	631a      	str	r2, [r3, #48]	@ 0x30
 8006992:	88fb      	ldrh	r3, [r7, #6]
 8006994:	461a      	mov	r2, r3
 8006996:	68b9      	ldr	r1, [r7, #8]
 8006998:	68f8      	ldr	r0, [r7, #12]
 800699a:	f000 fb12 	bl	8006fc2 <UART_Start_Receive_IT>
 800699e:	4603      	mov	r3, r0
 80069a0:	e000      	b.n	80069a4 <HAL_UART_Receive_IT+0x42>
 80069a2:	2302      	movs	r3, #2
 80069a4:	4618      	mov	r0, r3
 80069a6:	3710      	adds	r7, #16
 80069a8:	46bd      	mov	sp, r7
 80069aa:	bd80      	pop	{r7, pc}

080069ac <HAL_UART_IRQHandler>:
 80069ac:	b580      	push	{r7, lr}
 80069ae:	b0ba      	sub	sp, #232	@ 0xe8
 80069b0:	af00      	add	r7, sp, #0
 80069b2:	6078      	str	r0, [r7, #4]
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	681b      	ldr	r3, [r3, #0]
 80069ba:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	68db      	ldr	r3, [r3, #12]
 80069c4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	695b      	ldr	r3, [r3, #20]
 80069ce:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80069d2:	2300      	movs	r3, #0
 80069d4:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80069d8:	2300      	movs	r3, #0
 80069da:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80069de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80069e2:	f003 030f 	and.w	r3, r3, #15
 80069e6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80069ea:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d10f      	bne.n	8006a12 <HAL_UART_IRQHandler+0x66>
 80069f2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80069f6:	f003 0320 	and.w	r3, r3, #32
 80069fa:	2b00      	cmp	r3, #0
 80069fc:	d009      	beq.n	8006a12 <HAL_UART_IRQHandler+0x66>
 80069fe:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006a02:	f003 0320 	and.w	r3, r3, #32
 8006a06:	2b00      	cmp	r3, #0
 8006a08:	d003      	beq.n	8006a12 <HAL_UART_IRQHandler+0x66>
 8006a0a:	6878      	ldr	r0, [r7, #4]
 8006a0c:	f000 fbf2 	bl	80071f4 <UART_Receive_IT>
 8006a10:	e25b      	b.n	8006eca <HAL_UART_IRQHandler+0x51e>
 8006a12:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	f000 80de 	beq.w	8006bd8 <HAL_UART_IRQHandler+0x22c>
 8006a1c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006a20:	f003 0301 	and.w	r3, r3, #1
 8006a24:	2b00      	cmp	r3, #0
 8006a26:	d106      	bne.n	8006a36 <HAL_UART_IRQHandler+0x8a>
 8006a28:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006a2c:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8006a30:	2b00      	cmp	r3, #0
 8006a32:	f000 80d1 	beq.w	8006bd8 <HAL_UART_IRQHandler+0x22c>
 8006a36:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006a3a:	f003 0301 	and.w	r3, r3, #1
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d00b      	beq.n	8006a5a <HAL_UART_IRQHandler+0xae>
 8006a42:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006a46:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a4a:	2b00      	cmp	r3, #0
 8006a4c:	d005      	beq.n	8006a5a <HAL_UART_IRQHandler+0xae>
 8006a4e:	687b      	ldr	r3, [r7, #4]
 8006a50:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006a52:	f043 0201 	orr.w	r2, r3, #1
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	645a      	str	r2, [r3, #68]	@ 0x44
 8006a5a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006a5e:	f003 0304 	and.w	r3, r3, #4
 8006a62:	2b00      	cmp	r3, #0
 8006a64:	d00b      	beq.n	8006a7e <HAL_UART_IRQHandler+0xd2>
 8006a66:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006a6a:	f003 0301 	and.w	r3, r3, #1
 8006a6e:	2b00      	cmp	r3, #0
 8006a70:	d005      	beq.n	8006a7e <HAL_UART_IRQHandler+0xd2>
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006a76:	f043 0202 	orr.w	r2, r3, #2
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	645a      	str	r2, [r3, #68]	@ 0x44
 8006a7e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006a82:	f003 0302 	and.w	r3, r3, #2
 8006a86:	2b00      	cmp	r3, #0
 8006a88:	d00b      	beq.n	8006aa2 <HAL_UART_IRQHandler+0xf6>
 8006a8a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006a8e:	f003 0301 	and.w	r3, r3, #1
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	d005      	beq.n	8006aa2 <HAL_UART_IRQHandler+0xf6>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006a9a:	f043 0204 	orr.w	r2, r3, #4
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	645a      	str	r2, [r3, #68]	@ 0x44
 8006aa2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006aa6:	f003 0308 	and.w	r3, r3, #8
 8006aaa:	2b00      	cmp	r3, #0
 8006aac:	d011      	beq.n	8006ad2 <HAL_UART_IRQHandler+0x126>
 8006aae:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006ab2:	f003 0320 	and.w	r3, r3, #32
 8006ab6:	2b00      	cmp	r3, #0
 8006ab8:	d105      	bne.n	8006ac6 <HAL_UART_IRQHandler+0x11a>
 8006aba:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006abe:	f003 0301 	and.w	r3, r3, #1
 8006ac2:	2b00      	cmp	r3, #0
 8006ac4:	d005      	beq.n	8006ad2 <HAL_UART_IRQHandler+0x126>
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006aca:	f043 0208 	orr.w	r2, r3, #8
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	645a      	str	r2, [r3, #68]	@ 0x44
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	f000 81f2 	beq.w	8006ec0 <HAL_UART_IRQHandler+0x514>
 8006adc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006ae0:	f003 0320 	and.w	r3, r3, #32
 8006ae4:	2b00      	cmp	r3, #0
 8006ae6:	d008      	beq.n	8006afa <HAL_UART_IRQHandler+0x14e>
 8006ae8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006aec:	f003 0320 	and.w	r3, r3, #32
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	d002      	beq.n	8006afa <HAL_UART_IRQHandler+0x14e>
 8006af4:	6878      	ldr	r0, [r7, #4]
 8006af6:	f000 fb7d 	bl	80071f4 <UART_Receive_IT>
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	695b      	ldr	r3, [r3, #20]
 8006b00:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b04:	2b40      	cmp	r3, #64	@ 0x40
 8006b06:	bf0c      	ite	eq
 8006b08:	2301      	moveq	r3, #1
 8006b0a:	2300      	movne	r3, #0
 8006b0c:	b2db      	uxtb	r3, r3
 8006b0e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006b16:	f003 0308 	and.w	r3, r3, #8
 8006b1a:	2b00      	cmp	r3, #0
 8006b1c:	d103      	bne.n	8006b26 <HAL_UART_IRQHandler+0x17a>
 8006b1e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	d04f      	beq.n	8006bc6 <HAL_UART_IRQHandler+0x21a>
 8006b26:	6878      	ldr	r0, [r7, #4]
 8006b28:	f000 fa85 	bl	8007036 <UART_EndRxTransfer>
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	695b      	ldr	r3, [r3, #20]
 8006b32:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b36:	2b40      	cmp	r3, #64	@ 0x40
 8006b38:	d141      	bne.n	8006bbe <HAL_UART_IRQHandler+0x212>
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	681b      	ldr	r3, [r3, #0]
 8006b3e:	3314      	adds	r3, #20
 8006b40:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006b44:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8006b48:	e853 3f00 	ldrex	r3, [r3]
 8006b4c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006b50:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8006b54:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006b58:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	3314      	adds	r3, #20
 8006b62:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8006b66:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8006b6a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8006b6e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8006b72:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8006b76:	e841 2300 	strex	r3, r2, [r1]
 8006b7a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006b7e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8006b82:	2b00      	cmp	r3, #0
 8006b84:	d1d9      	bne.n	8006b3a <HAL_UART_IRQHandler+0x18e>
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006b8a:	2b00      	cmp	r3, #0
 8006b8c:	d013      	beq.n	8006bb6 <HAL_UART_IRQHandler+0x20a>
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006b92:	4a7e      	ldr	r2, [pc, #504]	@ (8006d8c <HAL_UART_IRQHandler+0x3e0>)
 8006b94:	651a      	str	r2, [r3, #80]	@ 0x50
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006b9a:	4618      	mov	r0, r3
 8006b9c:	f7fd f8c8 	bl	8003d30 <HAL_DMA_Abort_IT>
 8006ba0:	4603      	mov	r3, r0
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	d016      	beq.n	8006bd4 <HAL_UART_IRQHandler+0x228>
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006baa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006bac:	687a      	ldr	r2, [r7, #4]
 8006bae:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8006bb0:	4610      	mov	r0, r2
 8006bb2:	4798      	blx	r3
 8006bb4:	e00e      	b.n	8006bd4 <HAL_UART_IRQHandler+0x228>
 8006bb6:	6878      	ldr	r0, [r7, #4]
 8006bb8:	f000 f994 	bl	8006ee4 <HAL_UART_ErrorCallback>
 8006bbc:	e00a      	b.n	8006bd4 <HAL_UART_IRQHandler+0x228>
 8006bbe:	6878      	ldr	r0, [r7, #4]
 8006bc0:	f000 f990 	bl	8006ee4 <HAL_UART_ErrorCallback>
 8006bc4:	e006      	b.n	8006bd4 <HAL_UART_IRQHandler+0x228>
 8006bc6:	6878      	ldr	r0, [r7, #4]
 8006bc8:	f000 f98c 	bl	8006ee4 <HAL_UART_ErrorCallback>
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	2200      	movs	r2, #0
 8006bd0:	645a      	str	r2, [r3, #68]	@ 0x44
 8006bd2:	e175      	b.n	8006ec0 <HAL_UART_IRQHandler+0x514>
 8006bd4:	bf00      	nop
 8006bd6:	e173      	b.n	8006ec0 <HAL_UART_IRQHandler+0x514>
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006bdc:	2b01      	cmp	r3, #1
 8006bde:	f040 814f 	bne.w	8006e80 <HAL_UART_IRQHandler+0x4d4>
 8006be2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006be6:	f003 0310 	and.w	r3, r3, #16
 8006bea:	2b00      	cmp	r3, #0
 8006bec:	f000 8148 	beq.w	8006e80 <HAL_UART_IRQHandler+0x4d4>
 8006bf0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006bf4:	f003 0310 	and.w	r3, r3, #16
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	f000 8141 	beq.w	8006e80 <HAL_UART_IRQHandler+0x4d4>
 8006bfe:	2300      	movs	r3, #0
 8006c00:	60bb      	str	r3, [r7, #8]
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	681b      	ldr	r3, [r3, #0]
 8006c06:	681b      	ldr	r3, [r3, #0]
 8006c08:	60bb      	str	r3, [r7, #8]
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	681b      	ldr	r3, [r3, #0]
 8006c0e:	685b      	ldr	r3, [r3, #4]
 8006c10:	60bb      	str	r3, [r7, #8]
 8006c12:	68bb      	ldr	r3, [r7, #8]
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	695b      	ldr	r3, [r3, #20]
 8006c1a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006c1e:	2b40      	cmp	r3, #64	@ 0x40
 8006c20:	f040 80b6 	bne.w	8006d90 <HAL_UART_IRQHandler+0x3e4>
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	685b      	ldr	r3, [r3, #4]
 8006c2c:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8006c30:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8006c34:	2b00      	cmp	r3, #0
 8006c36:	f000 8145 	beq.w	8006ec4 <HAL_UART_IRQHandler+0x518>
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006c3e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006c42:	429a      	cmp	r2, r3
 8006c44:	f080 813e 	bcs.w	8006ec4 <HAL_UART_IRQHandler+0x518>
 8006c48:	687b      	ldr	r3, [r7, #4]
 8006c4a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006c4e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006c54:	69db      	ldr	r3, [r3, #28]
 8006c56:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006c5a:	f000 8088 	beq.w	8006d6e <HAL_UART_IRQHandler+0x3c2>
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	681b      	ldr	r3, [r3, #0]
 8006c62:	330c      	adds	r3, #12
 8006c64:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006c68:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006c6c:	e853 3f00 	ldrex	r3, [r3]
 8006c70:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006c74:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006c78:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006c7c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006c80:	687b      	ldr	r3, [r7, #4]
 8006c82:	681b      	ldr	r3, [r3, #0]
 8006c84:	330c      	adds	r3, #12
 8006c86:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8006c8a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006c8e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006c92:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8006c96:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8006c9a:	e841 2300 	strex	r3, r2, [r1]
 8006c9e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006ca2:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006ca6:	2b00      	cmp	r3, #0
 8006ca8:	d1d9      	bne.n	8006c5e <HAL_UART_IRQHandler+0x2b2>
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	681b      	ldr	r3, [r3, #0]
 8006cae:	3314      	adds	r3, #20
 8006cb0:	677b      	str	r3, [r7, #116]	@ 0x74
 8006cb2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8006cb4:	e853 3f00 	ldrex	r3, [r3]
 8006cb8:	673b      	str	r3, [r7, #112]	@ 0x70
 8006cba:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006cbc:	f023 0301 	bic.w	r3, r3, #1
 8006cc0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	681b      	ldr	r3, [r3, #0]
 8006cc8:	3314      	adds	r3, #20
 8006cca:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8006cce:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8006cd2:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006cd4:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8006cd6:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8006cda:	e841 2300 	strex	r3, r2, [r1]
 8006cde:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006ce0:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006ce2:	2b00      	cmp	r3, #0
 8006ce4:	d1e1      	bne.n	8006caa <HAL_UART_IRQHandler+0x2fe>
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	3314      	adds	r3, #20
 8006cec:	663b      	str	r3, [r7, #96]	@ 0x60
 8006cee:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006cf0:	e853 3f00 	ldrex	r3, [r3]
 8006cf4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006cf6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006cf8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006cfc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	681b      	ldr	r3, [r3, #0]
 8006d04:	3314      	adds	r3, #20
 8006d06:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8006d0a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8006d0c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006d0e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8006d10:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8006d12:	e841 2300 	strex	r3, r2, [r1]
 8006d16:	667b      	str	r3, [r7, #100]	@ 0x64
 8006d18:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006d1a:	2b00      	cmp	r3, #0
 8006d1c:	d1e3      	bne.n	8006ce6 <HAL_UART_IRQHandler+0x33a>
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	2220      	movs	r2, #32
 8006d22:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006d26:	687b      	ldr	r3, [r7, #4]
 8006d28:	2200      	movs	r2, #0
 8006d2a:	631a      	str	r2, [r3, #48]	@ 0x30
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	681b      	ldr	r3, [r3, #0]
 8006d30:	330c      	adds	r3, #12
 8006d32:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006d34:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006d36:	e853 3f00 	ldrex	r3, [r3]
 8006d3a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006d3c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006d3e:	f023 0310 	bic.w	r3, r3, #16
 8006d42:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	330c      	adds	r3, #12
 8006d4c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8006d50:	65ba      	str	r2, [r7, #88]	@ 0x58
 8006d52:	657b      	str	r3, [r7, #84]	@ 0x54
 8006d54:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006d56:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006d58:	e841 2300 	strex	r3, r2, [r1]
 8006d5c:	653b      	str	r3, [r7, #80]	@ 0x50
 8006d5e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006d60:	2b00      	cmp	r3, #0
 8006d62:	d1e3      	bne.n	8006d2c <HAL_UART_IRQHandler+0x380>
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006d68:	4618      	mov	r0, r3
 8006d6a:	f7fc ff71 	bl	8003c50 <HAL_DMA_Abort>
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	2202      	movs	r2, #2
 8006d72:	635a      	str	r2, [r3, #52]	@ 0x34
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006d7c:	b29b      	uxth	r3, r3
 8006d7e:	1ad3      	subs	r3, r2, r3
 8006d80:	b29b      	uxth	r3, r3
 8006d82:	4619      	mov	r1, r3
 8006d84:	6878      	ldr	r0, [r7, #4]
 8006d86:	f000 f8b7 	bl	8006ef8 <HAL_UARTEx_RxEventCallback>
 8006d8a:	e09b      	b.n	8006ec4 <HAL_UART_IRQHandler+0x518>
 8006d8c:	080070fd 	.word	0x080070fd
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006d98:	b29b      	uxth	r3, r3
 8006d9a:	1ad3      	subs	r3, r2, r3
 8006d9c:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006da4:	b29b      	uxth	r3, r3
 8006da6:	2b00      	cmp	r3, #0
 8006da8:	f000 808e 	beq.w	8006ec8 <HAL_UART_IRQHandler+0x51c>
 8006dac:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006db0:	2b00      	cmp	r3, #0
 8006db2:	f000 8089 	beq.w	8006ec8 <HAL_UART_IRQHandler+0x51c>
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	681b      	ldr	r3, [r3, #0]
 8006dba:	330c      	adds	r3, #12
 8006dbc:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006dbe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006dc0:	e853 3f00 	ldrex	r3, [r3]
 8006dc4:	637b      	str	r3, [r7, #52]	@ 0x34
 8006dc6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006dc8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006dcc:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	681b      	ldr	r3, [r3, #0]
 8006dd4:	330c      	adds	r3, #12
 8006dd6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8006dda:	647a      	str	r2, [r7, #68]	@ 0x44
 8006ddc:	643b      	str	r3, [r7, #64]	@ 0x40
 8006dde:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006de0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006de2:	e841 2300 	strex	r3, r2, [r1]
 8006de6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006de8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d1e3      	bne.n	8006db6 <HAL_UART_IRQHandler+0x40a>
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	681b      	ldr	r3, [r3, #0]
 8006df2:	3314      	adds	r3, #20
 8006df4:	627b      	str	r3, [r7, #36]	@ 0x24
 8006df6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006df8:	e853 3f00 	ldrex	r3, [r3]
 8006dfc:	623b      	str	r3, [r7, #32]
 8006dfe:	6a3b      	ldr	r3, [r7, #32]
 8006e00:	f023 0301 	bic.w	r3, r3, #1
 8006e04:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	681b      	ldr	r3, [r3, #0]
 8006e0c:	3314      	adds	r3, #20
 8006e0e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8006e12:	633a      	str	r2, [r7, #48]	@ 0x30
 8006e14:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006e16:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006e18:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006e1a:	e841 2300 	strex	r3, r2, [r1]
 8006e1e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006e20:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	d1e3      	bne.n	8006dee <HAL_UART_IRQHandler+0x442>
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	2220      	movs	r2, #32
 8006e2a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	2200      	movs	r2, #0
 8006e32:	631a      	str	r2, [r3, #48]	@ 0x30
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	330c      	adds	r3, #12
 8006e3a:	613b      	str	r3, [r7, #16]
 8006e3c:	693b      	ldr	r3, [r7, #16]
 8006e3e:	e853 3f00 	ldrex	r3, [r3]
 8006e42:	60fb      	str	r3, [r7, #12]
 8006e44:	68fb      	ldr	r3, [r7, #12]
 8006e46:	f023 0310 	bic.w	r3, r3, #16
 8006e4a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	681b      	ldr	r3, [r3, #0]
 8006e52:	330c      	adds	r3, #12
 8006e54:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8006e58:	61fa      	str	r2, [r7, #28]
 8006e5a:	61bb      	str	r3, [r7, #24]
 8006e5c:	69b9      	ldr	r1, [r7, #24]
 8006e5e:	69fa      	ldr	r2, [r7, #28]
 8006e60:	e841 2300 	strex	r3, r2, [r1]
 8006e64:	617b      	str	r3, [r7, #20]
 8006e66:	697b      	ldr	r3, [r7, #20]
 8006e68:	2b00      	cmp	r3, #0
 8006e6a:	d1e3      	bne.n	8006e34 <HAL_UART_IRQHandler+0x488>
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	2202      	movs	r2, #2
 8006e70:	635a      	str	r2, [r3, #52]	@ 0x34
 8006e72:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006e76:	4619      	mov	r1, r3
 8006e78:	6878      	ldr	r0, [r7, #4]
 8006e7a:	f000 f83d 	bl	8006ef8 <HAL_UARTEx_RxEventCallback>
 8006e7e:	e023      	b.n	8006ec8 <HAL_UART_IRQHandler+0x51c>
 8006e80:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006e84:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006e88:	2b00      	cmp	r3, #0
 8006e8a:	d009      	beq.n	8006ea0 <HAL_UART_IRQHandler+0x4f4>
 8006e8c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006e90:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006e94:	2b00      	cmp	r3, #0
 8006e96:	d003      	beq.n	8006ea0 <HAL_UART_IRQHandler+0x4f4>
 8006e98:	6878      	ldr	r0, [r7, #4]
 8006e9a:	f000 f943 	bl	8007124 <UART_Transmit_IT>
 8006e9e:	e014      	b.n	8006eca <HAL_UART_IRQHandler+0x51e>
 8006ea0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006ea4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ea8:	2b00      	cmp	r3, #0
 8006eaa:	d00e      	beq.n	8006eca <HAL_UART_IRQHandler+0x51e>
 8006eac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006eb0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006eb4:	2b00      	cmp	r3, #0
 8006eb6:	d008      	beq.n	8006eca <HAL_UART_IRQHandler+0x51e>
 8006eb8:	6878      	ldr	r0, [r7, #4]
 8006eba:	f000 f983 	bl	80071c4 <UART_EndTransmit_IT>
 8006ebe:	e004      	b.n	8006eca <HAL_UART_IRQHandler+0x51e>
 8006ec0:	bf00      	nop
 8006ec2:	e002      	b.n	8006eca <HAL_UART_IRQHandler+0x51e>
 8006ec4:	bf00      	nop
 8006ec6:	e000      	b.n	8006eca <HAL_UART_IRQHandler+0x51e>
 8006ec8:	bf00      	nop
 8006eca:	37e8      	adds	r7, #232	@ 0xe8
 8006ecc:	46bd      	mov	sp, r7
 8006ece:	bd80      	pop	{r7, pc}

08006ed0 <HAL_UART_TxCpltCallback>:
 8006ed0:	b480      	push	{r7}
 8006ed2:	b083      	sub	sp, #12
 8006ed4:	af00      	add	r7, sp, #0
 8006ed6:	6078      	str	r0, [r7, #4]
 8006ed8:	bf00      	nop
 8006eda:	370c      	adds	r7, #12
 8006edc:	46bd      	mov	sp, r7
 8006ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ee2:	4770      	bx	lr

08006ee4 <HAL_UART_ErrorCallback>:
 8006ee4:	b480      	push	{r7}
 8006ee6:	b083      	sub	sp, #12
 8006ee8:	af00      	add	r7, sp, #0
 8006eea:	6078      	str	r0, [r7, #4]
 8006eec:	bf00      	nop
 8006eee:	370c      	adds	r7, #12
 8006ef0:	46bd      	mov	sp, r7
 8006ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef6:	4770      	bx	lr

08006ef8 <HAL_UARTEx_RxEventCallback>:
 8006ef8:	b480      	push	{r7}
 8006efa:	b083      	sub	sp, #12
 8006efc:	af00      	add	r7, sp, #0
 8006efe:	6078      	str	r0, [r7, #4]
 8006f00:	460b      	mov	r3, r1
 8006f02:	807b      	strh	r3, [r7, #2]
 8006f04:	bf00      	nop
 8006f06:	370c      	adds	r7, #12
 8006f08:	46bd      	mov	sp, r7
 8006f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f0e:	4770      	bx	lr

08006f10 <UART_WaitOnFlagUntilTimeout>:
 8006f10:	b580      	push	{r7, lr}
 8006f12:	b086      	sub	sp, #24
 8006f14:	af00      	add	r7, sp, #0
 8006f16:	60f8      	str	r0, [r7, #12]
 8006f18:	60b9      	str	r1, [r7, #8]
 8006f1a:	603b      	str	r3, [r7, #0]
 8006f1c:	4613      	mov	r3, r2
 8006f1e:	71fb      	strb	r3, [r7, #7]
 8006f20:	e03b      	b.n	8006f9a <UART_WaitOnFlagUntilTimeout+0x8a>
 8006f22:	6a3b      	ldr	r3, [r7, #32]
 8006f24:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006f28:	d037      	beq.n	8006f9a <UART_WaitOnFlagUntilTimeout+0x8a>
 8006f2a:	f7fc f837 	bl	8002f9c <HAL_GetTick>
 8006f2e:	4602      	mov	r2, r0
 8006f30:	683b      	ldr	r3, [r7, #0]
 8006f32:	1ad3      	subs	r3, r2, r3
 8006f34:	6a3a      	ldr	r2, [r7, #32]
 8006f36:	429a      	cmp	r2, r3
 8006f38:	d302      	bcc.n	8006f40 <UART_WaitOnFlagUntilTimeout+0x30>
 8006f3a:	6a3b      	ldr	r3, [r7, #32]
 8006f3c:	2b00      	cmp	r3, #0
 8006f3e:	d101      	bne.n	8006f44 <UART_WaitOnFlagUntilTimeout+0x34>
 8006f40:	2303      	movs	r3, #3
 8006f42:	e03a      	b.n	8006fba <UART_WaitOnFlagUntilTimeout+0xaa>
 8006f44:	68fb      	ldr	r3, [r7, #12]
 8006f46:	681b      	ldr	r3, [r3, #0]
 8006f48:	68db      	ldr	r3, [r3, #12]
 8006f4a:	f003 0304 	and.w	r3, r3, #4
 8006f4e:	2b00      	cmp	r3, #0
 8006f50:	d023      	beq.n	8006f9a <UART_WaitOnFlagUntilTimeout+0x8a>
 8006f52:	68bb      	ldr	r3, [r7, #8]
 8006f54:	2b80      	cmp	r3, #128	@ 0x80
 8006f56:	d020      	beq.n	8006f9a <UART_WaitOnFlagUntilTimeout+0x8a>
 8006f58:	68bb      	ldr	r3, [r7, #8]
 8006f5a:	2b40      	cmp	r3, #64	@ 0x40
 8006f5c:	d01d      	beq.n	8006f9a <UART_WaitOnFlagUntilTimeout+0x8a>
 8006f5e:	68fb      	ldr	r3, [r7, #12]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	681b      	ldr	r3, [r3, #0]
 8006f64:	f003 0308 	and.w	r3, r3, #8
 8006f68:	2b08      	cmp	r3, #8
 8006f6a:	d116      	bne.n	8006f9a <UART_WaitOnFlagUntilTimeout+0x8a>
 8006f6c:	2300      	movs	r3, #0
 8006f6e:	617b      	str	r3, [r7, #20]
 8006f70:	68fb      	ldr	r3, [r7, #12]
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	617b      	str	r3, [r7, #20]
 8006f78:	68fb      	ldr	r3, [r7, #12]
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	685b      	ldr	r3, [r3, #4]
 8006f7e:	617b      	str	r3, [r7, #20]
 8006f80:	697b      	ldr	r3, [r7, #20]
 8006f82:	68f8      	ldr	r0, [r7, #12]
 8006f84:	f000 f857 	bl	8007036 <UART_EndRxTransfer>
 8006f88:	68fb      	ldr	r3, [r7, #12]
 8006f8a:	2208      	movs	r2, #8
 8006f8c:	645a      	str	r2, [r3, #68]	@ 0x44
 8006f8e:	68fb      	ldr	r3, [r7, #12]
 8006f90:	2200      	movs	r2, #0
 8006f92:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006f96:	2301      	movs	r3, #1
 8006f98:	e00f      	b.n	8006fba <UART_WaitOnFlagUntilTimeout+0xaa>
 8006f9a:	68fb      	ldr	r3, [r7, #12]
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	681a      	ldr	r2, [r3, #0]
 8006fa0:	68bb      	ldr	r3, [r7, #8]
 8006fa2:	4013      	ands	r3, r2
 8006fa4:	68ba      	ldr	r2, [r7, #8]
 8006fa6:	429a      	cmp	r2, r3
 8006fa8:	bf0c      	ite	eq
 8006faa:	2301      	moveq	r3, #1
 8006fac:	2300      	movne	r3, #0
 8006fae:	b2db      	uxtb	r3, r3
 8006fb0:	461a      	mov	r2, r3
 8006fb2:	79fb      	ldrb	r3, [r7, #7]
 8006fb4:	429a      	cmp	r2, r3
 8006fb6:	d0b4      	beq.n	8006f22 <UART_WaitOnFlagUntilTimeout+0x12>
 8006fb8:	2300      	movs	r3, #0
 8006fba:	4618      	mov	r0, r3
 8006fbc:	3718      	adds	r7, #24
 8006fbe:	46bd      	mov	sp, r7
 8006fc0:	bd80      	pop	{r7, pc}

08006fc2 <UART_Start_Receive_IT>:
 8006fc2:	b480      	push	{r7}
 8006fc4:	b085      	sub	sp, #20
 8006fc6:	af00      	add	r7, sp, #0
 8006fc8:	60f8      	str	r0, [r7, #12]
 8006fca:	60b9      	str	r1, [r7, #8]
 8006fcc:	4613      	mov	r3, r2
 8006fce:	80fb      	strh	r3, [r7, #6]
 8006fd0:	68fb      	ldr	r3, [r7, #12]
 8006fd2:	68ba      	ldr	r2, [r7, #8]
 8006fd4:	629a      	str	r2, [r3, #40]	@ 0x28
 8006fd6:	68fb      	ldr	r3, [r7, #12]
 8006fd8:	88fa      	ldrh	r2, [r7, #6]
 8006fda:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8006fdc:	68fb      	ldr	r3, [r7, #12]
 8006fde:	88fa      	ldrh	r2, [r7, #6]
 8006fe0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006fe2:	68fb      	ldr	r3, [r7, #12]
 8006fe4:	2200      	movs	r2, #0
 8006fe6:	645a      	str	r2, [r3, #68]	@ 0x44
 8006fe8:	68fb      	ldr	r3, [r7, #12]
 8006fea:	2222      	movs	r2, #34	@ 0x22
 8006fec:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006ff0:	68fb      	ldr	r3, [r7, #12]
 8006ff2:	691b      	ldr	r3, [r3, #16]
 8006ff4:	2b00      	cmp	r3, #0
 8006ff6:	d007      	beq.n	8007008 <UART_Start_Receive_IT+0x46>
 8006ff8:	68fb      	ldr	r3, [r7, #12]
 8006ffa:	681b      	ldr	r3, [r3, #0]
 8006ffc:	68da      	ldr	r2, [r3, #12]
 8006ffe:	68fb      	ldr	r3, [r7, #12]
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007006:	60da      	str	r2, [r3, #12]
 8007008:	68fb      	ldr	r3, [r7, #12]
 800700a:	681b      	ldr	r3, [r3, #0]
 800700c:	695a      	ldr	r2, [r3, #20]
 800700e:	68fb      	ldr	r3, [r7, #12]
 8007010:	681b      	ldr	r3, [r3, #0]
 8007012:	f042 0201 	orr.w	r2, r2, #1
 8007016:	615a      	str	r2, [r3, #20]
 8007018:	68fb      	ldr	r3, [r7, #12]
 800701a:	681b      	ldr	r3, [r3, #0]
 800701c:	68da      	ldr	r2, [r3, #12]
 800701e:	68fb      	ldr	r3, [r7, #12]
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	f042 0220 	orr.w	r2, r2, #32
 8007026:	60da      	str	r2, [r3, #12]
 8007028:	2300      	movs	r3, #0
 800702a:	4618      	mov	r0, r3
 800702c:	3714      	adds	r7, #20
 800702e:	46bd      	mov	sp, r7
 8007030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007034:	4770      	bx	lr

08007036 <UART_EndRxTransfer>:
 8007036:	b480      	push	{r7}
 8007038:	b095      	sub	sp, #84	@ 0x54
 800703a:	af00      	add	r7, sp, #0
 800703c:	6078      	str	r0, [r7, #4]
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	681b      	ldr	r3, [r3, #0]
 8007042:	330c      	adds	r3, #12
 8007044:	637b      	str	r3, [r7, #52]	@ 0x34
 8007046:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007048:	e853 3f00 	ldrex	r3, [r3]
 800704c:	633b      	str	r3, [r7, #48]	@ 0x30
 800704e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007050:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007054:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	330c      	adds	r3, #12
 800705c:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800705e:	643a      	str	r2, [r7, #64]	@ 0x40
 8007060:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007062:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007064:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8007066:	e841 2300 	strex	r3, r2, [r1]
 800706a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800706c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800706e:	2b00      	cmp	r3, #0
 8007070:	d1e5      	bne.n	800703e <UART_EndRxTransfer+0x8>
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	681b      	ldr	r3, [r3, #0]
 8007076:	3314      	adds	r3, #20
 8007078:	623b      	str	r3, [r7, #32]
 800707a:	6a3b      	ldr	r3, [r7, #32]
 800707c:	e853 3f00 	ldrex	r3, [r3]
 8007080:	61fb      	str	r3, [r7, #28]
 8007082:	69fb      	ldr	r3, [r7, #28]
 8007084:	f023 0301 	bic.w	r3, r3, #1
 8007088:	64bb      	str	r3, [r7, #72]	@ 0x48
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	3314      	adds	r3, #20
 8007090:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007092:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007094:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007096:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8007098:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800709a:	e841 2300 	strex	r3, r2, [r1]
 800709e:	627b      	str	r3, [r7, #36]	@ 0x24
 80070a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d1e5      	bne.n	8007072 <UART_EndRxTransfer+0x3c>
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80070aa:	2b01      	cmp	r3, #1
 80070ac:	d119      	bne.n	80070e2 <UART_EndRxTransfer+0xac>
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	681b      	ldr	r3, [r3, #0]
 80070b2:	330c      	adds	r3, #12
 80070b4:	60fb      	str	r3, [r7, #12]
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	e853 3f00 	ldrex	r3, [r3]
 80070bc:	60bb      	str	r3, [r7, #8]
 80070be:	68bb      	ldr	r3, [r7, #8]
 80070c0:	f023 0310 	bic.w	r3, r3, #16
 80070c4:	647b      	str	r3, [r7, #68]	@ 0x44
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	330c      	adds	r3, #12
 80070cc:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80070ce:	61ba      	str	r2, [r7, #24]
 80070d0:	617b      	str	r3, [r7, #20]
 80070d2:	6979      	ldr	r1, [r7, #20]
 80070d4:	69ba      	ldr	r2, [r7, #24]
 80070d6:	e841 2300 	strex	r3, r2, [r1]
 80070da:	613b      	str	r3, [r7, #16]
 80070dc:	693b      	ldr	r3, [r7, #16]
 80070de:	2b00      	cmp	r3, #0
 80070e0:	d1e5      	bne.n	80070ae <UART_EndRxTransfer+0x78>
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	2220      	movs	r2, #32
 80070e6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	2200      	movs	r2, #0
 80070ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80070f0:	bf00      	nop
 80070f2:	3754      	adds	r7, #84	@ 0x54
 80070f4:	46bd      	mov	sp, r7
 80070f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070fa:	4770      	bx	lr

080070fc <UART_DMAAbortOnError>:
 80070fc:	b580      	push	{r7, lr}
 80070fe:	b084      	sub	sp, #16
 8007100:	af00      	add	r7, sp, #0
 8007102:	6078      	str	r0, [r7, #4]
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007108:	60fb      	str	r3, [r7, #12]
 800710a:	68fb      	ldr	r3, [r7, #12]
 800710c:	2200      	movs	r2, #0
 800710e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	2200      	movs	r2, #0
 8007114:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007116:	68f8      	ldr	r0, [r7, #12]
 8007118:	f7ff fee4 	bl	8006ee4 <HAL_UART_ErrorCallback>
 800711c:	bf00      	nop
 800711e:	3710      	adds	r7, #16
 8007120:	46bd      	mov	sp, r7
 8007122:	bd80      	pop	{r7, pc}

08007124 <UART_Transmit_IT>:
 8007124:	b480      	push	{r7}
 8007126:	b085      	sub	sp, #20
 8007128:	af00      	add	r7, sp, #0
 800712a:	6078      	str	r0, [r7, #4]
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007132:	b2db      	uxtb	r3, r3
 8007134:	2b21      	cmp	r3, #33	@ 0x21
 8007136:	d13e      	bne.n	80071b6 <UART_Transmit_IT+0x92>
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	689b      	ldr	r3, [r3, #8]
 800713c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007140:	d114      	bne.n	800716c <UART_Transmit_IT+0x48>
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	691b      	ldr	r3, [r3, #16]
 8007146:	2b00      	cmp	r3, #0
 8007148:	d110      	bne.n	800716c <UART_Transmit_IT+0x48>
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	6a1b      	ldr	r3, [r3, #32]
 800714e:	60fb      	str	r3, [r7, #12]
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	881b      	ldrh	r3, [r3, #0]
 8007154:	461a      	mov	r2, r3
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800715e:	605a      	str	r2, [r3, #4]
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	6a1b      	ldr	r3, [r3, #32]
 8007164:	1c9a      	adds	r2, r3, #2
 8007166:	687b      	ldr	r3, [r7, #4]
 8007168:	621a      	str	r2, [r3, #32]
 800716a:	e008      	b.n	800717e <UART_Transmit_IT+0x5a>
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	6a1b      	ldr	r3, [r3, #32]
 8007170:	1c59      	adds	r1, r3, #1
 8007172:	687a      	ldr	r2, [r7, #4]
 8007174:	6211      	str	r1, [r2, #32]
 8007176:	781a      	ldrb	r2, [r3, #0]
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	605a      	str	r2, [r3, #4]
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007182:	b29b      	uxth	r3, r3
 8007184:	3b01      	subs	r3, #1
 8007186:	b29b      	uxth	r3, r3
 8007188:	687a      	ldr	r2, [r7, #4]
 800718a:	4619      	mov	r1, r3
 800718c:	84d1      	strh	r1, [r2, #38]	@ 0x26
 800718e:	2b00      	cmp	r3, #0
 8007190:	d10f      	bne.n	80071b2 <UART_Transmit_IT+0x8e>
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	681b      	ldr	r3, [r3, #0]
 8007196:	68da      	ldr	r2, [r3, #12]
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	681b      	ldr	r3, [r3, #0]
 800719c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80071a0:	60da      	str	r2, [r3, #12]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	681b      	ldr	r3, [r3, #0]
 80071a6:	68da      	ldr	r2, [r3, #12]
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	681b      	ldr	r3, [r3, #0]
 80071ac:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80071b0:	60da      	str	r2, [r3, #12]
 80071b2:	2300      	movs	r3, #0
 80071b4:	e000      	b.n	80071b8 <UART_Transmit_IT+0x94>
 80071b6:	2302      	movs	r3, #2
 80071b8:	4618      	mov	r0, r3
 80071ba:	3714      	adds	r7, #20
 80071bc:	46bd      	mov	sp, r7
 80071be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071c2:	4770      	bx	lr

080071c4 <UART_EndTransmit_IT>:
 80071c4:	b580      	push	{r7, lr}
 80071c6:	b082      	sub	sp, #8
 80071c8:	af00      	add	r7, sp, #0
 80071ca:	6078      	str	r0, [r7, #4]
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	681b      	ldr	r3, [r3, #0]
 80071d0:	68da      	ldr	r2, [r3, #12]
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	681b      	ldr	r3, [r3, #0]
 80071d6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80071da:	60da      	str	r2, [r3, #12]
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	2220      	movs	r2, #32
 80071e0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80071e4:	6878      	ldr	r0, [r7, #4]
 80071e6:	f7ff fe73 	bl	8006ed0 <HAL_UART_TxCpltCallback>
 80071ea:	2300      	movs	r3, #0
 80071ec:	4618      	mov	r0, r3
 80071ee:	3708      	adds	r7, #8
 80071f0:	46bd      	mov	sp, r7
 80071f2:	bd80      	pop	{r7, pc}

080071f4 <UART_Receive_IT>:
 80071f4:	b580      	push	{r7, lr}
 80071f6:	b08c      	sub	sp, #48	@ 0x30
 80071f8:	af00      	add	r7, sp, #0
 80071fa:	6078      	str	r0, [r7, #4]
 80071fc:	687b      	ldr	r3, [r7, #4]
 80071fe:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8007202:	b2db      	uxtb	r3, r3
 8007204:	2b22      	cmp	r3, #34	@ 0x22
 8007206:	f040 80ae 	bne.w	8007366 <UART_Receive_IT+0x172>
 800720a:	687b      	ldr	r3, [r7, #4]
 800720c:	689b      	ldr	r3, [r3, #8]
 800720e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007212:	d117      	bne.n	8007244 <UART_Receive_IT+0x50>
 8007214:	687b      	ldr	r3, [r7, #4]
 8007216:	691b      	ldr	r3, [r3, #16]
 8007218:	2b00      	cmp	r3, #0
 800721a:	d113      	bne.n	8007244 <UART_Receive_IT+0x50>
 800721c:	2300      	movs	r3, #0
 800721e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007224:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	681b      	ldr	r3, [r3, #0]
 800722a:	685b      	ldr	r3, [r3, #4]
 800722c:	b29b      	uxth	r3, r3
 800722e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007232:	b29a      	uxth	r2, r3
 8007234:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007236:	801a      	strh	r2, [r3, #0]
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800723c:	1c9a      	adds	r2, r3, #2
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	629a      	str	r2, [r3, #40]	@ 0x28
 8007242:	e026      	b.n	8007292 <UART_Receive_IT+0x9e>
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007248:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800724a:	2300      	movs	r3, #0
 800724c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	689b      	ldr	r3, [r3, #8]
 8007252:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007256:	d007      	beq.n	8007268 <UART_Receive_IT+0x74>
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	689b      	ldr	r3, [r3, #8]
 800725c:	2b00      	cmp	r3, #0
 800725e:	d10a      	bne.n	8007276 <UART_Receive_IT+0x82>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	691b      	ldr	r3, [r3, #16]
 8007264:	2b00      	cmp	r3, #0
 8007266:	d106      	bne.n	8007276 <UART_Receive_IT+0x82>
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	681b      	ldr	r3, [r3, #0]
 800726c:	685b      	ldr	r3, [r3, #4]
 800726e:	b2da      	uxtb	r2, r3
 8007270:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007272:	701a      	strb	r2, [r3, #0]
 8007274:	e008      	b.n	8007288 <UART_Receive_IT+0x94>
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	681b      	ldr	r3, [r3, #0]
 800727a:	685b      	ldr	r3, [r3, #4]
 800727c:	b2db      	uxtb	r3, r3
 800727e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007282:	b2da      	uxtb	r2, r3
 8007284:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007286:	701a      	strb	r2, [r3, #0]
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800728c:	1c5a      	adds	r2, r3, #1
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	629a      	str	r2, [r3, #40]	@ 0x28
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007296:	b29b      	uxth	r3, r3
 8007298:	3b01      	subs	r3, #1
 800729a:	b29b      	uxth	r3, r3
 800729c:	687a      	ldr	r2, [r7, #4]
 800729e:	4619      	mov	r1, r3
 80072a0:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80072a2:	2b00      	cmp	r3, #0
 80072a4:	d15d      	bne.n	8007362 <UART_Receive_IT+0x16e>
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	681b      	ldr	r3, [r3, #0]
 80072aa:	68da      	ldr	r2, [r3, #12]
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	681b      	ldr	r3, [r3, #0]
 80072b0:	f022 0220 	bic.w	r2, r2, #32
 80072b4:	60da      	str	r2, [r3, #12]
 80072b6:	687b      	ldr	r3, [r7, #4]
 80072b8:	681b      	ldr	r3, [r3, #0]
 80072ba:	68da      	ldr	r2, [r3, #12]
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80072c4:	60da      	str	r2, [r3, #12]
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	681b      	ldr	r3, [r3, #0]
 80072ca:	695a      	ldr	r2, [r3, #20]
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	681b      	ldr	r3, [r3, #0]
 80072d0:	f022 0201 	bic.w	r2, r2, #1
 80072d4:	615a      	str	r2, [r3, #20]
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	2220      	movs	r2, #32
 80072da:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	2200      	movs	r2, #0
 80072e2:	635a      	str	r2, [r3, #52]	@ 0x34
 80072e4:	687b      	ldr	r3, [r7, #4]
 80072e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80072e8:	2b01      	cmp	r3, #1
 80072ea:	d135      	bne.n	8007358 <UART_Receive_IT+0x164>
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	2200      	movs	r2, #0
 80072f0:	631a      	str	r2, [r3, #48]	@ 0x30
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	681b      	ldr	r3, [r3, #0]
 80072f6:	330c      	adds	r3, #12
 80072f8:	617b      	str	r3, [r7, #20]
 80072fa:	697b      	ldr	r3, [r7, #20]
 80072fc:	e853 3f00 	ldrex	r3, [r3]
 8007300:	613b      	str	r3, [r7, #16]
 8007302:	693b      	ldr	r3, [r7, #16]
 8007304:	f023 0310 	bic.w	r3, r3, #16
 8007308:	627b      	str	r3, [r7, #36]	@ 0x24
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	681b      	ldr	r3, [r3, #0]
 800730e:	330c      	adds	r3, #12
 8007310:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007312:	623a      	str	r2, [r7, #32]
 8007314:	61fb      	str	r3, [r7, #28]
 8007316:	69f9      	ldr	r1, [r7, #28]
 8007318:	6a3a      	ldr	r2, [r7, #32]
 800731a:	e841 2300 	strex	r3, r2, [r1]
 800731e:	61bb      	str	r3, [r7, #24]
 8007320:	69bb      	ldr	r3, [r7, #24]
 8007322:	2b00      	cmp	r3, #0
 8007324:	d1e5      	bne.n	80072f2 <UART_Receive_IT+0xfe>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	681b      	ldr	r3, [r3, #0]
 800732a:	681b      	ldr	r3, [r3, #0]
 800732c:	f003 0310 	and.w	r3, r3, #16
 8007330:	2b10      	cmp	r3, #16
 8007332:	d10a      	bne.n	800734a <UART_Receive_IT+0x156>
 8007334:	2300      	movs	r3, #0
 8007336:	60fb      	str	r3, [r7, #12]
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	681b      	ldr	r3, [r3, #0]
 800733c:	681b      	ldr	r3, [r3, #0]
 800733e:	60fb      	str	r3, [r7, #12]
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	681b      	ldr	r3, [r3, #0]
 8007344:	685b      	ldr	r3, [r3, #4]
 8007346:	60fb      	str	r3, [r7, #12]
 8007348:	68fb      	ldr	r3, [r7, #12]
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800734e:	4619      	mov	r1, r3
 8007350:	6878      	ldr	r0, [r7, #4]
 8007352:	f7ff fdd1 	bl	8006ef8 <HAL_UARTEx_RxEventCallback>
 8007356:	e002      	b.n	800735e <UART_Receive_IT+0x16a>
 8007358:	6878      	ldr	r0, [r7, #4]
 800735a:	f7fb fcf7 	bl	8002d4c <HAL_UART_RxCpltCallback>
 800735e:	2300      	movs	r3, #0
 8007360:	e002      	b.n	8007368 <UART_Receive_IT+0x174>
 8007362:	2300      	movs	r3, #0
 8007364:	e000      	b.n	8007368 <UART_Receive_IT+0x174>
 8007366:	2302      	movs	r3, #2
 8007368:	4618      	mov	r0, r3
 800736a:	3730      	adds	r7, #48	@ 0x30
 800736c:	46bd      	mov	sp, r7
 800736e:	bd80      	pop	{r7, pc}

08007370 <UART_SetConfig>:
 8007370:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007374:	b0c0      	sub	sp, #256	@ 0x100
 8007376:	af00      	add	r7, sp, #0
 8007378:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 800737c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007380:	681b      	ldr	r3, [r3, #0]
 8007382:	691b      	ldr	r3, [r3, #16]
 8007384:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8007388:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800738c:	68d9      	ldr	r1, [r3, #12]
 800738e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007392:	681a      	ldr	r2, [r3, #0]
 8007394:	ea40 0301 	orr.w	r3, r0, r1
 8007398:	6113      	str	r3, [r2, #16]
 800739a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800739e:	689a      	ldr	r2, [r3, #8]
 80073a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073a4:	691b      	ldr	r3, [r3, #16]
 80073a6:	431a      	orrs	r2, r3
 80073a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073ac:	695b      	ldr	r3, [r3, #20]
 80073ae:	431a      	orrs	r2, r3
 80073b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073b4:	69db      	ldr	r3, [r3, #28]
 80073b6:	4313      	orrs	r3, r2
 80073b8:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80073bc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	68db      	ldr	r3, [r3, #12]
 80073c4:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80073c8:	f021 010c 	bic.w	r1, r1, #12
 80073cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073d0:	681a      	ldr	r2, [r3, #0]
 80073d2:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80073d6:	430b      	orrs	r3, r1
 80073d8:	60d3      	str	r3, [r2, #12]
 80073da:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	695b      	ldr	r3, [r3, #20]
 80073e2:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80073e6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073ea:	6999      	ldr	r1, [r3, #24]
 80073ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073f0:	681a      	ldr	r2, [r3, #0]
 80073f2:	ea40 0301 	orr.w	r3, r0, r1
 80073f6:	6153      	str	r3, [r2, #20]
 80073f8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073fc:	681a      	ldr	r2, [r3, #0]
 80073fe:	4b8f      	ldr	r3, [pc, #572]	@ (800763c <UART_SetConfig+0x2cc>)
 8007400:	429a      	cmp	r2, r3
 8007402:	d005      	beq.n	8007410 <UART_SetConfig+0xa0>
 8007404:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007408:	681a      	ldr	r2, [r3, #0]
 800740a:	4b8d      	ldr	r3, [pc, #564]	@ (8007640 <UART_SetConfig+0x2d0>)
 800740c:	429a      	cmp	r2, r3
 800740e:	d104      	bne.n	800741a <UART_SetConfig+0xaa>
 8007410:	f7fd fe98 	bl	8005144 <HAL_RCC_GetPCLK2Freq>
 8007414:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8007418:	e003      	b.n	8007422 <UART_SetConfig+0xb2>
 800741a:	f7fd fe7f 	bl	800511c <HAL_RCC_GetPCLK1Freq>
 800741e:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8007422:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007426:	69db      	ldr	r3, [r3, #28]
 8007428:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800742c:	f040 810c 	bne.w	8007648 <UART_SetConfig+0x2d8>
 8007430:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007434:	2200      	movs	r2, #0
 8007436:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800743a:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 800743e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8007442:	4622      	mov	r2, r4
 8007444:	462b      	mov	r3, r5
 8007446:	1891      	adds	r1, r2, r2
 8007448:	65b9      	str	r1, [r7, #88]	@ 0x58
 800744a:	415b      	adcs	r3, r3
 800744c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800744e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007452:	4621      	mov	r1, r4
 8007454:	eb12 0801 	adds.w	r8, r2, r1
 8007458:	4629      	mov	r1, r5
 800745a:	eb43 0901 	adc.w	r9, r3, r1
 800745e:	f04f 0200 	mov.w	r2, #0
 8007462:	f04f 0300 	mov.w	r3, #0
 8007466:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800746a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800746e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007472:	4690      	mov	r8, r2
 8007474:	4699      	mov	r9, r3
 8007476:	4623      	mov	r3, r4
 8007478:	eb18 0303 	adds.w	r3, r8, r3
 800747c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8007480:	462b      	mov	r3, r5
 8007482:	eb49 0303 	adc.w	r3, r9, r3
 8007486:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800748a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800748e:	685b      	ldr	r3, [r3, #4]
 8007490:	2200      	movs	r2, #0
 8007492:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007496:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800749a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800749e:	460b      	mov	r3, r1
 80074a0:	18db      	adds	r3, r3, r3
 80074a2:	653b      	str	r3, [r7, #80]	@ 0x50
 80074a4:	4613      	mov	r3, r2
 80074a6:	eb42 0303 	adc.w	r3, r2, r3
 80074aa:	657b      	str	r3, [r7, #84]	@ 0x54
 80074ac:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80074b0:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80074b4:	f7f9 fbc8 	bl	8000c48 <__aeabi_uldivmod>
 80074b8:	4602      	mov	r2, r0
 80074ba:	460b      	mov	r3, r1
 80074bc:	4b61      	ldr	r3, [pc, #388]	@ (8007644 <UART_SetConfig+0x2d4>)
 80074be:	fba3 2302 	umull	r2, r3, r3, r2
 80074c2:	095b      	lsrs	r3, r3, #5
 80074c4:	011c      	lsls	r4, r3, #4
 80074c6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80074ca:	2200      	movs	r2, #0
 80074cc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80074d0:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80074d4:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80074d8:	4642      	mov	r2, r8
 80074da:	464b      	mov	r3, r9
 80074dc:	1891      	adds	r1, r2, r2
 80074de:	64b9      	str	r1, [r7, #72]	@ 0x48
 80074e0:	415b      	adcs	r3, r3
 80074e2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80074e4:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80074e8:	4641      	mov	r1, r8
 80074ea:	eb12 0a01 	adds.w	sl, r2, r1
 80074ee:	4649      	mov	r1, r9
 80074f0:	eb43 0b01 	adc.w	fp, r3, r1
 80074f4:	f04f 0200 	mov.w	r2, #0
 80074f8:	f04f 0300 	mov.w	r3, #0
 80074fc:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8007500:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8007504:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007508:	4692      	mov	sl, r2
 800750a:	469b      	mov	fp, r3
 800750c:	4643      	mov	r3, r8
 800750e:	eb1a 0303 	adds.w	r3, sl, r3
 8007512:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8007516:	464b      	mov	r3, r9
 8007518:	eb4b 0303 	adc.w	r3, fp, r3
 800751c:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8007520:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007524:	685b      	ldr	r3, [r3, #4]
 8007526:	2200      	movs	r2, #0
 8007528:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800752c:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8007530:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8007534:	460b      	mov	r3, r1
 8007536:	18db      	adds	r3, r3, r3
 8007538:	643b      	str	r3, [r7, #64]	@ 0x40
 800753a:	4613      	mov	r3, r2
 800753c:	eb42 0303 	adc.w	r3, r2, r3
 8007540:	647b      	str	r3, [r7, #68]	@ 0x44
 8007542:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8007546:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800754a:	f7f9 fb7d 	bl	8000c48 <__aeabi_uldivmod>
 800754e:	4602      	mov	r2, r0
 8007550:	460b      	mov	r3, r1
 8007552:	4611      	mov	r1, r2
 8007554:	4b3b      	ldr	r3, [pc, #236]	@ (8007644 <UART_SetConfig+0x2d4>)
 8007556:	fba3 2301 	umull	r2, r3, r3, r1
 800755a:	095b      	lsrs	r3, r3, #5
 800755c:	2264      	movs	r2, #100	@ 0x64
 800755e:	fb02 f303 	mul.w	r3, r2, r3
 8007562:	1acb      	subs	r3, r1, r3
 8007564:	00db      	lsls	r3, r3, #3
 8007566:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800756a:	4b36      	ldr	r3, [pc, #216]	@ (8007644 <UART_SetConfig+0x2d4>)
 800756c:	fba3 2302 	umull	r2, r3, r3, r2
 8007570:	095b      	lsrs	r3, r3, #5
 8007572:	005b      	lsls	r3, r3, #1
 8007574:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8007578:	441c      	add	r4, r3
 800757a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800757e:	2200      	movs	r2, #0
 8007580:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8007584:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8007588:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 800758c:	4642      	mov	r2, r8
 800758e:	464b      	mov	r3, r9
 8007590:	1891      	adds	r1, r2, r2
 8007592:	63b9      	str	r1, [r7, #56]	@ 0x38
 8007594:	415b      	adcs	r3, r3
 8007596:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007598:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 800759c:	4641      	mov	r1, r8
 800759e:	1851      	adds	r1, r2, r1
 80075a0:	6339      	str	r1, [r7, #48]	@ 0x30
 80075a2:	4649      	mov	r1, r9
 80075a4:	414b      	adcs	r3, r1
 80075a6:	637b      	str	r3, [r7, #52]	@ 0x34
 80075a8:	f04f 0200 	mov.w	r2, #0
 80075ac:	f04f 0300 	mov.w	r3, #0
 80075b0:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80075b4:	4659      	mov	r1, fp
 80075b6:	00cb      	lsls	r3, r1, #3
 80075b8:	4651      	mov	r1, sl
 80075ba:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80075be:	4651      	mov	r1, sl
 80075c0:	00ca      	lsls	r2, r1, #3
 80075c2:	4610      	mov	r0, r2
 80075c4:	4619      	mov	r1, r3
 80075c6:	4603      	mov	r3, r0
 80075c8:	4642      	mov	r2, r8
 80075ca:	189b      	adds	r3, r3, r2
 80075cc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80075d0:	464b      	mov	r3, r9
 80075d2:	460a      	mov	r2, r1
 80075d4:	eb42 0303 	adc.w	r3, r2, r3
 80075d8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80075dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80075e0:	685b      	ldr	r3, [r3, #4]
 80075e2:	2200      	movs	r2, #0
 80075e4:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80075e8:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80075ec:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80075f0:	460b      	mov	r3, r1
 80075f2:	18db      	adds	r3, r3, r3
 80075f4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80075f6:	4613      	mov	r3, r2
 80075f8:	eb42 0303 	adc.w	r3, r2, r3
 80075fc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80075fe:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8007602:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8007606:	f7f9 fb1f 	bl	8000c48 <__aeabi_uldivmod>
 800760a:	4602      	mov	r2, r0
 800760c:	460b      	mov	r3, r1
 800760e:	4b0d      	ldr	r3, [pc, #52]	@ (8007644 <UART_SetConfig+0x2d4>)
 8007610:	fba3 1302 	umull	r1, r3, r3, r2
 8007614:	095b      	lsrs	r3, r3, #5
 8007616:	2164      	movs	r1, #100	@ 0x64
 8007618:	fb01 f303 	mul.w	r3, r1, r3
 800761c:	1ad3      	subs	r3, r2, r3
 800761e:	00db      	lsls	r3, r3, #3
 8007620:	3332      	adds	r3, #50	@ 0x32
 8007622:	4a08      	ldr	r2, [pc, #32]	@ (8007644 <UART_SetConfig+0x2d4>)
 8007624:	fba2 2303 	umull	r2, r3, r2, r3
 8007628:	095b      	lsrs	r3, r3, #5
 800762a:	f003 0207 	and.w	r2, r3, #7
 800762e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007632:	681b      	ldr	r3, [r3, #0]
 8007634:	4422      	add	r2, r4
 8007636:	609a      	str	r2, [r3, #8]
 8007638:	e106      	b.n	8007848 <UART_SetConfig+0x4d8>
 800763a:	bf00      	nop
 800763c:	40011000 	.word	0x40011000
 8007640:	40011400 	.word	0x40011400
 8007644:	51eb851f 	.word	0x51eb851f
 8007648:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800764c:	2200      	movs	r2, #0
 800764e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8007652:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8007656:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800765a:	4642      	mov	r2, r8
 800765c:	464b      	mov	r3, r9
 800765e:	1891      	adds	r1, r2, r2
 8007660:	6239      	str	r1, [r7, #32]
 8007662:	415b      	adcs	r3, r3
 8007664:	627b      	str	r3, [r7, #36]	@ 0x24
 8007666:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800766a:	4641      	mov	r1, r8
 800766c:	1854      	adds	r4, r2, r1
 800766e:	4649      	mov	r1, r9
 8007670:	eb43 0501 	adc.w	r5, r3, r1
 8007674:	f04f 0200 	mov.w	r2, #0
 8007678:	f04f 0300 	mov.w	r3, #0
 800767c:	00eb      	lsls	r3, r5, #3
 800767e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007682:	00e2      	lsls	r2, r4, #3
 8007684:	4614      	mov	r4, r2
 8007686:	461d      	mov	r5, r3
 8007688:	4643      	mov	r3, r8
 800768a:	18e3      	adds	r3, r4, r3
 800768c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8007690:	464b      	mov	r3, r9
 8007692:	eb45 0303 	adc.w	r3, r5, r3
 8007696:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800769a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800769e:	685b      	ldr	r3, [r3, #4]
 80076a0:	2200      	movs	r2, #0
 80076a2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80076a6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80076aa:	f04f 0200 	mov.w	r2, #0
 80076ae:	f04f 0300 	mov.w	r3, #0
 80076b2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80076b6:	4629      	mov	r1, r5
 80076b8:	008b      	lsls	r3, r1, #2
 80076ba:	4621      	mov	r1, r4
 80076bc:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80076c0:	4621      	mov	r1, r4
 80076c2:	008a      	lsls	r2, r1, #2
 80076c4:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80076c8:	f7f9 fabe 	bl	8000c48 <__aeabi_uldivmod>
 80076cc:	4602      	mov	r2, r0
 80076ce:	460b      	mov	r3, r1
 80076d0:	4b60      	ldr	r3, [pc, #384]	@ (8007854 <UART_SetConfig+0x4e4>)
 80076d2:	fba3 2302 	umull	r2, r3, r3, r2
 80076d6:	095b      	lsrs	r3, r3, #5
 80076d8:	011c      	lsls	r4, r3, #4
 80076da:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80076de:	2200      	movs	r2, #0
 80076e0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80076e4:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80076e8:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80076ec:	4642      	mov	r2, r8
 80076ee:	464b      	mov	r3, r9
 80076f0:	1891      	adds	r1, r2, r2
 80076f2:	61b9      	str	r1, [r7, #24]
 80076f4:	415b      	adcs	r3, r3
 80076f6:	61fb      	str	r3, [r7, #28]
 80076f8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80076fc:	4641      	mov	r1, r8
 80076fe:	1851      	adds	r1, r2, r1
 8007700:	6139      	str	r1, [r7, #16]
 8007702:	4649      	mov	r1, r9
 8007704:	414b      	adcs	r3, r1
 8007706:	617b      	str	r3, [r7, #20]
 8007708:	f04f 0200 	mov.w	r2, #0
 800770c:	f04f 0300 	mov.w	r3, #0
 8007710:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007714:	4659      	mov	r1, fp
 8007716:	00cb      	lsls	r3, r1, #3
 8007718:	4651      	mov	r1, sl
 800771a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800771e:	4651      	mov	r1, sl
 8007720:	00ca      	lsls	r2, r1, #3
 8007722:	4610      	mov	r0, r2
 8007724:	4619      	mov	r1, r3
 8007726:	4603      	mov	r3, r0
 8007728:	4642      	mov	r2, r8
 800772a:	189b      	adds	r3, r3, r2
 800772c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8007730:	464b      	mov	r3, r9
 8007732:	460a      	mov	r2, r1
 8007734:	eb42 0303 	adc.w	r3, r2, r3
 8007738:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800773c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007740:	685b      	ldr	r3, [r3, #4]
 8007742:	2200      	movs	r2, #0
 8007744:	67bb      	str	r3, [r7, #120]	@ 0x78
 8007746:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8007748:	f04f 0200 	mov.w	r2, #0
 800774c:	f04f 0300 	mov.w	r3, #0
 8007750:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8007754:	4649      	mov	r1, r9
 8007756:	008b      	lsls	r3, r1, #2
 8007758:	4641      	mov	r1, r8
 800775a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800775e:	4641      	mov	r1, r8
 8007760:	008a      	lsls	r2, r1, #2
 8007762:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007766:	f7f9 fa6f 	bl	8000c48 <__aeabi_uldivmod>
 800776a:	4602      	mov	r2, r0
 800776c:	460b      	mov	r3, r1
 800776e:	4611      	mov	r1, r2
 8007770:	4b38      	ldr	r3, [pc, #224]	@ (8007854 <UART_SetConfig+0x4e4>)
 8007772:	fba3 2301 	umull	r2, r3, r3, r1
 8007776:	095b      	lsrs	r3, r3, #5
 8007778:	2264      	movs	r2, #100	@ 0x64
 800777a:	fb02 f303 	mul.w	r3, r2, r3
 800777e:	1acb      	subs	r3, r1, r3
 8007780:	011b      	lsls	r3, r3, #4
 8007782:	3332      	adds	r3, #50	@ 0x32
 8007784:	4a33      	ldr	r2, [pc, #204]	@ (8007854 <UART_SetConfig+0x4e4>)
 8007786:	fba2 2303 	umull	r2, r3, r2, r3
 800778a:	095b      	lsrs	r3, r3, #5
 800778c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007790:	441c      	add	r4, r3
 8007792:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007796:	2200      	movs	r2, #0
 8007798:	673b      	str	r3, [r7, #112]	@ 0x70
 800779a:	677a      	str	r2, [r7, #116]	@ 0x74
 800779c:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80077a0:	4642      	mov	r2, r8
 80077a2:	464b      	mov	r3, r9
 80077a4:	1891      	adds	r1, r2, r2
 80077a6:	60b9      	str	r1, [r7, #8]
 80077a8:	415b      	adcs	r3, r3
 80077aa:	60fb      	str	r3, [r7, #12]
 80077ac:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80077b0:	4641      	mov	r1, r8
 80077b2:	1851      	adds	r1, r2, r1
 80077b4:	6039      	str	r1, [r7, #0]
 80077b6:	4649      	mov	r1, r9
 80077b8:	414b      	adcs	r3, r1
 80077ba:	607b      	str	r3, [r7, #4]
 80077bc:	f04f 0200 	mov.w	r2, #0
 80077c0:	f04f 0300 	mov.w	r3, #0
 80077c4:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80077c8:	4659      	mov	r1, fp
 80077ca:	00cb      	lsls	r3, r1, #3
 80077cc:	4651      	mov	r1, sl
 80077ce:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80077d2:	4651      	mov	r1, sl
 80077d4:	00ca      	lsls	r2, r1, #3
 80077d6:	4610      	mov	r0, r2
 80077d8:	4619      	mov	r1, r3
 80077da:	4603      	mov	r3, r0
 80077dc:	4642      	mov	r2, r8
 80077de:	189b      	adds	r3, r3, r2
 80077e0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80077e2:	464b      	mov	r3, r9
 80077e4:	460a      	mov	r2, r1
 80077e6:	eb42 0303 	adc.w	r3, r2, r3
 80077ea:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80077ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80077f0:	685b      	ldr	r3, [r3, #4]
 80077f2:	2200      	movs	r2, #0
 80077f4:	663b      	str	r3, [r7, #96]	@ 0x60
 80077f6:	667a      	str	r2, [r7, #100]	@ 0x64
 80077f8:	f04f 0200 	mov.w	r2, #0
 80077fc:	f04f 0300 	mov.w	r3, #0
 8007800:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8007804:	4649      	mov	r1, r9
 8007806:	008b      	lsls	r3, r1, #2
 8007808:	4641      	mov	r1, r8
 800780a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800780e:	4641      	mov	r1, r8
 8007810:	008a      	lsls	r2, r1, #2
 8007812:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8007816:	f7f9 fa17 	bl	8000c48 <__aeabi_uldivmod>
 800781a:	4602      	mov	r2, r0
 800781c:	460b      	mov	r3, r1
 800781e:	4b0d      	ldr	r3, [pc, #52]	@ (8007854 <UART_SetConfig+0x4e4>)
 8007820:	fba3 1302 	umull	r1, r3, r3, r2
 8007824:	095b      	lsrs	r3, r3, #5
 8007826:	2164      	movs	r1, #100	@ 0x64
 8007828:	fb01 f303 	mul.w	r3, r1, r3
 800782c:	1ad3      	subs	r3, r2, r3
 800782e:	011b      	lsls	r3, r3, #4
 8007830:	3332      	adds	r3, #50	@ 0x32
 8007832:	4a08      	ldr	r2, [pc, #32]	@ (8007854 <UART_SetConfig+0x4e4>)
 8007834:	fba2 2303 	umull	r2, r3, r2, r3
 8007838:	095b      	lsrs	r3, r3, #5
 800783a:	f003 020f 	and.w	r2, r3, #15
 800783e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	4422      	add	r2, r4
 8007846:	609a      	str	r2, [r3, #8]
 8007848:	bf00      	nop
 800784a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 800784e:	46bd      	mov	sp, r7
 8007850:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007854:	51eb851f 	.word	0x51eb851f

08007858 <FSMC_NORSRAM_Init>:
 8007858:	b480      	push	{r7}
 800785a:	b087      	sub	sp, #28
 800785c:	af00      	add	r7, sp, #0
 800785e:	6078      	str	r0, [r7, #4]
 8007860:	6039      	str	r1, [r7, #0]
 8007862:	683b      	ldr	r3, [r7, #0]
 8007864:	681a      	ldr	r2, [r3, #0]
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800786c:	683a      	ldr	r2, [r7, #0]
 800786e:	6812      	ldr	r2, [r2, #0]
 8007870:	f023 0101 	bic.w	r1, r3, #1
 8007874:	687b      	ldr	r3, [r7, #4]
 8007876:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800787a:	683b      	ldr	r3, [r7, #0]
 800787c:	689b      	ldr	r3, [r3, #8]
 800787e:	2b08      	cmp	r3, #8
 8007880:	d102      	bne.n	8007888 <FSMC_NORSRAM_Init+0x30>
 8007882:	2340      	movs	r3, #64	@ 0x40
 8007884:	617b      	str	r3, [r7, #20]
 8007886:	e001      	b.n	800788c <FSMC_NORSRAM_Init+0x34>
 8007888:	2300      	movs	r3, #0
 800788a:	617b      	str	r3, [r7, #20]
 800788c:	683b      	ldr	r3, [r7, #0]
 800788e:	685a      	ldr	r2, [r3, #4]
 8007890:	697b      	ldr	r3, [r7, #20]
 8007892:	431a      	orrs	r2, r3
 8007894:	683b      	ldr	r3, [r7, #0]
 8007896:	689b      	ldr	r3, [r3, #8]
 8007898:	431a      	orrs	r2, r3
 800789a:	683b      	ldr	r3, [r7, #0]
 800789c:	68db      	ldr	r3, [r3, #12]
 800789e:	431a      	orrs	r2, r3
 80078a0:	683b      	ldr	r3, [r7, #0]
 80078a2:	691b      	ldr	r3, [r3, #16]
 80078a4:	431a      	orrs	r2, r3
 80078a6:	683b      	ldr	r3, [r7, #0]
 80078a8:	695b      	ldr	r3, [r3, #20]
 80078aa:	431a      	orrs	r2, r3
 80078ac:	683b      	ldr	r3, [r7, #0]
 80078ae:	69db      	ldr	r3, [r3, #28]
 80078b0:	431a      	orrs	r2, r3
 80078b2:	683b      	ldr	r3, [r7, #0]
 80078b4:	6a1b      	ldr	r3, [r3, #32]
 80078b6:	431a      	orrs	r2, r3
 80078b8:	683b      	ldr	r3, [r7, #0]
 80078ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80078bc:	431a      	orrs	r2, r3
 80078be:	683b      	ldr	r3, [r7, #0]
 80078c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80078c2:	431a      	orrs	r2, r3
 80078c4:	683b      	ldr	r3, [r7, #0]
 80078c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80078c8:	431a      	orrs	r2, r3
 80078ca:	683b      	ldr	r3, [r7, #0]
 80078cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80078ce:	4313      	orrs	r3, r2
 80078d0:	613b      	str	r3, [r7, #16]
 80078d2:	683b      	ldr	r3, [r7, #0]
 80078d4:	699b      	ldr	r3, [r3, #24]
 80078d6:	693a      	ldr	r2, [r7, #16]
 80078d8:	4313      	orrs	r3, r2
 80078da:	613b      	str	r3, [r7, #16]
 80078dc:	683b      	ldr	r3, [r7, #0]
 80078de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80078e0:	693a      	ldr	r2, [r7, #16]
 80078e2:	4313      	orrs	r3, r2
 80078e4:	613b      	str	r3, [r7, #16]
 80078e6:	4b10      	ldr	r3, [pc, #64]	@ (8007928 <FSMC_NORSRAM_Init+0xd0>)
 80078e8:	60fb      	str	r3, [r7, #12]
 80078ea:	68fb      	ldr	r3, [r7, #12]
 80078ec:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80078f0:	60fb      	str	r3, [r7, #12]
 80078f2:	68fb      	ldr	r3, [r7, #12]
 80078f4:	f443 23e0 	orr.w	r3, r3, #458752	@ 0x70000
 80078f8:	60fb      	str	r3, [r7, #12]
 80078fa:	683b      	ldr	r3, [r7, #0]
 80078fc:	681a      	ldr	r2, [r3, #0]
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8007904:	68fb      	ldr	r3, [r7, #12]
 8007906:	43db      	mvns	r3, r3
 8007908:	ea02 0103 	and.w	r1, r2, r3
 800790c:	683b      	ldr	r3, [r7, #0]
 800790e:	681a      	ldr	r2, [r3, #0]
 8007910:	693b      	ldr	r3, [r7, #16]
 8007912:	4319      	orrs	r1, r3
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800791a:	2300      	movs	r3, #0
 800791c:	4618      	mov	r0, r3
 800791e:	371c      	adds	r7, #28
 8007920:	46bd      	mov	sp, r7
 8007922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007926:	4770      	bx	lr
 8007928:	0008fb7f 	.word	0x0008fb7f

0800792c <FSMC_NORSRAM_Timing_Init>:
 800792c:	b480      	push	{r7}
 800792e:	b085      	sub	sp, #20
 8007930:	af00      	add	r7, sp, #0
 8007932:	60f8      	str	r0, [r7, #12]
 8007934:	60b9      	str	r1, [r7, #8]
 8007936:	607a      	str	r2, [r7, #4]
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	1c5a      	adds	r2, r3, #1
 800793c:	68fb      	ldr	r3, [r7, #12]
 800793e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007942:	f003 4140 	and.w	r1, r3, #3221225472	@ 0xc0000000
 8007946:	68bb      	ldr	r3, [r7, #8]
 8007948:	681a      	ldr	r2, [r3, #0]
 800794a:	68bb      	ldr	r3, [r7, #8]
 800794c:	685b      	ldr	r3, [r3, #4]
 800794e:	011b      	lsls	r3, r3, #4
 8007950:	431a      	orrs	r2, r3
 8007952:	68bb      	ldr	r3, [r7, #8]
 8007954:	689b      	ldr	r3, [r3, #8]
 8007956:	021b      	lsls	r3, r3, #8
 8007958:	431a      	orrs	r2, r3
 800795a:	68bb      	ldr	r3, [r7, #8]
 800795c:	68db      	ldr	r3, [r3, #12]
 800795e:	041b      	lsls	r3, r3, #16
 8007960:	431a      	orrs	r2, r3
 8007962:	68bb      	ldr	r3, [r7, #8]
 8007964:	691b      	ldr	r3, [r3, #16]
 8007966:	3b01      	subs	r3, #1
 8007968:	051b      	lsls	r3, r3, #20
 800796a:	431a      	orrs	r2, r3
 800796c:	68bb      	ldr	r3, [r7, #8]
 800796e:	695b      	ldr	r3, [r3, #20]
 8007970:	3b02      	subs	r3, #2
 8007972:	061b      	lsls	r3, r3, #24
 8007974:	431a      	orrs	r2, r3
 8007976:	68bb      	ldr	r3, [r7, #8]
 8007978:	699b      	ldr	r3, [r3, #24]
 800797a:	4313      	orrs	r3, r2
 800797c:	687a      	ldr	r2, [r7, #4]
 800797e:	3201      	adds	r2, #1
 8007980:	4319      	orrs	r1, r3
 8007982:	68fb      	ldr	r3, [r7, #12]
 8007984:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007988:	2300      	movs	r3, #0
 800798a:	4618      	mov	r0, r3
 800798c:	3714      	adds	r7, #20
 800798e:	46bd      	mov	sp, r7
 8007990:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007994:	4770      	bx	lr
	...

08007998 <FSMC_NORSRAM_Extended_Timing_Init>:
 8007998:	b480      	push	{r7}
 800799a:	b085      	sub	sp, #20
 800799c:	af00      	add	r7, sp, #0
 800799e:	60f8      	str	r0, [r7, #12]
 80079a0:	60b9      	str	r1, [r7, #8]
 80079a2:	607a      	str	r2, [r7, #4]
 80079a4:	603b      	str	r3, [r7, #0]
 80079a6:	683b      	ldr	r3, [r7, #0]
 80079a8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80079ac:	d11d      	bne.n	80079ea <FSMC_NORSRAM_Extended_Timing_Init+0x52>
 80079ae:	68fb      	ldr	r3, [r7, #12]
 80079b0:	687a      	ldr	r2, [r7, #4]
 80079b2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80079b6:	4b13      	ldr	r3, [pc, #76]	@ (8007a04 <FSMC_NORSRAM_Extended_Timing_Init+0x6c>)
 80079b8:	4013      	ands	r3, r2
 80079ba:	68ba      	ldr	r2, [r7, #8]
 80079bc:	6811      	ldr	r1, [r2, #0]
 80079be:	68ba      	ldr	r2, [r7, #8]
 80079c0:	6852      	ldr	r2, [r2, #4]
 80079c2:	0112      	lsls	r2, r2, #4
 80079c4:	4311      	orrs	r1, r2
 80079c6:	68ba      	ldr	r2, [r7, #8]
 80079c8:	6892      	ldr	r2, [r2, #8]
 80079ca:	0212      	lsls	r2, r2, #8
 80079cc:	4311      	orrs	r1, r2
 80079ce:	68ba      	ldr	r2, [r7, #8]
 80079d0:	6992      	ldr	r2, [r2, #24]
 80079d2:	4311      	orrs	r1, r2
 80079d4:	68ba      	ldr	r2, [r7, #8]
 80079d6:	68d2      	ldr	r2, [r2, #12]
 80079d8:	0412      	lsls	r2, r2, #16
 80079da:	430a      	orrs	r2, r1
 80079dc:	ea43 0102 	orr.w	r1, r3, r2
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	687a      	ldr	r2, [r7, #4]
 80079e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80079e8:	e005      	b.n	80079f6 <FSMC_NORSRAM_Extended_Timing_Init+0x5e>
 80079ea:	68fb      	ldr	r3, [r7, #12]
 80079ec:	687a      	ldr	r2, [r7, #4]
 80079ee:	f06f 4170 	mvn.w	r1, #4026531840	@ 0xf0000000
 80079f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80079f6:	2300      	movs	r3, #0
 80079f8:	4618      	mov	r0, r3
 80079fa:	3714      	adds	r7, #20
 80079fc:	46bd      	mov	sp, r7
 80079fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a02:	4770      	bx	lr
 8007a04:	cff00000 	.word	0xcff00000

08007a08 <__cvt>:
 8007a08:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007a0c:	ec57 6b10 	vmov	r6, r7, d0
 8007a10:	2f00      	cmp	r7, #0
 8007a12:	460c      	mov	r4, r1
 8007a14:	4619      	mov	r1, r3
 8007a16:	463b      	mov	r3, r7
 8007a18:	bfbb      	ittet	lt
 8007a1a:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8007a1e:	461f      	movlt	r7, r3
 8007a20:	2300      	movge	r3, #0
 8007a22:	232d      	movlt	r3, #45	@ 0x2d
 8007a24:	700b      	strb	r3, [r1, #0]
 8007a26:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007a28:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8007a2c:	4691      	mov	r9, r2
 8007a2e:	f023 0820 	bic.w	r8, r3, #32
 8007a32:	bfbc      	itt	lt
 8007a34:	4632      	movlt	r2, r6
 8007a36:	4616      	movlt	r6, r2
 8007a38:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8007a3c:	d005      	beq.n	8007a4a <__cvt+0x42>
 8007a3e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8007a42:	d100      	bne.n	8007a46 <__cvt+0x3e>
 8007a44:	3401      	adds	r4, #1
 8007a46:	2102      	movs	r1, #2
 8007a48:	e000      	b.n	8007a4c <__cvt+0x44>
 8007a4a:	2103      	movs	r1, #3
 8007a4c:	ab03      	add	r3, sp, #12
 8007a4e:	9301      	str	r3, [sp, #4]
 8007a50:	ab02      	add	r3, sp, #8
 8007a52:	9300      	str	r3, [sp, #0]
 8007a54:	ec47 6b10 	vmov	d0, r6, r7
 8007a58:	4653      	mov	r3, sl
 8007a5a:	4622      	mov	r2, r4
 8007a5c:	f000 fe5c 	bl	8008718 <_dtoa_r>
 8007a60:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8007a64:	4605      	mov	r5, r0
 8007a66:	d119      	bne.n	8007a9c <__cvt+0x94>
 8007a68:	f019 0f01 	tst.w	r9, #1
 8007a6c:	d00e      	beq.n	8007a8c <__cvt+0x84>
 8007a6e:	eb00 0904 	add.w	r9, r0, r4
 8007a72:	2200      	movs	r2, #0
 8007a74:	2300      	movs	r3, #0
 8007a76:	4630      	mov	r0, r6
 8007a78:	4639      	mov	r1, r7
 8007a7a:	f7f9 f825 	bl	8000ac8 <__aeabi_dcmpeq>
 8007a7e:	b108      	cbz	r0, 8007a84 <__cvt+0x7c>
 8007a80:	f8cd 900c 	str.w	r9, [sp, #12]
 8007a84:	2230      	movs	r2, #48	@ 0x30
 8007a86:	9b03      	ldr	r3, [sp, #12]
 8007a88:	454b      	cmp	r3, r9
 8007a8a:	d31e      	bcc.n	8007aca <__cvt+0xc2>
 8007a8c:	9b03      	ldr	r3, [sp, #12]
 8007a8e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007a90:	1b5b      	subs	r3, r3, r5
 8007a92:	4628      	mov	r0, r5
 8007a94:	6013      	str	r3, [r2, #0]
 8007a96:	b004      	add	sp, #16
 8007a98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007a9c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8007aa0:	eb00 0904 	add.w	r9, r0, r4
 8007aa4:	d1e5      	bne.n	8007a72 <__cvt+0x6a>
 8007aa6:	7803      	ldrb	r3, [r0, #0]
 8007aa8:	2b30      	cmp	r3, #48	@ 0x30
 8007aaa:	d10a      	bne.n	8007ac2 <__cvt+0xba>
 8007aac:	2200      	movs	r2, #0
 8007aae:	2300      	movs	r3, #0
 8007ab0:	4630      	mov	r0, r6
 8007ab2:	4639      	mov	r1, r7
 8007ab4:	f7f9 f808 	bl	8000ac8 <__aeabi_dcmpeq>
 8007ab8:	b918      	cbnz	r0, 8007ac2 <__cvt+0xba>
 8007aba:	f1c4 0401 	rsb	r4, r4, #1
 8007abe:	f8ca 4000 	str.w	r4, [sl]
 8007ac2:	f8da 3000 	ldr.w	r3, [sl]
 8007ac6:	4499      	add	r9, r3
 8007ac8:	e7d3      	b.n	8007a72 <__cvt+0x6a>
 8007aca:	1c59      	adds	r1, r3, #1
 8007acc:	9103      	str	r1, [sp, #12]
 8007ace:	701a      	strb	r2, [r3, #0]
 8007ad0:	e7d9      	b.n	8007a86 <__cvt+0x7e>

08007ad2 <__exponent>:
 8007ad2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ad4:	2900      	cmp	r1, #0
 8007ad6:	bfba      	itte	lt
 8007ad8:	4249      	neglt	r1, r1
 8007ada:	232d      	movlt	r3, #45	@ 0x2d
 8007adc:	232b      	movge	r3, #43	@ 0x2b
 8007ade:	2909      	cmp	r1, #9
 8007ae0:	7002      	strb	r2, [r0, #0]
 8007ae2:	7043      	strb	r3, [r0, #1]
 8007ae4:	dd29      	ble.n	8007b3a <__exponent+0x68>
 8007ae6:	f10d 0307 	add.w	r3, sp, #7
 8007aea:	461d      	mov	r5, r3
 8007aec:	270a      	movs	r7, #10
 8007aee:	461a      	mov	r2, r3
 8007af0:	fbb1 f6f7 	udiv	r6, r1, r7
 8007af4:	fb07 1416 	mls	r4, r7, r6, r1
 8007af8:	3430      	adds	r4, #48	@ 0x30
 8007afa:	f802 4c01 	strb.w	r4, [r2, #-1]
 8007afe:	460c      	mov	r4, r1
 8007b00:	2c63      	cmp	r4, #99	@ 0x63
 8007b02:	f103 33ff 	add.w	r3, r3, #4294967295
 8007b06:	4631      	mov	r1, r6
 8007b08:	dcf1      	bgt.n	8007aee <__exponent+0x1c>
 8007b0a:	3130      	adds	r1, #48	@ 0x30
 8007b0c:	1e94      	subs	r4, r2, #2
 8007b0e:	f803 1c01 	strb.w	r1, [r3, #-1]
 8007b12:	1c41      	adds	r1, r0, #1
 8007b14:	4623      	mov	r3, r4
 8007b16:	42ab      	cmp	r3, r5
 8007b18:	d30a      	bcc.n	8007b30 <__exponent+0x5e>
 8007b1a:	f10d 0309 	add.w	r3, sp, #9
 8007b1e:	1a9b      	subs	r3, r3, r2
 8007b20:	42ac      	cmp	r4, r5
 8007b22:	bf88      	it	hi
 8007b24:	2300      	movhi	r3, #0
 8007b26:	3302      	adds	r3, #2
 8007b28:	4403      	add	r3, r0
 8007b2a:	1a18      	subs	r0, r3, r0
 8007b2c:	b003      	add	sp, #12
 8007b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007b30:	f813 6b01 	ldrb.w	r6, [r3], #1
 8007b34:	f801 6f01 	strb.w	r6, [r1, #1]!
 8007b38:	e7ed      	b.n	8007b16 <__exponent+0x44>
 8007b3a:	2330      	movs	r3, #48	@ 0x30
 8007b3c:	3130      	adds	r1, #48	@ 0x30
 8007b3e:	7083      	strb	r3, [r0, #2]
 8007b40:	70c1      	strb	r1, [r0, #3]
 8007b42:	1d03      	adds	r3, r0, #4
 8007b44:	e7f1      	b.n	8007b2a <__exponent+0x58>
	...

08007b48 <_printf_float>:
 8007b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b4c:	b08d      	sub	sp, #52	@ 0x34
 8007b4e:	460c      	mov	r4, r1
 8007b50:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8007b54:	4616      	mov	r6, r2
 8007b56:	461f      	mov	r7, r3
 8007b58:	4605      	mov	r5, r0
 8007b5a:	f000 fcdb 	bl	8008514 <_localeconv_r>
 8007b5e:	6803      	ldr	r3, [r0, #0]
 8007b60:	9304      	str	r3, [sp, #16]
 8007b62:	4618      	mov	r0, r3
 8007b64:	f7f8 fb84 	bl	8000270 <strlen>
 8007b68:	2300      	movs	r3, #0
 8007b6a:	930a      	str	r3, [sp, #40]	@ 0x28
 8007b6c:	f8d8 3000 	ldr.w	r3, [r8]
 8007b70:	9005      	str	r0, [sp, #20]
 8007b72:	3307      	adds	r3, #7
 8007b74:	f023 0307 	bic.w	r3, r3, #7
 8007b78:	f103 0208 	add.w	r2, r3, #8
 8007b7c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8007b80:	f8d4 b000 	ldr.w	fp, [r4]
 8007b84:	f8c8 2000 	str.w	r2, [r8]
 8007b88:	e9d3 8900 	ldrd	r8, r9, [r3]
 8007b8c:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8007b90:	9307      	str	r3, [sp, #28]
 8007b92:	f8cd 8018 	str.w	r8, [sp, #24]
 8007b96:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8007b9a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007b9e:	4b9c      	ldr	r3, [pc, #624]	@ (8007e10 <_printf_float+0x2c8>)
 8007ba0:	f04f 32ff 	mov.w	r2, #4294967295
 8007ba4:	f7f8 ffc2 	bl	8000b2c <__aeabi_dcmpun>
 8007ba8:	bb70      	cbnz	r0, 8007c08 <_printf_float+0xc0>
 8007baa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007bae:	4b98      	ldr	r3, [pc, #608]	@ (8007e10 <_printf_float+0x2c8>)
 8007bb0:	f04f 32ff 	mov.w	r2, #4294967295
 8007bb4:	f7f8 ff9c 	bl	8000af0 <__aeabi_dcmple>
 8007bb8:	bb30      	cbnz	r0, 8007c08 <_printf_float+0xc0>
 8007bba:	2200      	movs	r2, #0
 8007bbc:	2300      	movs	r3, #0
 8007bbe:	4640      	mov	r0, r8
 8007bc0:	4649      	mov	r1, r9
 8007bc2:	f7f8 ff8b 	bl	8000adc <__aeabi_dcmplt>
 8007bc6:	b110      	cbz	r0, 8007bce <_printf_float+0x86>
 8007bc8:	232d      	movs	r3, #45	@ 0x2d
 8007bca:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007bce:	4a91      	ldr	r2, [pc, #580]	@ (8007e14 <_printf_float+0x2cc>)
 8007bd0:	4b91      	ldr	r3, [pc, #580]	@ (8007e18 <_printf_float+0x2d0>)
 8007bd2:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8007bd6:	bf94      	ite	ls
 8007bd8:	4690      	movls	r8, r2
 8007bda:	4698      	movhi	r8, r3
 8007bdc:	2303      	movs	r3, #3
 8007bde:	6123      	str	r3, [r4, #16]
 8007be0:	f02b 0304 	bic.w	r3, fp, #4
 8007be4:	6023      	str	r3, [r4, #0]
 8007be6:	f04f 0900 	mov.w	r9, #0
 8007bea:	9700      	str	r7, [sp, #0]
 8007bec:	4633      	mov	r3, r6
 8007bee:	aa0b      	add	r2, sp, #44	@ 0x2c
 8007bf0:	4621      	mov	r1, r4
 8007bf2:	4628      	mov	r0, r5
 8007bf4:	f000 f9d2 	bl	8007f9c <_printf_common>
 8007bf8:	3001      	adds	r0, #1
 8007bfa:	f040 808d 	bne.w	8007d18 <_printf_float+0x1d0>
 8007bfe:	f04f 30ff 	mov.w	r0, #4294967295
 8007c02:	b00d      	add	sp, #52	@ 0x34
 8007c04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c08:	4642      	mov	r2, r8
 8007c0a:	464b      	mov	r3, r9
 8007c0c:	4640      	mov	r0, r8
 8007c0e:	4649      	mov	r1, r9
 8007c10:	f7f8 ff8c 	bl	8000b2c <__aeabi_dcmpun>
 8007c14:	b140      	cbz	r0, 8007c28 <_printf_float+0xe0>
 8007c16:	464b      	mov	r3, r9
 8007c18:	2b00      	cmp	r3, #0
 8007c1a:	bfbc      	itt	lt
 8007c1c:	232d      	movlt	r3, #45	@ 0x2d
 8007c1e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8007c22:	4a7e      	ldr	r2, [pc, #504]	@ (8007e1c <_printf_float+0x2d4>)
 8007c24:	4b7e      	ldr	r3, [pc, #504]	@ (8007e20 <_printf_float+0x2d8>)
 8007c26:	e7d4      	b.n	8007bd2 <_printf_float+0x8a>
 8007c28:	6863      	ldr	r3, [r4, #4]
 8007c2a:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8007c2e:	9206      	str	r2, [sp, #24]
 8007c30:	1c5a      	adds	r2, r3, #1
 8007c32:	d13b      	bne.n	8007cac <_printf_float+0x164>
 8007c34:	2306      	movs	r3, #6
 8007c36:	6063      	str	r3, [r4, #4]
 8007c38:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8007c3c:	2300      	movs	r3, #0
 8007c3e:	6022      	str	r2, [r4, #0]
 8007c40:	9303      	str	r3, [sp, #12]
 8007c42:	ab0a      	add	r3, sp, #40	@ 0x28
 8007c44:	e9cd a301 	strd	sl, r3, [sp, #4]
 8007c48:	ab09      	add	r3, sp, #36	@ 0x24
 8007c4a:	9300      	str	r3, [sp, #0]
 8007c4c:	6861      	ldr	r1, [r4, #4]
 8007c4e:	ec49 8b10 	vmov	d0, r8, r9
 8007c52:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8007c56:	4628      	mov	r0, r5
 8007c58:	f7ff fed6 	bl	8007a08 <__cvt>
 8007c5c:	9b06      	ldr	r3, [sp, #24]
 8007c5e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007c60:	2b47      	cmp	r3, #71	@ 0x47
 8007c62:	4680      	mov	r8, r0
 8007c64:	d129      	bne.n	8007cba <_printf_float+0x172>
 8007c66:	1cc8      	adds	r0, r1, #3
 8007c68:	db02      	blt.n	8007c70 <_printf_float+0x128>
 8007c6a:	6863      	ldr	r3, [r4, #4]
 8007c6c:	4299      	cmp	r1, r3
 8007c6e:	dd41      	ble.n	8007cf4 <_printf_float+0x1ac>
 8007c70:	f1aa 0a02 	sub.w	sl, sl, #2
 8007c74:	fa5f fa8a 	uxtb.w	sl, sl
 8007c78:	3901      	subs	r1, #1
 8007c7a:	4652      	mov	r2, sl
 8007c7c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8007c80:	9109      	str	r1, [sp, #36]	@ 0x24
 8007c82:	f7ff ff26 	bl	8007ad2 <__exponent>
 8007c86:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007c88:	1813      	adds	r3, r2, r0
 8007c8a:	2a01      	cmp	r2, #1
 8007c8c:	4681      	mov	r9, r0
 8007c8e:	6123      	str	r3, [r4, #16]
 8007c90:	dc02      	bgt.n	8007c98 <_printf_float+0x150>
 8007c92:	6822      	ldr	r2, [r4, #0]
 8007c94:	07d2      	lsls	r2, r2, #31
 8007c96:	d501      	bpl.n	8007c9c <_printf_float+0x154>
 8007c98:	3301      	adds	r3, #1
 8007c9a:	6123      	str	r3, [r4, #16]
 8007c9c:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8007ca0:	2b00      	cmp	r3, #0
 8007ca2:	d0a2      	beq.n	8007bea <_printf_float+0xa2>
 8007ca4:	232d      	movs	r3, #45	@ 0x2d
 8007ca6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007caa:	e79e      	b.n	8007bea <_printf_float+0xa2>
 8007cac:	9a06      	ldr	r2, [sp, #24]
 8007cae:	2a47      	cmp	r2, #71	@ 0x47
 8007cb0:	d1c2      	bne.n	8007c38 <_printf_float+0xf0>
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	d1c0      	bne.n	8007c38 <_printf_float+0xf0>
 8007cb6:	2301      	movs	r3, #1
 8007cb8:	e7bd      	b.n	8007c36 <_printf_float+0xee>
 8007cba:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8007cbe:	d9db      	bls.n	8007c78 <_printf_float+0x130>
 8007cc0:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8007cc4:	d118      	bne.n	8007cf8 <_printf_float+0x1b0>
 8007cc6:	2900      	cmp	r1, #0
 8007cc8:	6863      	ldr	r3, [r4, #4]
 8007cca:	dd0b      	ble.n	8007ce4 <_printf_float+0x19c>
 8007ccc:	6121      	str	r1, [r4, #16]
 8007cce:	b913      	cbnz	r3, 8007cd6 <_printf_float+0x18e>
 8007cd0:	6822      	ldr	r2, [r4, #0]
 8007cd2:	07d0      	lsls	r0, r2, #31
 8007cd4:	d502      	bpl.n	8007cdc <_printf_float+0x194>
 8007cd6:	3301      	adds	r3, #1
 8007cd8:	440b      	add	r3, r1
 8007cda:	6123      	str	r3, [r4, #16]
 8007cdc:	65a1      	str	r1, [r4, #88]	@ 0x58
 8007cde:	f04f 0900 	mov.w	r9, #0
 8007ce2:	e7db      	b.n	8007c9c <_printf_float+0x154>
 8007ce4:	b913      	cbnz	r3, 8007cec <_printf_float+0x1a4>
 8007ce6:	6822      	ldr	r2, [r4, #0]
 8007ce8:	07d2      	lsls	r2, r2, #31
 8007cea:	d501      	bpl.n	8007cf0 <_printf_float+0x1a8>
 8007cec:	3302      	adds	r3, #2
 8007cee:	e7f4      	b.n	8007cda <_printf_float+0x192>
 8007cf0:	2301      	movs	r3, #1
 8007cf2:	e7f2      	b.n	8007cda <_printf_float+0x192>
 8007cf4:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8007cf8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007cfa:	4299      	cmp	r1, r3
 8007cfc:	db05      	blt.n	8007d0a <_printf_float+0x1c2>
 8007cfe:	6823      	ldr	r3, [r4, #0]
 8007d00:	6121      	str	r1, [r4, #16]
 8007d02:	07d8      	lsls	r0, r3, #31
 8007d04:	d5ea      	bpl.n	8007cdc <_printf_float+0x194>
 8007d06:	1c4b      	adds	r3, r1, #1
 8007d08:	e7e7      	b.n	8007cda <_printf_float+0x192>
 8007d0a:	2900      	cmp	r1, #0
 8007d0c:	bfd4      	ite	le
 8007d0e:	f1c1 0202 	rsble	r2, r1, #2
 8007d12:	2201      	movgt	r2, #1
 8007d14:	4413      	add	r3, r2
 8007d16:	e7e0      	b.n	8007cda <_printf_float+0x192>
 8007d18:	6823      	ldr	r3, [r4, #0]
 8007d1a:	055a      	lsls	r2, r3, #21
 8007d1c:	d407      	bmi.n	8007d2e <_printf_float+0x1e6>
 8007d1e:	6923      	ldr	r3, [r4, #16]
 8007d20:	4642      	mov	r2, r8
 8007d22:	4631      	mov	r1, r6
 8007d24:	4628      	mov	r0, r5
 8007d26:	47b8      	blx	r7
 8007d28:	3001      	adds	r0, #1
 8007d2a:	d12b      	bne.n	8007d84 <_printf_float+0x23c>
 8007d2c:	e767      	b.n	8007bfe <_printf_float+0xb6>
 8007d2e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8007d32:	f240 80dd 	bls.w	8007ef0 <_printf_float+0x3a8>
 8007d36:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8007d3a:	2200      	movs	r2, #0
 8007d3c:	2300      	movs	r3, #0
 8007d3e:	f7f8 fec3 	bl	8000ac8 <__aeabi_dcmpeq>
 8007d42:	2800      	cmp	r0, #0
 8007d44:	d033      	beq.n	8007dae <_printf_float+0x266>
 8007d46:	4a37      	ldr	r2, [pc, #220]	@ (8007e24 <_printf_float+0x2dc>)
 8007d48:	2301      	movs	r3, #1
 8007d4a:	4631      	mov	r1, r6
 8007d4c:	4628      	mov	r0, r5
 8007d4e:	47b8      	blx	r7
 8007d50:	3001      	adds	r0, #1
 8007d52:	f43f af54 	beq.w	8007bfe <_printf_float+0xb6>
 8007d56:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8007d5a:	4543      	cmp	r3, r8
 8007d5c:	db02      	blt.n	8007d64 <_printf_float+0x21c>
 8007d5e:	6823      	ldr	r3, [r4, #0]
 8007d60:	07d8      	lsls	r0, r3, #31
 8007d62:	d50f      	bpl.n	8007d84 <_printf_float+0x23c>
 8007d64:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007d68:	4631      	mov	r1, r6
 8007d6a:	4628      	mov	r0, r5
 8007d6c:	47b8      	blx	r7
 8007d6e:	3001      	adds	r0, #1
 8007d70:	f43f af45 	beq.w	8007bfe <_printf_float+0xb6>
 8007d74:	f04f 0900 	mov.w	r9, #0
 8007d78:	f108 38ff 	add.w	r8, r8, #4294967295
 8007d7c:	f104 0a1a 	add.w	sl, r4, #26
 8007d80:	45c8      	cmp	r8, r9
 8007d82:	dc09      	bgt.n	8007d98 <_printf_float+0x250>
 8007d84:	6823      	ldr	r3, [r4, #0]
 8007d86:	079b      	lsls	r3, r3, #30
 8007d88:	f100 8103 	bmi.w	8007f92 <_printf_float+0x44a>
 8007d8c:	68e0      	ldr	r0, [r4, #12]
 8007d8e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007d90:	4298      	cmp	r0, r3
 8007d92:	bfb8      	it	lt
 8007d94:	4618      	movlt	r0, r3
 8007d96:	e734      	b.n	8007c02 <_printf_float+0xba>
 8007d98:	2301      	movs	r3, #1
 8007d9a:	4652      	mov	r2, sl
 8007d9c:	4631      	mov	r1, r6
 8007d9e:	4628      	mov	r0, r5
 8007da0:	47b8      	blx	r7
 8007da2:	3001      	adds	r0, #1
 8007da4:	f43f af2b 	beq.w	8007bfe <_printf_float+0xb6>
 8007da8:	f109 0901 	add.w	r9, r9, #1
 8007dac:	e7e8      	b.n	8007d80 <_printf_float+0x238>
 8007dae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007db0:	2b00      	cmp	r3, #0
 8007db2:	dc39      	bgt.n	8007e28 <_printf_float+0x2e0>
 8007db4:	4a1b      	ldr	r2, [pc, #108]	@ (8007e24 <_printf_float+0x2dc>)
 8007db6:	2301      	movs	r3, #1
 8007db8:	4631      	mov	r1, r6
 8007dba:	4628      	mov	r0, r5
 8007dbc:	47b8      	blx	r7
 8007dbe:	3001      	adds	r0, #1
 8007dc0:	f43f af1d 	beq.w	8007bfe <_printf_float+0xb6>
 8007dc4:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8007dc8:	ea59 0303 	orrs.w	r3, r9, r3
 8007dcc:	d102      	bne.n	8007dd4 <_printf_float+0x28c>
 8007dce:	6823      	ldr	r3, [r4, #0]
 8007dd0:	07d9      	lsls	r1, r3, #31
 8007dd2:	d5d7      	bpl.n	8007d84 <_printf_float+0x23c>
 8007dd4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007dd8:	4631      	mov	r1, r6
 8007dda:	4628      	mov	r0, r5
 8007ddc:	47b8      	blx	r7
 8007dde:	3001      	adds	r0, #1
 8007de0:	f43f af0d 	beq.w	8007bfe <_printf_float+0xb6>
 8007de4:	f04f 0a00 	mov.w	sl, #0
 8007de8:	f104 0b1a 	add.w	fp, r4, #26
 8007dec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007dee:	425b      	negs	r3, r3
 8007df0:	4553      	cmp	r3, sl
 8007df2:	dc01      	bgt.n	8007df8 <_printf_float+0x2b0>
 8007df4:	464b      	mov	r3, r9
 8007df6:	e793      	b.n	8007d20 <_printf_float+0x1d8>
 8007df8:	2301      	movs	r3, #1
 8007dfa:	465a      	mov	r2, fp
 8007dfc:	4631      	mov	r1, r6
 8007dfe:	4628      	mov	r0, r5
 8007e00:	47b8      	blx	r7
 8007e02:	3001      	adds	r0, #1
 8007e04:	f43f aefb 	beq.w	8007bfe <_printf_float+0xb6>
 8007e08:	f10a 0a01 	add.w	sl, sl, #1
 8007e0c:	e7ee      	b.n	8007dec <_printf_float+0x2a4>
 8007e0e:	bf00      	nop
 8007e10:	7fefffff 	.word	0x7fefffff
 8007e14:	0800d654 	.word	0x0800d654
 8007e18:	0800d658 	.word	0x0800d658
 8007e1c:	0800d65c 	.word	0x0800d65c
 8007e20:	0800d660 	.word	0x0800d660
 8007e24:	0800d664 	.word	0x0800d664
 8007e28:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007e2a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8007e2e:	4553      	cmp	r3, sl
 8007e30:	bfa8      	it	ge
 8007e32:	4653      	movge	r3, sl
 8007e34:	2b00      	cmp	r3, #0
 8007e36:	4699      	mov	r9, r3
 8007e38:	dc36      	bgt.n	8007ea8 <_printf_float+0x360>
 8007e3a:	f04f 0b00 	mov.w	fp, #0
 8007e3e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007e42:	f104 021a 	add.w	r2, r4, #26
 8007e46:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007e48:	9306      	str	r3, [sp, #24]
 8007e4a:	eba3 0309 	sub.w	r3, r3, r9
 8007e4e:	455b      	cmp	r3, fp
 8007e50:	dc31      	bgt.n	8007eb6 <_printf_float+0x36e>
 8007e52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007e54:	459a      	cmp	sl, r3
 8007e56:	dc3a      	bgt.n	8007ece <_printf_float+0x386>
 8007e58:	6823      	ldr	r3, [r4, #0]
 8007e5a:	07da      	lsls	r2, r3, #31
 8007e5c:	d437      	bmi.n	8007ece <_printf_float+0x386>
 8007e5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007e60:	ebaa 0903 	sub.w	r9, sl, r3
 8007e64:	9b06      	ldr	r3, [sp, #24]
 8007e66:	ebaa 0303 	sub.w	r3, sl, r3
 8007e6a:	4599      	cmp	r9, r3
 8007e6c:	bfa8      	it	ge
 8007e6e:	4699      	movge	r9, r3
 8007e70:	f1b9 0f00 	cmp.w	r9, #0
 8007e74:	dc33      	bgt.n	8007ede <_printf_float+0x396>
 8007e76:	f04f 0800 	mov.w	r8, #0
 8007e7a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007e7e:	f104 0b1a 	add.w	fp, r4, #26
 8007e82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007e84:	ebaa 0303 	sub.w	r3, sl, r3
 8007e88:	eba3 0309 	sub.w	r3, r3, r9
 8007e8c:	4543      	cmp	r3, r8
 8007e8e:	f77f af79 	ble.w	8007d84 <_printf_float+0x23c>
 8007e92:	2301      	movs	r3, #1
 8007e94:	465a      	mov	r2, fp
 8007e96:	4631      	mov	r1, r6
 8007e98:	4628      	mov	r0, r5
 8007e9a:	47b8      	blx	r7
 8007e9c:	3001      	adds	r0, #1
 8007e9e:	f43f aeae 	beq.w	8007bfe <_printf_float+0xb6>
 8007ea2:	f108 0801 	add.w	r8, r8, #1
 8007ea6:	e7ec      	b.n	8007e82 <_printf_float+0x33a>
 8007ea8:	4642      	mov	r2, r8
 8007eaa:	4631      	mov	r1, r6
 8007eac:	4628      	mov	r0, r5
 8007eae:	47b8      	blx	r7
 8007eb0:	3001      	adds	r0, #1
 8007eb2:	d1c2      	bne.n	8007e3a <_printf_float+0x2f2>
 8007eb4:	e6a3      	b.n	8007bfe <_printf_float+0xb6>
 8007eb6:	2301      	movs	r3, #1
 8007eb8:	4631      	mov	r1, r6
 8007eba:	4628      	mov	r0, r5
 8007ebc:	9206      	str	r2, [sp, #24]
 8007ebe:	47b8      	blx	r7
 8007ec0:	3001      	adds	r0, #1
 8007ec2:	f43f ae9c 	beq.w	8007bfe <_printf_float+0xb6>
 8007ec6:	9a06      	ldr	r2, [sp, #24]
 8007ec8:	f10b 0b01 	add.w	fp, fp, #1
 8007ecc:	e7bb      	b.n	8007e46 <_printf_float+0x2fe>
 8007ece:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007ed2:	4631      	mov	r1, r6
 8007ed4:	4628      	mov	r0, r5
 8007ed6:	47b8      	blx	r7
 8007ed8:	3001      	adds	r0, #1
 8007eda:	d1c0      	bne.n	8007e5e <_printf_float+0x316>
 8007edc:	e68f      	b.n	8007bfe <_printf_float+0xb6>
 8007ede:	9a06      	ldr	r2, [sp, #24]
 8007ee0:	464b      	mov	r3, r9
 8007ee2:	4442      	add	r2, r8
 8007ee4:	4631      	mov	r1, r6
 8007ee6:	4628      	mov	r0, r5
 8007ee8:	47b8      	blx	r7
 8007eea:	3001      	adds	r0, #1
 8007eec:	d1c3      	bne.n	8007e76 <_printf_float+0x32e>
 8007eee:	e686      	b.n	8007bfe <_printf_float+0xb6>
 8007ef0:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8007ef4:	f1ba 0f01 	cmp.w	sl, #1
 8007ef8:	dc01      	bgt.n	8007efe <_printf_float+0x3b6>
 8007efa:	07db      	lsls	r3, r3, #31
 8007efc:	d536      	bpl.n	8007f6c <_printf_float+0x424>
 8007efe:	2301      	movs	r3, #1
 8007f00:	4642      	mov	r2, r8
 8007f02:	4631      	mov	r1, r6
 8007f04:	4628      	mov	r0, r5
 8007f06:	47b8      	blx	r7
 8007f08:	3001      	adds	r0, #1
 8007f0a:	f43f ae78 	beq.w	8007bfe <_printf_float+0xb6>
 8007f0e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007f12:	4631      	mov	r1, r6
 8007f14:	4628      	mov	r0, r5
 8007f16:	47b8      	blx	r7
 8007f18:	3001      	adds	r0, #1
 8007f1a:	f43f ae70 	beq.w	8007bfe <_printf_float+0xb6>
 8007f1e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8007f22:	2200      	movs	r2, #0
 8007f24:	2300      	movs	r3, #0
 8007f26:	f10a 3aff 	add.w	sl, sl, #4294967295
 8007f2a:	f7f8 fdcd 	bl	8000ac8 <__aeabi_dcmpeq>
 8007f2e:	b9c0      	cbnz	r0, 8007f62 <_printf_float+0x41a>
 8007f30:	4653      	mov	r3, sl
 8007f32:	f108 0201 	add.w	r2, r8, #1
 8007f36:	4631      	mov	r1, r6
 8007f38:	4628      	mov	r0, r5
 8007f3a:	47b8      	blx	r7
 8007f3c:	3001      	adds	r0, #1
 8007f3e:	d10c      	bne.n	8007f5a <_printf_float+0x412>
 8007f40:	e65d      	b.n	8007bfe <_printf_float+0xb6>
 8007f42:	2301      	movs	r3, #1
 8007f44:	465a      	mov	r2, fp
 8007f46:	4631      	mov	r1, r6
 8007f48:	4628      	mov	r0, r5
 8007f4a:	47b8      	blx	r7
 8007f4c:	3001      	adds	r0, #1
 8007f4e:	f43f ae56 	beq.w	8007bfe <_printf_float+0xb6>
 8007f52:	f108 0801 	add.w	r8, r8, #1
 8007f56:	45d0      	cmp	r8, sl
 8007f58:	dbf3      	blt.n	8007f42 <_printf_float+0x3fa>
 8007f5a:	464b      	mov	r3, r9
 8007f5c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8007f60:	e6df      	b.n	8007d22 <_printf_float+0x1da>
 8007f62:	f04f 0800 	mov.w	r8, #0
 8007f66:	f104 0b1a 	add.w	fp, r4, #26
 8007f6a:	e7f4      	b.n	8007f56 <_printf_float+0x40e>
 8007f6c:	2301      	movs	r3, #1
 8007f6e:	4642      	mov	r2, r8
 8007f70:	e7e1      	b.n	8007f36 <_printf_float+0x3ee>
 8007f72:	2301      	movs	r3, #1
 8007f74:	464a      	mov	r2, r9
 8007f76:	4631      	mov	r1, r6
 8007f78:	4628      	mov	r0, r5
 8007f7a:	47b8      	blx	r7
 8007f7c:	3001      	adds	r0, #1
 8007f7e:	f43f ae3e 	beq.w	8007bfe <_printf_float+0xb6>
 8007f82:	f108 0801 	add.w	r8, r8, #1
 8007f86:	68e3      	ldr	r3, [r4, #12]
 8007f88:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8007f8a:	1a5b      	subs	r3, r3, r1
 8007f8c:	4543      	cmp	r3, r8
 8007f8e:	dcf0      	bgt.n	8007f72 <_printf_float+0x42a>
 8007f90:	e6fc      	b.n	8007d8c <_printf_float+0x244>
 8007f92:	f04f 0800 	mov.w	r8, #0
 8007f96:	f104 0919 	add.w	r9, r4, #25
 8007f9a:	e7f4      	b.n	8007f86 <_printf_float+0x43e>

08007f9c <_printf_common>:
 8007f9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fa0:	4616      	mov	r6, r2
 8007fa2:	4698      	mov	r8, r3
 8007fa4:	688a      	ldr	r2, [r1, #8]
 8007fa6:	690b      	ldr	r3, [r1, #16]
 8007fa8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007fac:	4293      	cmp	r3, r2
 8007fae:	bfb8      	it	lt
 8007fb0:	4613      	movlt	r3, r2
 8007fb2:	6033      	str	r3, [r6, #0]
 8007fb4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007fb8:	4607      	mov	r7, r0
 8007fba:	460c      	mov	r4, r1
 8007fbc:	b10a      	cbz	r2, 8007fc2 <_printf_common+0x26>
 8007fbe:	3301      	adds	r3, #1
 8007fc0:	6033      	str	r3, [r6, #0]
 8007fc2:	6823      	ldr	r3, [r4, #0]
 8007fc4:	0699      	lsls	r1, r3, #26
 8007fc6:	bf42      	ittt	mi
 8007fc8:	6833      	ldrmi	r3, [r6, #0]
 8007fca:	3302      	addmi	r3, #2
 8007fcc:	6033      	strmi	r3, [r6, #0]
 8007fce:	6825      	ldr	r5, [r4, #0]
 8007fd0:	f015 0506 	ands.w	r5, r5, #6
 8007fd4:	d106      	bne.n	8007fe4 <_printf_common+0x48>
 8007fd6:	f104 0a19 	add.w	sl, r4, #25
 8007fda:	68e3      	ldr	r3, [r4, #12]
 8007fdc:	6832      	ldr	r2, [r6, #0]
 8007fde:	1a9b      	subs	r3, r3, r2
 8007fe0:	42ab      	cmp	r3, r5
 8007fe2:	dc26      	bgt.n	8008032 <_printf_common+0x96>
 8007fe4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007fe8:	6822      	ldr	r2, [r4, #0]
 8007fea:	3b00      	subs	r3, #0
 8007fec:	bf18      	it	ne
 8007fee:	2301      	movne	r3, #1
 8007ff0:	0692      	lsls	r2, r2, #26
 8007ff2:	d42b      	bmi.n	800804c <_printf_common+0xb0>
 8007ff4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007ff8:	4641      	mov	r1, r8
 8007ffa:	4638      	mov	r0, r7
 8007ffc:	47c8      	blx	r9
 8007ffe:	3001      	adds	r0, #1
 8008000:	d01e      	beq.n	8008040 <_printf_common+0xa4>
 8008002:	6823      	ldr	r3, [r4, #0]
 8008004:	6922      	ldr	r2, [r4, #16]
 8008006:	f003 0306 	and.w	r3, r3, #6
 800800a:	2b04      	cmp	r3, #4
 800800c:	bf02      	ittt	eq
 800800e:	68e5      	ldreq	r5, [r4, #12]
 8008010:	6833      	ldreq	r3, [r6, #0]
 8008012:	1aed      	subeq	r5, r5, r3
 8008014:	68a3      	ldr	r3, [r4, #8]
 8008016:	bf0c      	ite	eq
 8008018:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800801c:	2500      	movne	r5, #0
 800801e:	4293      	cmp	r3, r2
 8008020:	bfc4      	itt	gt
 8008022:	1a9b      	subgt	r3, r3, r2
 8008024:	18ed      	addgt	r5, r5, r3
 8008026:	2600      	movs	r6, #0
 8008028:	341a      	adds	r4, #26
 800802a:	42b5      	cmp	r5, r6
 800802c:	d11a      	bne.n	8008064 <_printf_common+0xc8>
 800802e:	2000      	movs	r0, #0
 8008030:	e008      	b.n	8008044 <_printf_common+0xa8>
 8008032:	2301      	movs	r3, #1
 8008034:	4652      	mov	r2, sl
 8008036:	4641      	mov	r1, r8
 8008038:	4638      	mov	r0, r7
 800803a:	47c8      	blx	r9
 800803c:	3001      	adds	r0, #1
 800803e:	d103      	bne.n	8008048 <_printf_common+0xac>
 8008040:	f04f 30ff 	mov.w	r0, #4294967295
 8008044:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008048:	3501      	adds	r5, #1
 800804a:	e7c6      	b.n	8007fda <_printf_common+0x3e>
 800804c:	18e1      	adds	r1, r4, r3
 800804e:	1c5a      	adds	r2, r3, #1
 8008050:	2030      	movs	r0, #48	@ 0x30
 8008052:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8008056:	4422      	add	r2, r4
 8008058:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800805c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8008060:	3302      	adds	r3, #2
 8008062:	e7c7      	b.n	8007ff4 <_printf_common+0x58>
 8008064:	2301      	movs	r3, #1
 8008066:	4622      	mov	r2, r4
 8008068:	4641      	mov	r1, r8
 800806a:	4638      	mov	r0, r7
 800806c:	47c8      	blx	r9
 800806e:	3001      	adds	r0, #1
 8008070:	d0e6      	beq.n	8008040 <_printf_common+0xa4>
 8008072:	3601      	adds	r6, #1
 8008074:	e7d9      	b.n	800802a <_printf_common+0x8e>
	...

08008078 <_printf_i>:
 8008078:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800807c:	7e0f      	ldrb	r7, [r1, #24]
 800807e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8008080:	2f78      	cmp	r7, #120	@ 0x78
 8008082:	4691      	mov	r9, r2
 8008084:	4680      	mov	r8, r0
 8008086:	460c      	mov	r4, r1
 8008088:	469a      	mov	sl, r3
 800808a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800808e:	d807      	bhi.n	80080a0 <_printf_i+0x28>
 8008090:	2f62      	cmp	r7, #98	@ 0x62
 8008092:	d80a      	bhi.n	80080aa <_printf_i+0x32>
 8008094:	2f00      	cmp	r7, #0
 8008096:	f000 80d2 	beq.w	800823e <_printf_i+0x1c6>
 800809a:	2f58      	cmp	r7, #88	@ 0x58
 800809c:	f000 80b9 	beq.w	8008212 <_printf_i+0x19a>
 80080a0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80080a4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80080a8:	e03a      	b.n	8008120 <_printf_i+0xa8>
 80080aa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80080ae:	2b15      	cmp	r3, #21
 80080b0:	d8f6      	bhi.n	80080a0 <_printf_i+0x28>
 80080b2:	a101      	add	r1, pc, #4	@ (adr r1, 80080b8 <_printf_i+0x40>)
 80080b4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80080b8:	08008111 	.word	0x08008111
 80080bc:	08008125 	.word	0x08008125
 80080c0:	080080a1 	.word	0x080080a1
 80080c4:	080080a1 	.word	0x080080a1
 80080c8:	080080a1 	.word	0x080080a1
 80080cc:	080080a1 	.word	0x080080a1
 80080d0:	08008125 	.word	0x08008125
 80080d4:	080080a1 	.word	0x080080a1
 80080d8:	080080a1 	.word	0x080080a1
 80080dc:	080080a1 	.word	0x080080a1
 80080e0:	080080a1 	.word	0x080080a1
 80080e4:	08008225 	.word	0x08008225
 80080e8:	0800814f 	.word	0x0800814f
 80080ec:	080081df 	.word	0x080081df
 80080f0:	080080a1 	.word	0x080080a1
 80080f4:	080080a1 	.word	0x080080a1
 80080f8:	08008247 	.word	0x08008247
 80080fc:	080080a1 	.word	0x080080a1
 8008100:	0800814f 	.word	0x0800814f
 8008104:	080080a1 	.word	0x080080a1
 8008108:	080080a1 	.word	0x080080a1
 800810c:	080081e7 	.word	0x080081e7
 8008110:	6833      	ldr	r3, [r6, #0]
 8008112:	1d1a      	adds	r2, r3, #4
 8008114:	681b      	ldr	r3, [r3, #0]
 8008116:	6032      	str	r2, [r6, #0]
 8008118:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800811c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8008120:	2301      	movs	r3, #1
 8008122:	e09d      	b.n	8008260 <_printf_i+0x1e8>
 8008124:	6833      	ldr	r3, [r6, #0]
 8008126:	6820      	ldr	r0, [r4, #0]
 8008128:	1d19      	adds	r1, r3, #4
 800812a:	6031      	str	r1, [r6, #0]
 800812c:	0606      	lsls	r6, r0, #24
 800812e:	d501      	bpl.n	8008134 <_printf_i+0xbc>
 8008130:	681d      	ldr	r5, [r3, #0]
 8008132:	e003      	b.n	800813c <_printf_i+0xc4>
 8008134:	0645      	lsls	r5, r0, #25
 8008136:	d5fb      	bpl.n	8008130 <_printf_i+0xb8>
 8008138:	f9b3 5000 	ldrsh.w	r5, [r3]
 800813c:	2d00      	cmp	r5, #0
 800813e:	da03      	bge.n	8008148 <_printf_i+0xd0>
 8008140:	232d      	movs	r3, #45	@ 0x2d
 8008142:	426d      	negs	r5, r5
 8008144:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8008148:	4859      	ldr	r0, [pc, #356]	@ (80082b0 <_printf_i+0x238>)
 800814a:	230a      	movs	r3, #10
 800814c:	e011      	b.n	8008172 <_printf_i+0xfa>
 800814e:	6821      	ldr	r1, [r4, #0]
 8008150:	6833      	ldr	r3, [r6, #0]
 8008152:	0608      	lsls	r0, r1, #24
 8008154:	f853 5b04 	ldr.w	r5, [r3], #4
 8008158:	d402      	bmi.n	8008160 <_printf_i+0xe8>
 800815a:	0649      	lsls	r1, r1, #25
 800815c:	bf48      	it	mi
 800815e:	b2ad      	uxthmi	r5, r5
 8008160:	2f6f      	cmp	r7, #111	@ 0x6f
 8008162:	4853      	ldr	r0, [pc, #332]	@ (80082b0 <_printf_i+0x238>)
 8008164:	6033      	str	r3, [r6, #0]
 8008166:	bf14      	ite	ne
 8008168:	230a      	movne	r3, #10
 800816a:	2308      	moveq	r3, #8
 800816c:	2100      	movs	r1, #0
 800816e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8008172:	6866      	ldr	r6, [r4, #4]
 8008174:	60a6      	str	r6, [r4, #8]
 8008176:	2e00      	cmp	r6, #0
 8008178:	bfa2      	ittt	ge
 800817a:	6821      	ldrge	r1, [r4, #0]
 800817c:	f021 0104 	bicge.w	r1, r1, #4
 8008180:	6021      	strge	r1, [r4, #0]
 8008182:	b90d      	cbnz	r5, 8008188 <_printf_i+0x110>
 8008184:	2e00      	cmp	r6, #0
 8008186:	d04b      	beq.n	8008220 <_printf_i+0x1a8>
 8008188:	4616      	mov	r6, r2
 800818a:	fbb5 f1f3 	udiv	r1, r5, r3
 800818e:	fb03 5711 	mls	r7, r3, r1, r5
 8008192:	5dc7      	ldrb	r7, [r0, r7]
 8008194:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8008198:	462f      	mov	r7, r5
 800819a:	42bb      	cmp	r3, r7
 800819c:	460d      	mov	r5, r1
 800819e:	d9f4      	bls.n	800818a <_printf_i+0x112>
 80081a0:	2b08      	cmp	r3, #8
 80081a2:	d10b      	bne.n	80081bc <_printf_i+0x144>
 80081a4:	6823      	ldr	r3, [r4, #0]
 80081a6:	07df      	lsls	r7, r3, #31
 80081a8:	d508      	bpl.n	80081bc <_printf_i+0x144>
 80081aa:	6923      	ldr	r3, [r4, #16]
 80081ac:	6861      	ldr	r1, [r4, #4]
 80081ae:	4299      	cmp	r1, r3
 80081b0:	bfde      	ittt	le
 80081b2:	2330      	movle	r3, #48	@ 0x30
 80081b4:	f806 3c01 	strble.w	r3, [r6, #-1]
 80081b8:	f106 36ff 	addle.w	r6, r6, #4294967295
 80081bc:	1b92      	subs	r2, r2, r6
 80081be:	6122      	str	r2, [r4, #16]
 80081c0:	f8cd a000 	str.w	sl, [sp]
 80081c4:	464b      	mov	r3, r9
 80081c6:	aa03      	add	r2, sp, #12
 80081c8:	4621      	mov	r1, r4
 80081ca:	4640      	mov	r0, r8
 80081cc:	f7ff fee6 	bl	8007f9c <_printf_common>
 80081d0:	3001      	adds	r0, #1
 80081d2:	d14a      	bne.n	800826a <_printf_i+0x1f2>
 80081d4:	f04f 30ff 	mov.w	r0, #4294967295
 80081d8:	b004      	add	sp, #16
 80081da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80081de:	6823      	ldr	r3, [r4, #0]
 80081e0:	f043 0320 	orr.w	r3, r3, #32
 80081e4:	6023      	str	r3, [r4, #0]
 80081e6:	4833      	ldr	r0, [pc, #204]	@ (80082b4 <_printf_i+0x23c>)
 80081e8:	2778      	movs	r7, #120	@ 0x78
 80081ea:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80081ee:	6823      	ldr	r3, [r4, #0]
 80081f0:	6831      	ldr	r1, [r6, #0]
 80081f2:	061f      	lsls	r7, r3, #24
 80081f4:	f851 5b04 	ldr.w	r5, [r1], #4
 80081f8:	d402      	bmi.n	8008200 <_printf_i+0x188>
 80081fa:	065f      	lsls	r7, r3, #25
 80081fc:	bf48      	it	mi
 80081fe:	b2ad      	uxthmi	r5, r5
 8008200:	6031      	str	r1, [r6, #0]
 8008202:	07d9      	lsls	r1, r3, #31
 8008204:	bf44      	itt	mi
 8008206:	f043 0320 	orrmi.w	r3, r3, #32
 800820a:	6023      	strmi	r3, [r4, #0]
 800820c:	b11d      	cbz	r5, 8008216 <_printf_i+0x19e>
 800820e:	2310      	movs	r3, #16
 8008210:	e7ac      	b.n	800816c <_printf_i+0xf4>
 8008212:	4827      	ldr	r0, [pc, #156]	@ (80082b0 <_printf_i+0x238>)
 8008214:	e7e9      	b.n	80081ea <_printf_i+0x172>
 8008216:	6823      	ldr	r3, [r4, #0]
 8008218:	f023 0320 	bic.w	r3, r3, #32
 800821c:	6023      	str	r3, [r4, #0]
 800821e:	e7f6      	b.n	800820e <_printf_i+0x196>
 8008220:	4616      	mov	r6, r2
 8008222:	e7bd      	b.n	80081a0 <_printf_i+0x128>
 8008224:	6833      	ldr	r3, [r6, #0]
 8008226:	6825      	ldr	r5, [r4, #0]
 8008228:	6961      	ldr	r1, [r4, #20]
 800822a:	1d18      	adds	r0, r3, #4
 800822c:	6030      	str	r0, [r6, #0]
 800822e:	062e      	lsls	r6, r5, #24
 8008230:	681b      	ldr	r3, [r3, #0]
 8008232:	d501      	bpl.n	8008238 <_printf_i+0x1c0>
 8008234:	6019      	str	r1, [r3, #0]
 8008236:	e002      	b.n	800823e <_printf_i+0x1c6>
 8008238:	0668      	lsls	r0, r5, #25
 800823a:	d5fb      	bpl.n	8008234 <_printf_i+0x1bc>
 800823c:	8019      	strh	r1, [r3, #0]
 800823e:	2300      	movs	r3, #0
 8008240:	6123      	str	r3, [r4, #16]
 8008242:	4616      	mov	r6, r2
 8008244:	e7bc      	b.n	80081c0 <_printf_i+0x148>
 8008246:	6833      	ldr	r3, [r6, #0]
 8008248:	1d1a      	adds	r2, r3, #4
 800824a:	6032      	str	r2, [r6, #0]
 800824c:	681e      	ldr	r6, [r3, #0]
 800824e:	6862      	ldr	r2, [r4, #4]
 8008250:	2100      	movs	r1, #0
 8008252:	4630      	mov	r0, r6
 8008254:	f7f7 ffbc 	bl	80001d0 <memchr>
 8008258:	b108      	cbz	r0, 800825e <_printf_i+0x1e6>
 800825a:	1b80      	subs	r0, r0, r6
 800825c:	6060      	str	r0, [r4, #4]
 800825e:	6863      	ldr	r3, [r4, #4]
 8008260:	6123      	str	r3, [r4, #16]
 8008262:	2300      	movs	r3, #0
 8008264:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8008268:	e7aa      	b.n	80081c0 <_printf_i+0x148>
 800826a:	6923      	ldr	r3, [r4, #16]
 800826c:	4632      	mov	r2, r6
 800826e:	4649      	mov	r1, r9
 8008270:	4640      	mov	r0, r8
 8008272:	47d0      	blx	sl
 8008274:	3001      	adds	r0, #1
 8008276:	d0ad      	beq.n	80081d4 <_printf_i+0x15c>
 8008278:	6823      	ldr	r3, [r4, #0]
 800827a:	079b      	lsls	r3, r3, #30
 800827c:	d413      	bmi.n	80082a6 <_printf_i+0x22e>
 800827e:	68e0      	ldr	r0, [r4, #12]
 8008280:	9b03      	ldr	r3, [sp, #12]
 8008282:	4298      	cmp	r0, r3
 8008284:	bfb8      	it	lt
 8008286:	4618      	movlt	r0, r3
 8008288:	e7a6      	b.n	80081d8 <_printf_i+0x160>
 800828a:	2301      	movs	r3, #1
 800828c:	4632      	mov	r2, r6
 800828e:	4649      	mov	r1, r9
 8008290:	4640      	mov	r0, r8
 8008292:	47d0      	blx	sl
 8008294:	3001      	adds	r0, #1
 8008296:	d09d      	beq.n	80081d4 <_printf_i+0x15c>
 8008298:	3501      	adds	r5, #1
 800829a:	68e3      	ldr	r3, [r4, #12]
 800829c:	9903      	ldr	r1, [sp, #12]
 800829e:	1a5b      	subs	r3, r3, r1
 80082a0:	42ab      	cmp	r3, r5
 80082a2:	dcf2      	bgt.n	800828a <_printf_i+0x212>
 80082a4:	e7eb      	b.n	800827e <_printf_i+0x206>
 80082a6:	2500      	movs	r5, #0
 80082a8:	f104 0619 	add.w	r6, r4, #25
 80082ac:	e7f5      	b.n	800829a <_printf_i+0x222>
 80082ae:	bf00      	nop
 80082b0:	0800d666 	.word	0x0800d666
 80082b4:	0800d677 	.word	0x0800d677

080082b8 <std>:
 80082b8:	2300      	movs	r3, #0
 80082ba:	b510      	push	{r4, lr}
 80082bc:	4604      	mov	r4, r0
 80082be:	e9c0 3300 	strd	r3, r3, [r0]
 80082c2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80082c6:	6083      	str	r3, [r0, #8]
 80082c8:	8181      	strh	r1, [r0, #12]
 80082ca:	6643      	str	r3, [r0, #100]	@ 0x64
 80082cc:	81c2      	strh	r2, [r0, #14]
 80082ce:	6183      	str	r3, [r0, #24]
 80082d0:	4619      	mov	r1, r3
 80082d2:	2208      	movs	r2, #8
 80082d4:	305c      	adds	r0, #92	@ 0x5c
 80082d6:	f000 f914 	bl	8008502 <memset>
 80082da:	4b0d      	ldr	r3, [pc, #52]	@ (8008310 <std+0x58>)
 80082dc:	6263      	str	r3, [r4, #36]	@ 0x24
 80082de:	4b0d      	ldr	r3, [pc, #52]	@ (8008314 <std+0x5c>)
 80082e0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80082e2:	4b0d      	ldr	r3, [pc, #52]	@ (8008318 <std+0x60>)
 80082e4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80082e6:	4b0d      	ldr	r3, [pc, #52]	@ (800831c <std+0x64>)
 80082e8:	6323      	str	r3, [r4, #48]	@ 0x30
 80082ea:	4b0d      	ldr	r3, [pc, #52]	@ (8008320 <std+0x68>)
 80082ec:	6224      	str	r4, [r4, #32]
 80082ee:	429c      	cmp	r4, r3
 80082f0:	d006      	beq.n	8008300 <std+0x48>
 80082f2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80082f6:	4294      	cmp	r4, r2
 80082f8:	d002      	beq.n	8008300 <std+0x48>
 80082fa:	33d0      	adds	r3, #208	@ 0xd0
 80082fc:	429c      	cmp	r4, r3
 80082fe:	d105      	bne.n	800830c <std+0x54>
 8008300:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8008304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008308:	f000 b978 	b.w	80085fc <__retarget_lock_init_recursive>
 800830c:	bd10      	pop	{r4, pc}
 800830e:	bf00      	nop
 8008310:	0800847d 	.word	0x0800847d
 8008314:	0800849f 	.word	0x0800849f
 8008318:	080084d7 	.word	0x080084d7
 800831c:	080084fb 	.word	0x080084fb
 8008320:	20000648 	.word	0x20000648

08008324 <stdio_exit_handler>:
 8008324:	4a02      	ldr	r2, [pc, #8]	@ (8008330 <stdio_exit_handler+0xc>)
 8008326:	4903      	ldr	r1, [pc, #12]	@ (8008334 <stdio_exit_handler+0x10>)
 8008328:	4803      	ldr	r0, [pc, #12]	@ (8008338 <stdio_exit_handler+0x14>)
 800832a:	f000 b869 	b.w	8008400 <_fwalk_sglue>
 800832e:	bf00      	nop
 8008330:	20000020 	.word	0x20000020
 8008334:	08009f5d 	.word	0x08009f5d
 8008338:	20000030 	.word	0x20000030

0800833c <cleanup_stdio>:
 800833c:	6841      	ldr	r1, [r0, #4]
 800833e:	4b0c      	ldr	r3, [pc, #48]	@ (8008370 <cleanup_stdio+0x34>)
 8008340:	4299      	cmp	r1, r3
 8008342:	b510      	push	{r4, lr}
 8008344:	4604      	mov	r4, r0
 8008346:	d001      	beq.n	800834c <cleanup_stdio+0x10>
 8008348:	f001 fe08 	bl	8009f5c <_fflush_r>
 800834c:	68a1      	ldr	r1, [r4, #8]
 800834e:	4b09      	ldr	r3, [pc, #36]	@ (8008374 <cleanup_stdio+0x38>)
 8008350:	4299      	cmp	r1, r3
 8008352:	d002      	beq.n	800835a <cleanup_stdio+0x1e>
 8008354:	4620      	mov	r0, r4
 8008356:	f001 fe01 	bl	8009f5c <_fflush_r>
 800835a:	68e1      	ldr	r1, [r4, #12]
 800835c:	4b06      	ldr	r3, [pc, #24]	@ (8008378 <cleanup_stdio+0x3c>)
 800835e:	4299      	cmp	r1, r3
 8008360:	d004      	beq.n	800836c <cleanup_stdio+0x30>
 8008362:	4620      	mov	r0, r4
 8008364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008368:	f001 bdf8 	b.w	8009f5c <_fflush_r>
 800836c:	bd10      	pop	{r4, pc}
 800836e:	bf00      	nop
 8008370:	20000648 	.word	0x20000648
 8008374:	200006b0 	.word	0x200006b0
 8008378:	20000718 	.word	0x20000718

0800837c <global_stdio_init.part.0>:
 800837c:	b510      	push	{r4, lr}
 800837e:	4b0b      	ldr	r3, [pc, #44]	@ (80083ac <global_stdio_init.part.0+0x30>)
 8008380:	4c0b      	ldr	r4, [pc, #44]	@ (80083b0 <global_stdio_init.part.0+0x34>)
 8008382:	4a0c      	ldr	r2, [pc, #48]	@ (80083b4 <global_stdio_init.part.0+0x38>)
 8008384:	601a      	str	r2, [r3, #0]
 8008386:	4620      	mov	r0, r4
 8008388:	2200      	movs	r2, #0
 800838a:	2104      	movs	r1, #4
 800838c:	f7ff ff94 	bl	80082b8 <std>
 8008390:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8008394:	2201      	movs	r2, #1
 8008396:	2109      	movs	r1, #9
 8008398:	f7ff ff8e 	bl	80082b8 <std>
 800839c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80083a0:	2202      	movs	r2, #2
 80083a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80083a6:	2112      	movs	r1, #18
 80083a8:	f7ff bf86 	b.w	80082b8 <std>
 80083ac:	20000780 	.word	0x20000780
 80083b0:	20000648 	.word	0x20000648
 80083b4:	08008325 	.word	0x08008325

080083b8 <__sfp_lock_acquire>:
 80083b8:	4801      	ldr	r0, [pc, #4]	@ (80083c0 <__sfp_lock_acquire+0x8>)
 80083ba:	f000 b920 	b.w	80085fe <__retarget_lock_acquire_recursive>
 80083be:	bf00      	nop
 80083c0:	20000789 	.word	0x20000789

080083c4 <__sfp_lock_release>:
 80083c4:	4801      	ldr	r0, [pc, #4]	@ (80083cc <__sfp_lock_release+0x8>)
 80083c6:	f000 b91b 	b.w	8008600 <__retarget_lock_release_recursive>
 80083ca:	bf00      	nop
 80083cc:	20000789 	.word	0x20000789

080083d0 <__sinit>:
 80083d0:	b510      	push	{r4, lr}
 80083d2:	4604      	mov	r4, r0
 80083d4:	f7ff fff0 	bl	80083b8 <__sfp_lock_acquire>
 80083d8:	6a23      	ldr	r3, [r4, #32]
 80083da:	b11b      	cbz	r3, 80083e4 <__sinit+0x14>
 80083dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80083e0:	f7ff bff0 	b.w	80083c4 <__sfp_lock_release>
 80083e4:	4b04      	ldr	r3, [pc, #16]	@ (80083f8 <__sinit+0x28>)
 80083e6:	6223      	str	r3, [r4, #32]
 80083e8:	4b04      	ldr	r3, [pc, #16]	@ (80083fc <__sinit+0x2c>)
 80083ea:	681b      	ldr	r3, [r3, #0]
 80083ec:	2b00      	cmp	r3, #0
 80083ee:	d1f5      	bne.n	80083dc <__sinit+0xc>
 80083f0:	f7ff ffc4 	bl	800837c <global_stdio_init.part.0>
 80083f4:	e7f2      	b.n	80083dc <__sinit+0xc>
 80083f6:	bf00      	nop
 80083f8:	0800833d 	.word	0x0800833d
 80083fc:	20000780 	.word	0x20000780

08008400 <_fwalk_sglue>:
 8008400:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008404:	4607      	mov	r7, r0
 8008406:	4688      	mov	r8, r1
 8008408:	4614      	mov	r4, r2
 800840a:	2600      	movs	r6, #0
 800840c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8008410:	f1b9 0901 	subs.w	r9, r9, #1
 8008414:	d505      	bpl.n	8008422 <_fwalk_sglue+0x22>
 8008416:	6824      	ldr	r4, [r4, #0]
 8008418:	2c00      	cmp	r4, #0
 800841a:	d1f7      	bne.n	800840c <_fwalk_sglue+0xc>
 800841c:	4630      	mov	r0, r6
 800841e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008422:	89ab      	ldrh	r3, [r5, #12]
 8008424:	2b01      	cmp	r3, #1
 8008426:	d907      	bls.n	8008438 <_fwalk_sglue+0x38>
 8008428:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800842c:	3301      	adds	r3, #1
 800842e:	d003      	beq.n	8008438 <_fwalk_sglue+0x38>
 8008430:	4629      	mov	r1, r5
 8008432:	4638      	mov	r0, r7
 8008434:	47c0      	blx	r8
 8008436:	4306      	orrs	r6, r0
 8008438:	3568      	adds	r5, #104	@ 0x68
 800843a:	e7e9      	b.n	8008410 <_fwalk_sglue+0x10>

0800843c <siprintf>:
 800843c:	b40e      	push	{r1, r2, r3}
 800843e:	b500      	push	{lr}
 8008440:	b09c      	sub	sp, #112	@ 0x70
 8008442:	ab1d      	add	r3, sp, #116	@ 0x74
 8008444:	9002      	str	r0, [sp, #8]
 8008446:	9006      	str	r0, [sp, #24]
 8008448:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800844c:	4809      	ldr	r0, [pc, #36]	@ (8008474 <siprintf+0x38>)
 800844e:	9107      	str	r1, [sp, #28]
 8008450:	9104      	str	r1, [sp, #16]
 8008452:	4909      	ldr	r1, [pc, #36]	@ (8008478 <siprintf+0x3c>)
 8008454:	f853 2b04 	ldr.w	r2, [r3], #4
 8008458:	9105      	str	r1, [sp, #20]
 800845a:	6800      	ldr	r0, [r0, #0]
 800845c:	9301      	str	r3, [sp, #4]
 800845e:	a902      	add	r1, sp, #8
 8008460:	f001 fbfc 	bl	8009c5c <_svfiprintf_r>
 8008464:	9b02      	ldr	r3, [sp, #8]
 8008466:	2200      	movs	r2, #0
 8008468:	701a      	strb	r2, [r3, #0]
 800846a:	b01c      	add	sp, #112	@ 0x70
 800846c:	f85d eb04 	ldr.w	lr, [sp], #4
 8008470:	b003      	add	sp, #12
 8008472:	4770      	bx	lr
 8008474:	2000002c 	.word	0x2000002c
 8008478:	ffff0208 	.word	0xffff0208

0800847c <__sread>:
 800847c:	b510      	push	{r4, lr}
 800847e:	460c      	mov	r4, r1
 8008480:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008484:	f000 f86c 	bl	8008560 <_read_r>
 8008488:	2800      	cmp	r0, #0
 800848a:	bfab      	itete	ge
 800848c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800848e:	89a3      	ldrhlt	r3, [r4, #12]
 8008490:	181b      	addge	r3, r3, r0
 8008492:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8008496:	bfac      	ite	ge
 8008498:	6563      	strge	r3, [r4, #84]	@ 0x54
 800849a:	81a3      	strhlt	r3, [r4, #12]
 800849c:	bd10      	pop	{r4, pc}

0800849e <__swrite>:
 800849e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80084a2:	461f      	mov	r7, r3
 80084a4:	898b      	ldrh	r3, [r1, #12]
 80084a6:	05db      	lsls	r3, r3, #23
 80084a8:	4605      	mov	r5, r0
 80084aa:	460c      	mov	r4, r1
 80084ac:	4616      	mov	r6, r2
 80084ae:	d505      	bpl.n	80084bc <__swrite+0x1e>
 80084b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084b4:	2302      	movs	r3, #2
 80084b6:	2200      	movs	r2, #0
 80084b8:	f000 f840 	bl	800853c <_lseek_r>
 80084bc:	89a3      	ldrh	r3, [r4, #12]
 80084be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80084c2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80084c6:	81a3      	strh	r3, [r4, #12]
 80084c8:	4632      	mov	r2, r6
 80084ca:	463b      	mov	r3, r7
 80084cc:	4628      	mov	r0, r5
 80084ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80084d2:	f000 b857 	b.w	8008584 <_write_r>

080084d6 <__sseek>:
 80084d6:	b510      	push	{r4, lr}
 80084d8:	460c      	mov	r4, r1
 80084da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084de:	f000 f82d 	bl	800853c <_lseek_r>
 80084e2:	1c43      	adds	r3, r0, #1
 80084e4:	89a3      	ldrh	r3, [r4, #12]
 80084e6:	bf15      	itete	ne
 80084e8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80084ea:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80084ee:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80084f2:	81a3      	strheq	r3, [r4, #12]
 80084f4:	bf18      	it	ne
 80084f6:	81a3      	strhne	r3, [r4, #12]
 80084f8:	bd10      	pop	{r4, pc}

080084fa <__sclose>:
 80084fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084fe:	f000 b80d 	b.w	800851c <_close_r>

08008502 <memset>:
 8008502:	4402      	add	r2, r0
 8008504:	4603      	mov	r3, r0
 8008506:	4293      	cmp	r3, r2
 8008508:	d100      	bne.n	800850c <memset+0xa>
 800850a:	4770      	bx	lr
 800850c:	f803 1b01 	strb.w	r1, [r3], #1
 8008510:	e7f9      	b.n	8008506 <memset+0x4>
	...

08008514 <_localeconv_r>:
 8008514:	4800      	ldr	r0, [pc, #0]	@ (8008518 <_localeconv_r+0x4>)
 8008516:	4770      	bx	lr
 8008518:	2000016c 	.word	0x2000016c

0800851c <_close_r>:
 800851c:	b538      	push	{r3, r4, r5, lr}
 800851e:	4d06      	ldr	r5, [pc, #24]	@ (8008538 <_close_r+0x1c>)
 8008520:	2300      	movs	r3, #0
 8008522:	4604      	mov	r4, r0
 8008524:	4608      	mov	r0, r1
 8008526:	602b      	str	r3, [r5, #0]
 8008528:	f7fa fa76 	bl	8002a18 <_close>
 800852c:	1c43      	adds	r3, r0, #1
 800852e:	d102      	bne.n	8008536 <_close_r+0x1a>
 8008530:	682b      	ldr	r3, [r5, #0]
 8008532:	b103      	cbz	r3, 8008536 <_close_r+0x1a>
 8008534:	6023      	str	r3, [r4, #0]
 8008536:	bd38      	pop	{r3, r4, r5, pc}
 8008538:	20000784 	.word	0x20000784

0800853c <_lseek_r>:
 800853c:	b538      	push	{r3, r4, r5, lr}
 800853e:	4d07      	ldr	r5, [pc, #28]	@ (800855c <_lseek_r+0x20>)
 8008540:	4604      	mov	r4, r0
 8008542:	4608      	mov	r0, r1
 8008544:	4611      	mov	r1, r2
 8008546:	2200      	movs	r2, #0
 8008548:	602a      	str	r2, [r5, #0]
 800854a:	461a      	mov	r2, r3
 800854c:	f7fa fa8b 	bl	8002a66 <_lseek>
 8008550:	1c43      	adds	r3, r0, #1
 8008552:	d102      	bne.n	800855a <_lseek_r+0x1e>
 8008554:	682b      	ldr	r3, [r5, #0]
 8008556:	b103      	cbz	r3, 800855a <_lseek_r+0x1e>
 8008558:	6023      	str	r3, [r4, #0]
 800855a:	bd38      	pop	{r3, r4, r5, pc}
 800855c:	20000784 	.word	0x20000784

08008560 <_read_r>:
 8008560:	b538      	push	{r3, r4, r5, lr}
 8008562:	4d07      	ldr	r5, [pc, #28]	@ (8008580 <_read_r+0x20>)
 8008564:	4604      	mov	r4, r0
 8008566:	4608      	mov	r0, r1
 8008568:	4611      	mov	r1, r2
 800856a:	2200      	movs	r2, #0
 800856c:	602a      	str	r2, [r5, #0]
 800856e:	461a      	mov	r2, r3
 8008570:	f7fa fa19 	bl	80029a6 <_read>
 8008574:	1c43      	adds	r3, r0, #1
 8008576:	d102      	bne.n	800857e <_read_r+0x1e>
 8008578:	682b      	ldr	r3, [r5, #0]
 800857a:	b103      	cbz	r3, 800857e <_read_r+0x1e>
 800857c:	6023      	str	r3, [r4, #0]
 800857e:	bd38      	pop	{r3, r4, r5, pc}
 8008580:	20000784 	.word	0x20000784

08008584 <_write_r>:
 8008584:	b538      	push	{r3, r4, r5, lr}
 8008586:	4d07      	ldr	r5, [pc, #28]	@ (80085a4 <_write_r+0x20>)
 8008588:	4604      	mov	r4, r0
 800858a:	4608      	mov	r0, r1
 800858c:	4611      	mov	r1, r2
 800858e:	2200      	movs	r2, #0
 8008590:	602a      	str	r2, [r5, #0]
 8008592:	461a      	mov	r2, r3
 8008594:	f7fa fa24 	bl	80029e0 <_write>
 8008598:	1c43      	adds	r3, r0, #1
 800859a:	d102      	bne.n	80085a2 <_write_r+0x1e>
 800859c:	682b      	ldr	r3, [r5, #0]
 800859e:	b103      	cbz	r3, 80085a2 <_write_r+0x1e>
 80085a0:	6023      	str	r3, [r4, #0]
 80085a2:	bd38      	pop	{r3, r4, r5, pc}
 80085a4:	20000784 	.word	0x20000784

080085a8 <__errno>:
 80085a8:	4b01      	ldr	r3, [pc, #4]	@ (80085b0 <__errno+0x8>)
 80085aa:	6818      	ldr	r0, [r3, #0]
 80085ac:	4770      	bx	lr
 80085ae:	bf00      	nop
 80085b0:	2000002c 	.word	0x2000002c

080085b4 <__libc_init_array>:
 80085b4:	b570      	push	{r4, r5, r6, lr}
 80085b6:	4d0d      	ldr	r5, [pc, #52]	@ (80085ec <__libc_init_array+0x38>)
 80085b8:	4c0d      	ldr	r4, [pc, #52]	@ (80085f0 <__libc_init_array+0x3c>)
 80085ba:	1b64      	subs	r4, r4, r5
 80085bc:	10a4      	asrs	r4, r4, #2
 80085be:	2600      	movs	r6, #0
 80085c0:	42a6      	cmp	r6, r4
 80085c2:	d109      	bne.n	80085d8 <__libc_init_array+0x24>
 80085c4:	4d0b      	ldr	r5, [pc, #44]	@ (80085f4 <__libc_init_array+0x40>)
 80085c6:	4c0c      	ldr	r4, [pc, #48]	@ (80085f8 <__libc_init_array+0x44>)
 80085c8:	f002 f866 	bl	800a698 <_init>
 80085cc:	1b64      	subs	r4, r4, r5
 80085ce:	10a4      	asrs	r4, r4, #2
 80085d0:	2600      	movs	r6, #0
 80085d2:	42a6      	cmp	r6, r4
 80085d4:	d105      	bne.n	80085e2 <__libc_init_array+0x2e>
 80085d6:	bd70      	pop	{r4, r5, r6, pc}
 80085d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80085dc:	4798      	blx	r3
 80085de:	3601      	adds	r6, #1
 80085e0:	e7ee      	b.n	80085c0 <__libc_init_array+0xc>
 80085e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80085e6:	4798      	blx	r3
 80085e8:	3601      	adds	r6, #1
 80085ea:	e7f2      	b.n	80085d2 <__libc_init_array+0x1e>
 80085ec:	0800d9d0 	.word	0x0800d9d0
 80085f0:	0800d9d0 	.word	0x0800d9d0
 80085f4:	0800d9d0 	.word	0x0800d9d0
 80085f8:	0800d9d4 	.word	0x0800d9d4

080085fc <__retarget_lock_init_recursive>:
 80085fc:	4770      	bx	lr

080085fe <__retarget_lock_acquire_recursive>:
 80085fe:	4770      	bx	lr

08008600 <__retarget_lock_release_recursive>:
 8008600:	4770      	bx	lr

08008602 <quorem>:
 8008602:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008606:	6903      	ldr	r3, [r0, #16]
 8008608:	690c      	ldr	r4, [r1, #16]
 800860a:	42a3      	cmp	r3, r4
 800860c:	4607      	mov	r7, r0
 800860e:	db7e      	blt.n	800870e <quorem+0x10c>
 8008610:	3c01      	subs	r4, #1
 8008612:	f101 0814 	add.w	r8, r1, #20
 8008616:	00a3      	lsls	r3, r4, #2
 8008618:	f100 0514 	add.w	r5, r0, #20
 800861c:	9300      	str	r3, [sp, #0]
 800861e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008622:	9301      	str	r3, [sp, #4]
 8008624:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8008628:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800862c:	3301      	adds	r3, #1
 800862e:	429a      	cmp	r2, r3
 8008630:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8008634:	fbb2 f6f3 	udiv	r6, r2, r3
 8008638:	d32e      	bcc.n	8008698 <quorem+0x96>
 800863a:	f04f 0a00 	mov.w	sl, #0
 800863e:	46c4      	mov	ip, r8
 8008640:	46ae      	mov	lr, r5
 8008642:	46d3      	mov	fp, sl
 8008644:	f85c 3b04 	ldr.w	r3, [ip], #4
 8008648:	b298      	uxth	r0, r3
 800864a:	fb06 a000 	mla	r0, r6, r0, sl
 800864e:	0c02      	lsrs	r2, r0, #16
 8008650:	0c1b      	lsrs	r3, r3, #16
 8008652:	fb06 2303 	mla	r3, r6, r3, r2
 8008656:	f8de 2000 	ldr.w	r2, [lr]
 800865a:	b280      	uxth	r0, r0
 800865c:	b292      	uxth	r2, r2
 800865e:	1a12      	subs	r2, r2, r0
 8008660:	445a      	add	r2, fp
 8008662:	f8de 0000 	ldr.w	r0, [lr]
 8008666:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800866a:	b29b      	uxth	r3, r3
 800866c:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8008670:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8008674:	b292      	uxth	r2, r2
 8008676:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800867a:	45e1      	cmp	r9, ip
 800867c:	f84e 2b04 	str.w	r2, [lr], #4
 8008680:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8008684:	d2de      	bcs.n	8008644 <quorem+0x42>
 8008686:	9b00      	ldr	r3, [sp, #0]
 8008688:	58eb      	ldr	r3, [r5, r3]
 800868a:	b92b      	cbnz	r3, 8008698 <quorem+0x96>
 800868c:	9b01      	ldr	r3, [sp, #4]
 800868e:	3b04      	subs	r3, #4
 8008690:	429d      	cmp	r5, r3
 8008692:	461a      	mov	r2, r3
 8008694:	d32f      	bcc.n	80086f6 <quorem+0xf4>
 8008696:	613c      	str	r4, [r7, #16]
 8008698:	4638      	mov	r0, r7
 800869a:	f001 f97b 	bl	8009994 <__mcmp>
 800869e:	2800      	cmp	r0, #0
 80086a0:	db25      	blt.n	80086ee <quorem+0xec>
 80086a2:	4629      	mov	r1, r5
 80086a4:	2000      	movs	r0, #0
 80086a6:	f858 2b04 	ldr.w	r2, [r8], #4
 80086aa:	f8d1 c000 	ldr.w	ip, [r1]
 80086ae:	fa1f fe82 	uxth.w	lr, r2
 80086b2:	fa1f f38c 	uxth.w	r3, ip
 80086b6:	eba3 030e 	sub.w	r3, r3, lr
 80086ba:	4403      	add	r3, r0
 80086bc:	0c12      	lsrs	r2, r2, #16
 80086be:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80086c2:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80086c6:	b29b      	uxth	r3, r3
 80086c8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80086cc:	45c1      	cmp	r9, r8
 80086ce:	f841 3b04 	str.w	r3, [r1], #4
 80086d2:	ea4f 4022 	mov.w	r0, r2, asr #16
 80086d6:	d2e6      	bcs.n	80086a6 <quorem+0xa4>
 80086d8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80086dc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80086e0:	b922      	cbnz	r2, 80086ec <quorem+0xea>
 80086e2:	3b04      	subs	r3, #4
 80086e4:	429d      	cmp	r5, r3
 80086e6:	461a      	mov	r2, r3
 80086e8:	d30b      	bcc.n	8008702 <quorem+0x100>
 80086ea:	613c      	str	r4, [r7, #16]
 80086ec:	3601      	adds	r6, #1
 80086ee:	4630      	mov	r0, r6
 80086f0:	b003      	add	sp, #12
 80086f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086f6:	6812      	ldr	r2, [r2, #0]
 80086f8:	3b04      	subs	r3, #4
 80086fa:	2a00      	cmp	r2, #0
 80086fc:	d1cb      	bne.n	8008696 <quorem+0x94>
 80086fe:	3c01      	subs	r4, #1
 8008700:	e7c6      	b.n	8008690 <quorem+0x8e>
 8008702:	6812      	ldr	r2, [r2, #0]
 8008704:	3b04      	subs	r3, #4
 8008706:	2a00      	cmp	r2, #0
 8008708:	d1ef      	bne.n	80086ea <quorem+0xe8>
 800870a:	3c01      	subs	r4, #1
 800870c:	e7ea      	b.n	80086e4 <quorem+0xe2>
 800870e:	2000      	movs	r0, #0
 8008710:	e7ee      	b.n	80086f0 <quorem+0xee>
 8008712:	0000      	movs	r0, r0
 8008714:	0000      	movs	r0, r0
	...

08008718 <_dtoa_r>:
 8008718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800871c:	69c7      	ldr	r7, [r0, #28]
 800871e:	b099      	sub	sp, #100	@ 0x64
 8008720:	ed8d 0b02 	vstr	d0, [sp, #8]
 8008724:	ec55 4b10 	vmov	r4, r5, d0
 8008728:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800872a:	9109      	str	r1, [sp, #36]	@ 0x24
 800872c:	4683      	mov	fp, r0
 800872e:	920e      	str	r2, [sp, #56]	@ 0x38
 8008730:	9313      	str	r3, [sp, #76]	@ 0x4c
 8008732:	b97f      	cbnz	r7, 8008754 <_dtoa_r+0x3c>
 8008734:	2010      	movs	r0, #16
 8008736:	f000 fdfd 	bl	8009334 <malloc>
 800873a:	4602      	mov	r2, r0
 800873c:	f8cb 001c 	str.w	r0, [fp, #28]
 8008740:	b920      	cbnz	r0, 800874c <_dtoa_r+0x34>
 8008742:	4ba7      	ldr	r3, [pc, #668]	@ (80089e0 <_dtoa_r+0x2c8>)
 8008744:	21ef      	movs	r1, #239	@ 0xef
 8008746:	48a7      	ldr	r0, [pc, #668]	@ (80089e4 <_dtoa_r+0x2cc>)
 8008748:	f001 fc68 	bl	800a01c <__assert_func>
 800874c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8008750:	6007      	str	r7, [r0, #0]
 8008752:	60c7      	str	r7, [r0, #12]
 8008754:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008758:	6819      	ldr	r1, [r3, #0]
 800875a:	b159      	cbz	r1, 8008774 <_dtoa_r+0x5c>
 800875c:	685a      	ldr	r2, [r3, #4]
 800875e:	604a      	str	r2, [r1, #4]
 8008760:	2301      	movs	r3, #1
 8008762:	4093      	lsls	r3, r2
 8008764:	608b      	str	r3, [r1, #8]
 8008766:	4658      	mov	r0, fp
 8008768:	f000 feda 	bl	8009520 <_Bfree>
 800876c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008770:	2200      	movs	r2, #0
 8008772:	601a      	str	r2, [r3, #0]
 8008774:	1e2b      	subs	r3, r5, #0
 8008776:	bfb9      	ittee	lt
 8008778:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800877c:	9303      	strlt	r3, [sp, #12]
 800877e:	2300      	movge	r3, #0
 8008780:	6033      	strge	r3, [r6, #0]
 8008782:	9f03      	ldr	r7, [sp, #12]
 8008784:	4b98      	ldr	r3, [pc, #608]	@ (80089e8 <_dtoa_r+0x2d0>)
 8008786:	bfbc      	itt	lt
 8008788:	2201      	movlt	r2, #1
 800878a:	6032      	strlt	r2, [r6, #0]
 800878c:	43bb      	bics	r3, r7
 800878e:	d112      	bne.n	80087b6 <_dtoa_r+0x9e>
 8008790:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008792:	f242 730f 	movw	r3, #9999	@ 0x270f
 8008796:	6013      	str	r3, [r2, #0]
 8008798:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800879c:	4323      	orrs	r3, r4
 800879e:	f000 854d 	beq.w	800923c <_dtoa_r+0xb24>
 80087a2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80087a4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 80089fc <_dtoa_r+0x2e4>
 80087a8:	2b00      	cmp	r3, #0
 80087aa:	f000 854f 	beq.w	800924c <_dtoa_r+0xb34>
 80087ae:	f10a 0303 	add.w	r3, sl, #3
 80087b2:	f000 bd49 	b.w	8009248 <_dtoa_r+0xb30>
 80087b6:	ed9d 7b02 	vldr	d7, [sp, #8]
 80087ba:	2200      	movs	r2, #0
 80087bc:	ec51 0b17 	vmov	r0, r1, d7
 80087c0:	2300      	movs	r3, #0
 80087c2:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 80087c6:	f7f8 f97f 	bl	8000ac8 <__aeabi_dcmpeq>
 80087ca:	4680      	mov	r8, r0
 80087cc:	b158      	cbz	r0, 80087e6 <_dtoa_r+0xce>
 80087ce:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80087d0:	2301      	movs	r3, #1
 80087d2:	6013      	str	r3, [r2, #0]
 80087d4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80087d6:	b113      	cbz	r3, 80087de <_dtoa_r+0xc6>
 80087d8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80087da:	4b84      	ldr	r3, [pc, #528]	@ (80089ec <_dtoa_r+0x2d4>)
 80087dc:	6013      	str	r3, [r2, #0]
 80087de:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8008a00 <_dtoa_r+0x2e8>
 80087e2:	f000 bd33 	b.w	800924c <_dtoa_r+0xb34>
 80087e6:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80087ea:	aa16      	add	r2, sp, #88	@ 0x58
 80087ec:	a917      	add	r1, sp, #92	@ 0x5c
 80087ee:	4658      	mov	r0, fp
 80087f0:	f001 f980 	bl	8009af4 <__d2b>
 80087f4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80087f8:	4681      	mov	r9, r0
 80087fa:	2e00      	cmp	r6, #0
 80087fc:	d077      	beq.n	80088ee <_dtoa_r+0x1d6>
 80087fe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008800:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8008804:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008808:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800880c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8008810:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8008814:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8008818:	4619      	mov	r1, r3
 800881a:	2200      	movs	r2, #0
 800881c:	4b74      	ldr	r3, [pc, #464]	@ (80089f0 <_dtoa_r+0x2d8>)
 800881e:	f7f7 fd33 	bl	8000288 <__aeabi_dsub>
 8008822:	a369      	add	r3, pc, #420	@ (adr r3, 80089c8 <_dtoa_r+0x2b0>)
 8008824:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008828:	f7f7 fee6 	bl	80005f8 <__aeabi_dmul>
 800882c:	a368      	add	r3, pc, #416	@ (adr r3, 80089d0 <_dtoa_r+0x2b8>)
 800882e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008832:	f7f7 fd2b 	bl	800028c <__adddf3>
 8008836:	4604      	mov	r4, r0
 8008838:	4630      	mov	r0, r6
 800883a:	460d      	mov	r5, r1
 800883c:	f7f7 fe72 	bl	8000524 <__aeabi_i2d>
 8008840:	a365      	add	r3, pc, #404	@ (adr r3, 80089d8 <_dtoa_r+0x2c0>)
 8008842:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008846:	f7f7 fed7 	bl	80005f8 <__aeabi_dmul>
 800884a:	4602      	mov	r2, r0
 800884c:	460b      	mov	r3, r1
 800884e:	4620      	mov	r0, r4
 8008850:	4629      	mov	r1, r5
 8008852:	f7f7 fd1b 	bl	800028c <__adddf3>
 8008856:	4604      	mov	r4, r0
 8008858:	460d      	mov	r5, r1
 800885a:	f7f8 f97d 	bl	8000b58 <__aeabi_d2iz>
 800885e:	2200      	movs	r2, #0
 8008860:	4607      	mov	r7, r0
 8008862:	2300      	movs	r3, #0
 8008864:	4620      	mov	r0, r4
 8008866:	4629      	mov	r1, r5
 8008868:	f7f8 f938 	bl	8000adc <__aeabi_dcmplt>
 800886c:	b140      	cbz	r0, 8008880 <_dtoa_r+0x168>
 800886e:	4638      	mov	r0, r7
 8008870:	f7f7 fe58 	bl	8000524 <__aeabi_i2d>
 8008874:	4622      	mov	r2, r4
 8008876:	462b      	mov	r3, r5
 8008878:	f7f8 f926 	bl	8000ac8 <__aeabi_dcmpeq>
 800887c:	b900      	cbnz	r0, 8008880 <_dtoa_r+0x168>
 800887e:	3f01      	subs	r7, #1
 8008880:	2f16      	cmp	r7, #22
 8008882:	d851      	bhi.n	8008928 <_dtoa_r+0x210>
 8008884:	4b5b      	ldr	r3, [pc, #364]	@ (80089f4 <_dtoa_r+0x2dc>)
 8008886:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800888a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800888e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008892:	f7f8 f923 	bl	8000adc <__aeabi_dcmplt>
 8008896:	2800      	cmp	r0, #0
 8008898:	d048      	beq.n	800892c <_dtoa_r+0x214>
 800889a:	3f01      	subs	r7, #1
 800889c:	2300      	movs	r3, #0
 800889e:	9312      	str	r3, [sp, #72]	@ 0x48
 80088a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80088a2:	1b9b      	subs	r3, r3, r6
 80088a4:	1e5a      	subs	r2, r3, #1
 80088a6:	bf44      	itt	mi
 80088a8:	f1c3 0801 	rsbmi	r8, r3, #1
 80088ac:	2300      	movmi	r3, #0
 80088ae:	9208      	str	r2, [sp, #32]
 80088b0:	bf54      	ite	pl
 80088b2:	f04f 0800 	movpl.w	r8, #0
 80088b6:	9308      	strmi	r3, [sp, #32]
 80088b8:	2f00      	cmp	r7, #0
 80088ba:	db39      	blt.n	8008930 <_dtoa_r+0x218>
 80088bc:	9b08      	ldr	r3, [sp, #32]
 80088be:	970f      	str	r7, [sp, #60]	@ 0x3c
 80088c0:	443b      	add	r3, r7
 80088c2:	9308      	str	r3, [sp, #32]
 80088c4:	2300      	movs	r3, #0
 80088c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80088c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80088ca:	2b09      	cmp	r3, #9
 80088cc:	d864      	bhi.n	8008998 <_dtoa_r+0x280>
 80088ce:	2b05      	cmp	r3, #5
 80088d0:	bfc4      	itt	gt
 80088d2:	3b04      	subgt	r3, #4
 80088d4:	9309      	strgt	r3, [sp, #36]	@ 0x24
 80088d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80088d8:	f1a3 0302 	sub.w	r3, r3, #2
 80088dc:	bfcc      	ite	gt
 80088de:	2400      	movgt	r4, #0
 80088e0:	2401      	movle	r4, #1
 80088e2:	2b03      	cmp	r3, #3
 80088e4:	d863      	bhi.n	80089ae <_dtoa_r+0x296>
 80088e6:	e8df f003 	tbb	[pc, r3]
 80088ea:	372a      	.short	0x372a
 80088ec:	5535      	.short	0x5535
 80088ee:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 80088f2:	441e      	add	r6, r3
 80088f4:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80088f8:	2b20      	cmp	r3, #32
 80088fa:	bfc1      	itttt	gt
 80088fc:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8008900:	409f      	lslgt	r7, r3
 8008902:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8008906:	fa24 f303 	lsrgt.w	r3, r4, r3
 800890a:	bfd6      	itet	le
 800890c:	f1c3 0320 	rsble	r3, r3, #32
 8008910:	ea47 0003 	orrgt.w	r0, r7, r3
 8008914:	fa04 f003 	lslle.w	r0, r4, r3
 8008918:	f7f7 fdf4 	bl	8000504 <__aeabi_ui2d>
 800891c:	2201      	movs	r2, #1
 800891e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8008922:	3e01      	subs	r6, #1
 8008924:	9214      	str	r2, [sp, #80]	@ 0x50
 8008926:	e777      	b.n	8008818 <_dtoa_r+0x100>
 8008928:	2301      	movs	r3, #1
 800892a:	e7b8      	b.n	800889e <_dtoa_r+0x186>
 800892c:	9012      	str	r0, [sp, #72]	@ 0x48
 800892e:	e7b7      	b.n	80088a0 <_dtoa_r+0x188>
 8008930:	427b      	negs	r3, r7
 8008932:	930a      	str	r3, [sp, #40]	@ 0x28
 8008934:	2300      	movs	r3, #0
 8008936:	eba8 0807 	sub.w	r8, r8, r7
 800893a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800893c:	e7c4      	b.n	80088c8 <_dtoa_r+0x1b0>
 800893e:	2300      	movs	r3, #0
 8008940:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008942:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008944:	2b00      	cmp	r3, #0
 8008946:	dc35      	bgt.n	80089b4 <_dtoa_r+0x29c>
 8008948:	2301      	movs	r3, #1
 800894a:	9300      	str	r3, [sp, #0]
 800894c:	9307      	str	r3, [sp, #28]
 800894e:	461a      	mov	r2, r3
 8008950:	920e      	str	r2, [sp, #56]	@ 0x38
 8008952:	e00b      	b.n	800896c <_dtoa_r+0x254>
 8008954:	2301      	movs	r3, #1
 8008956:	e7f3      	b.n	8008940 <_dtoa_r+0x228>
 8008958:	2300      	movs	r3, #0
 800895a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800895c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800895e:	18fb      	adds	r3, r7, r3
 8008960:	9300      	str	r3, [sp, #0]
 8008962:	3301      	adds	r3, #1
 8008964:	2b01      	cmp	r3, #1
 8008966:	9307      	str	r3, [sp, #28]
 8008968:	bfb8      	it	lt
 800896a:	2301      	movlt	r3, #1
 800896c:	f8db 001c 	ldr.w	r0, [fp, #28]
 8008970:	2100      	movs	r1, #0
 8008972:	2204      	movs	r2, #4
 8008974:	f102 0514 	add.w	r5, r2, #20
 8008978:	429d      	cmp	r5, r3
 800897a:	d91f      	bls.n	80089bc <_dtoa_r+0x2a4>
 800897c:	6041      	str	r1, [r0, #4]
 800897e:	4658      	mov	r0, fp
 8008980:	f000 fd8e 	bl	80094a0 <_Balloc>
 8008984:	4682      	mov	sl, r0
 8008986:	2800      	cmp	r0, #0
 8008988:	d13c      	bne.n	8008a04 <_dtoa_r+0x2ec>
 800898a:	4b1b      	ldr	r3, [pc, #108]	@ (80089f8 <_dtoa_r+0x2e0>)
 800898c:	4602      	mov	r2, r0
 800898e:	f240 11af 	movw	r1, #431	@ 0x1af
 8008992:	e6d8      	b.n	8008746 <_dtoa_r+0x2e>
 8008994:	2301      	movs	r3, #1
 8008996:	e7e0      	b.n	800895a <_dtoa_r+0x242>
 8008998:	2401      	movs	r4, #1
 800899a:	2300      	movs	r3, #0
 800899c:	9309      	str	r3, [sp, #36]	@ 0x24
 800899e:	940b      	str	r4, [sp, #44]	@ 0x2c
 80089a0:	f04f 33ff 	mov.w	r3, #4294967295
 80089a4:	9300      	str	r3, [sp, #0]
 80089a6:	9307      	str	r3, [sp, #28]
 80089a8:	2200      	movs	r2, #0
 80089aa:	2312      	movs	r3, #18
 80089ac:	e7d0      	b.n	8008950 <_dtoa_r+0x238>
 80089ae:	2301      	movs	r3, #1
 80089b0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80089b2:	e7f5      	b.n	80089a0 <_dtoa_r+0x288>
 80089b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80089b6:	9300      	str	r3, [sp, #0]
 80089b8:	9307      	str	r3, [sp, #28]
 80089ba:	e7d7      	b.n	800896c <_dtoa_r+0x254>
 80089bc:	3101      	adds	r1, #1
 80089be:	0052      	lsls	r2, r2, #1
 80089c0:	e7d8      	b.n	8008974 <_dtoa_r+0x25c>
 80089c2:	bf00      	nop
 80089c4:	f3af 8000 	nop.w
 80089c8:	636f4361 	.word	0x636f4361
 80089cc:	3fd287a7 	.word	0x3fd287a7
 80089d0:	8b60c8b3 	.word	0x8b60c8b3
 80089d4:	3fc68a28 	.word	0x3fc68a28
 80089d8:	509f79fb 	.word	0x509f79fb
 80089dc:	3fd34413 	.word	0x3fd34413
 80089e0:	0800d695 	.word	0x0800d695
 80089e4:	0800d6ac 	.word	0x0800d6ac
 80089e8:	7ff00000 	.word	0x7ff00000
 80089ec:	0800d665 	.word	0x0800d665
 80089f0:	3ff80000 	.word	0x3ff80000
 80089f4:	0800d7a8 	.word	0x0800d7a8
 80089f8:	0800d704 	.word	0x0800d704
 80089fc:	0800d691 	.word	0x0800d691
 8008a00:	0800d664 	.word	0x0800d664
 8008a04:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008a08:	6018      	str	r0, [r3, #0]
 8008a0a:	9b07      	ldr	r3, [sp, #28]
 8008a0c:	2b0e      	cmp	r3, #14
 8008a0e:	f200 80a4 	bhi.w	8008b5a <_dtoa_r+0x442>
 8008a12:	2c00      	cmp	r4, #0
 8008a14:	f000 80a1 	beq.w	8008b5a <_dtoa_r+0x442>
 8008a18:	2f00      	cmp	r7, #0
 8008a1a:	dd33      	ble.n	8008a84 <_dtoa_r+0x36c>
 8008a1c:	4bad      	ldr	r3, [pc, #692]	@ (8008cd4 <_dtoa_r+0x5bc>)
 8008a1e:	f007 020f 	and.w	r2, r7, #15
 8008a22:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008a26:	ed93 7b00 	vldr	d7, [r3]
 8008a2a:	05f8      	lsls	r0, r7, #23
 8008a2c:	ed8d 7b04 	vstr	d7, [sp, #16]
 8008a30:	ea4f 1427 	mov.w	r4, r7, asr #4
 8008a34:	d516      	bpl.n	8008a64 <_dtoa_r+0x34c>
 8008a36:	4ba8      	ldr	r3, [pc, #672]	@ (8008cd8 <_dtoa_r+0x5c0>)
 8008a38:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008a3c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008a40:	f7f7 ff04 	bl	800084c <__aeabi_ddiv>
 8008a44:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008a48:	f004 040f 	and.w	r4, r4, #15
 8008a4c:	2603      	movs	r6, #3
 8008a4e:	4da2      	ldr	r5, [pc, #648]	@ (8008cd8 <_dtoa_r+0x5c0>)
 8008a50:	b954      	cbnz	r4, 8008a68 <_dtoa_r+0x350>
 8008a52:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008a56:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008a5a:	f7f7 fef7 	bl	800084c <__aeabi_ddiv>
 8008a5e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008a62:	e028      	b.n	8008ab6 <_dtoa_r+0x39e>
 8008a64:	2602      	movs	r6, #2
 8008a66:	e7f2      	b.n	8008a4e <_dtoa_r+0x336>
 8008a68:	07e1      	lsls	r1, r4, #31
 8008a6a:	d508      	bpl.n	8008a7e <_dtoa_r+0x366>
 8008a6c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008a70:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008a74:	f7f7 fdc0 	bl	80005f8 <__aeabi_dmul>
 8008a78:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008a7c:	3601      	adds	r6, #1
 8008a7e:	1064      	asrs	r4, r4, #1
 8008a80:	3508      	adds	r5, #8
 8008a82:	e7e5      	b.n	8008a50 <_dtoa_r+0x338>
 8008a84:	f000 80d2 	beq.w	8008c2c <_dtoa_r+0x514>
 8008a88:	427c      	negs	r4, r7
 8008a8a:	4b92      	ldr	r3, [pc, #584]	@ (8008cd4 <_dtoa_r+0x5bc>)
 8008a8c:	4d92      	ldr	r5, [pc, #584]	@ (8008cd8 <_dtoa_r+0x5c0>)
 8008a8e:	f004 020f 	and.w	r2, r4, #15
 8008a92:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008a96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a9a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008a9e:	f7f7 fdab 	bl	80005f8 <__aeabi_dmul>
 8008aa2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008aa6:	1124      	asrs	r4, r4, #4
 8008aa8:	2300      	movs	r3, #0
 8008aaa:	2602      	movs	r6, #2
 8008aac:	2c00      	cmp	r4, #0
 8008aae:	f040 80b2 	bne.w	8008c16 <_dtoa_r+0x4fe>
 8008ab2:	2b00      	cmp	r3, #0
 8008ab4:	d1d3      	bne.n	8008a5e <_dtoa_r+0x346>
 8008ab6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8008ab8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008abc:	2b00      	cmp	r3, #0
 8008abe:	f000 80b7 	beq.w	8008c30 <_dtoa_r+0x518>
 8008ac2:	4b86      	ldr	r3, [pc, #536]	@ (8008cdc <_dtoa_r+0x5c4>)
 8008ac4:	2200      	movs	r2, #0
 8008ac6:	4620      	mov	r0, r4
 8008ac8:	4629      	mov	r1, r5
 8008aca:	f7f8 f807 	bl	8000adc <__aeabi_dcmplt>
 8008ace:	2800      	cmp	r0, #0
 8008ad0:	f000 80ae 	beq.w	8008c30 <_dtoa_r+0x518>
 8008ad4:	9b07      	ldr	r3, [sp, #28]
 8008ad6:	2b00      	cmp	r3, #0
 8008ad8:	f000 80aa 	beq.w	8008c30 <_dtoa_r+0x518>
 8008adc:	9b00      	ldr	r3, [sp, #0]
 8008ade:	2b00      	cmp	r3, #0
 8008ae0:	dd37      	ble.n	8008b52 <_dtoa_r+0x43a>
 8008ae2:	1e7b      	subs	r3, r7, #1
 8008ae4:	9304      	str	r3, [sp, #16]
 8008ae6:	4620      	mov	r0, r4
 8008ae8:	4b7d      	ldr	r3, [pc, #500]	@ (8008ce0 <_dtoa_r+0x5c8>)
 8008aea:	2200      	movs	r2, #0
 8008aec:	4629      	mov	r1, r5
 8008aee:	f7f7 fd83 	bl	80005f8 <__aeabi_dmul>
 8008af2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008af6:	9c00      	ldr	r4, [sp, #0]
 8008af8:	3601      	adds	r6, #1
 8008afa:	4630      	mov	r0, r6
 8008afc:	f7f7 fd12 	bl	8000524 <__aeabi_i2d>
 8008b00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008b04:	f7f7 fd78 	bl	80005f8 <__aeabi_dmul>
 8008b08:	4b76      	ldr	r3, [pc, #472]	@ (8008ce4 <_dtoa_r+0x5cc>)
 8008b0a:	2200      	movs	r2, #0
 8008b0c:	f7f7 fbbe 	bl	800028c <__adddf3>
 8008b10:	4605      	mov	r5, r0
 8008b12:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8008b16:	2c00      	cmp	r4, #0
 8008b18:	f040 808d 	bne.w	8008c36 <_dtoa_r+0x51e>
 8008b1c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008b20:	4b71      	ldr	r3, [pc, #452]	@ (8008ce8 <_dtoa_r+0x5d0>)
 8008b22:	2200      	movs	r2, #0
 8008b24:	f7f7 fbb0 	bl	8000288 <__aeabi_dsub>
 8008b28:	4602      	mov	r2, r0
 8008b2a:	460b      	mov	r3, r1
 8008b2c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008b30:	462a      	mov	r2, r5
 8008b32:	4633      	mov	r3, r6
 8008b34:	f7f7 fff0 	bl	8000b18 <__aeabi_dcmpgt>
 8008b38:	2800      	cmp	r0, #0
 8008b3a:	f040 828b 	bne.w	8009054 <_dtoa_r+0x93c>
 8008b3e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008b42:	462a      	mov	r2, r5
 8008b44:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8008b48:	f7f7 ffc8 	bl	8000adc <__aeabi_dcmplt>
 8008b4c:	2800      	cmp	r0, #0
 8008b4e:	f040 8128 	bne.w	8008da2 <_dtoa_r+0x68a>
 8008b52:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8008b56:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8008b5a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008b5c:	2b00      	cmp	r3, #0
 8008b5e:	f2c0 815a 	blt.w	8008e16 <_dtoa_r+0x6fe>
 8008b62:	2f0e      	cmp	r7, #14
 8008b64:	f300 8157 	bgt.w	8008e16 <_dtoa_r+0x6fe>
 8008b68:	4b5a      	ldr	r3, [pc, #360]	@ (8008cd4 <_dtoa_r+0x5bc>)
 8008b6a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8008b6e:	ed93 7b00 	vldr	d7, [r3]
 8008b72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008b74:	2b00      	cmp	r3, #0
 8008b76:	ed8d 7b00 	vstr	d7, [sp]
 8008b7a:	da03      	bge.n	8008b84 <_dtoa_r+0x46c>
 8008b7c:	9b07      	ldr	r3, [sp, #28]
 8008b7e:	2b00      	cmp	r3, #0
 8008b80:	f340 8101 	ble.w	8008d86 <_dtoa_r+0x66e>
 8008b84:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008b88:	4656      	mov	r6, sl
 8008b8a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008b8e:	4620      	mov	r0, r4
 8008b90:	4629      	mov	r1, r5
 8008b92:	f7f7 fe5b 	bl	800084c <__aeabi_ddiv>
 8008b96:	f7f7 ffdf 	bl	8000b58 <__aeabi_d2iz>
 8008b9a:	4680      	mov	r8, r0
 8008b9c:	f7f7 fcc2 	bl	8000524 <__aeabi_i2d>
 8008ba0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008ba4:	f7f7 fd28 	bl	80005f8 <__aeabi_dmul>
 8008ba8:	4602      	mov	r2, r0
 8008baa:	460b      	mov	r3, r1
 8008bac:	4620      	mov	r0, r4
 8008bae:	4629      	mov	r1, r5
 8008bb0:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8008bb4:	f7f7 fb68 	bl	8000288 <__aeabi_dsub>
 8008bb8:	f806 4b01 	strb.w	r4, [r6], #1
 8008bbc:	9d07      	ldr	r5, [sp, #28]
 8008bbe:	eba6 040a 	sub.w	r4, r6, sl
 8008bc2:	42a5      	cmp	r5, r4
 8008bc4:	4602      	mov	r2, r0
 8008bc6:	460b      	mov	r3, r1
 8008bc8:	f040 8117 	bne.w	8008dfa <_dtoa_r+0x6e2>
 8008bcc:	f7f7 fb5e 	bl	800028c <__adddf3>
 8008bd0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008bd4:	4604      	mov	r4, r0
 8008bd6:	460d      	mov	r5, r1
 8008bd8:	f7f7 ff9e 	bl	8000b18 <__aeabi_dcmpgt>
 8008bdc:	2800      	cmp	r0, #0
 8008bde:	f040 80f9 	bne.w	8008dd4 <_dtoa_r+0x6bc>
 8008be2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008be6:	4620      	mov	r0, r4
 8008be8:	4629      	mov	r1, r5
 8008bea:	f7f7 ff6d 	bl	8000ac8 <__aeabi_dcmpeq>
 8008bee:	b118      	cbz	r0, 8008bf8 <_dtoa_r+0x4e0>
 8008bf0:	f018 0f01 	tst.w	r8, #1
 8008bf4:	f040 80ee 	bne.w	8008dd4 <_dtoa_r+0x6bc>
 8008bf8:	4649      	mov	r1, r9
 8008bfa:	4658      	mov	r0, fp
 8008bfc:	f000 fc90 	bl	8009520 <_Bfree>
 8008c00:	2300      	movs	r3, #0
 8008c02:	7033      	strb	r3, [r6, #0]
 8008c04:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008c06:	3701      	adds	r7, #1
 8008c08:	601f      	str	r7, [r3, #0]
 8008c0a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008c0c:	2b00      	cmp	r3, #0
 8008c0e:	f000 831d 	beq.w	800924c <_dtoa_r+0xb34>
 8008c12:	601e      	str	r6, [r3, #0]
 8008c14:	e31a      	b.n	800924c <_dtoa_r+0xb34>
 8008c16:	07e2      	lsls	r2, r4, #31
 8008c18:	d505      	bpl.n	8008c26 <_dtoa_r+0x50e>
 8008c1a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008c1e:	f7f7 fceb 	bl	80005f8 <__aeabi_dmul>
 8008c22:	3601      	adds	r6, #1
 8008c24:	2301      	movs	r3, #1
 8008c26:	1064      	asrs	r4, r4, #1
 8008c28:	3508      	adds	r5, #8
 8008c2a:	e73f      	b.n	8008aac <_dtoa_r+0x394>
 8008c2c:	2602      	movs	r6, #2
 8008c2e:	e742      	b.n	8008ab6 <_dtoa_r+0x39e>
 8008c30:	9c07      	ldr	r4, [sp, #28]
 8008c32:	9704      	str	r7, [sp, #16]
 8008c34:	e761      	b.n	8008afa <_dtoa_r+0x3e2>
 8008c36:	4b27      	ldr	r3, [pc, #156]	@ (8008cd4 <_dtoa_r+0x5bc>)
 8008c38:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8008c3a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8008c3e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008c42:	4454      	add	r4, sl
 8008c44:	2900      	cmp	r1, #0
 8008c46:	d053      	beq.n	8008cf0 <_dtoa_r+0x5d8>
 8008c48:	4928      	ldr	r1, [pc, #160]	@ (8008cec <_dtoa_r+0x5d4>)
 8008c4a:	2000      	movs	r0, #0
 8008c4c:	f7f7 fdfe 	bl	800084c <__aeabi_ddiv>
 8008c50:	4633      	mov	r3, r6
 8008c52:	462a      	mov	r2, r5
 8008c54:	f7f7 fb18 	bl	8000288 <__aeabi_dsub>
 8008c58:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008c5c:	4656      	mov	r6, sl
 8008c5e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008c62:	f7f7 ff79 	bl	8000b58 <__aeabi_d2iz>
 8008c66:	4605      	mov	r5, r0
 8008c68:	f7f7 fc5c 	bl	8000524 <__aeabi_i2d>
 8008c6c:	4602      	mov	r2, r0
 8008c6e:	460b      	mov	r3, r1
 8008c70:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008c74:	f7f7 fb08 	bl	8000288 <__aeabi_dsub>
 8008c78:	3530      	adds	r5, #48	@ 0x30
 8008c7a:	4602      	mov	r2, r0
 8008c7c:	460b      	mov	r3, r1
 8008c7e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008c82:	f806 5b01 	strb.w	r5, [r6], #1
 8008c86:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008c8a:	f7f7 ff27 	bl	8000adc <__aeabi_dcmplt>
 8008c8e:	2800      	cmp	r0, #0
 8008c90:	d171      	bne.n	8008d76 <_dtoa_r+0x65e>
 8008c92:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008c96:	4911      	ldr	r1, [pc, #68]	@ (8008cdc <_dtoa_r+0x5c4>)
 8008c98:	2000      	movs	r0, #0
 8008c9a:	f7f7 faf5 	bl	8000288 <__aeabi_dsub>
 8008c9e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008ca2:	f7f7 ff1b 	bl	8000adc <__aeabi_dcmplt>
 8008ca6:	2800      	cmp	r0, #0
 8008ca8:	f040 8095 	bne.w	8008dd6 <_dtoa_r+0x6be>
 8008cac:	42a6      	cmp	r6, r4
 8008cae:	f43f af50 	beq.w	8008b52 <_dtoa_r+0x43a>
 8008cb2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008cb6:	4b0a      	ldr	r3, [pc, #40]	@ (8008ce0 <_dtoa_r+0x5c8>)
 8008cb8:	2200      	movs	r2, #0
 8008cba:	f7f7 fc9d 	bl	80005f8 <__aeabi_dmul>
 8008cbe:	4b08      	ldr	r3, [pc, #32]	@ (8008ce0 <_dtoa_r+0x5c8>)
 8008cc0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008cc4:	2200      	movs	r2, #0
 8008cc6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008cca:	f7f7 fc95 	bl	80005f8 <__aeabi_dmul>
 8008cce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008cd2:	e7c4      	b.n	8008c5e <_dtoa_r+0x546>
 8008cd4:	0800d7a8 	.word	0x0800d7a8
 8008cd8:	0800d780 	.word	0x0800d780
 8008cdc:	3ff00000 	.word	0x3ff00000
 8008ce0:	40240000 	.word	0x40240000
 8008ce4:	401c0000 	.word	0x401c0000
 8008ce8:	40140000 	.word	0x40140000
 8008cec:	3fe00000 	.word	0x3fe00000
 8008cf0:	4631      	mov	r1, r6
 8008cf2:	4628      	mov	r0, r5
 8008cf4:	f7f7 fc80 	bl	80005f8 <__aeabi_dmul>
 8008cf8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008cfc:	9415      	str	r4, [sp, #84]	@ 0x54
 8008cfe:	4656      	mov	r6, sl
 8008d00:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d04:	f7f7 ff28 	bl	8000b58 <__aeabi_d2iz>
 8008d08:	4605      	mov	r5, r0
 8008d0a:	f7f7 fc0b 	bl	8000524 <__aeabi_i2d>
 8008d0e:	4602      	mov	r2, r0
 8008d10:	460b      	mov	r3, r1
 8008d12:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d16:	f7f7 fab7 	bl	8000288 <__aeabi_dsub>
 8008d1a:	3530      	adds	r5, #48	@ 0x30
 8008d1c:	f806 5b01 	strb.w	r5, [r6], #1
 8008d20:	4602      	mov	r2, r0
 8008d22:	460b      	mov	r3, r1
 8008d24:	42a6      	cmp	r6, r4
 8008d26:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008d2a:	f04f 0200 	mov.w	r2, #0
 8008d2e:	d124      	bne.n	8008d7a <_dtoa_r+0x662>
 8008d30:	4bac      	ldr	r3, [pc, #688]	@ (8008fe4 <_dtoa_r+0x8cc>)
 8008d32:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008d36:	f7f7 faa9 	bl	800028c <__adddf3>
 8008d3a:	4602      	mov	r2, r0
 8008d3c:	460b      	mov	r3, r1
 8008d3e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d42:	f7f7 fee9 	bl	8000b18 <__aeabi_dcmpgt>
 8008d46:	2800      	cmp	r0, #0
 8008d48:	d145      	bne.n	8008dd6 <_dtoa_r+0x6be>
 8008d4a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008d4e:	49a5      	ldr	r1, [pc, #660]	@ (8008fe4 <_dtoa_r+0x8cc>)
 8008d50:	2000      	movs	r0, #0
 8008d52:	f7f7 fa99 	bl	8000288 <__aeabi_dsub>
 8008d56:	4602      	mov	r2, r0
 8008d58:	460b      	mov	r3, r1
 8008d5a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008d5e:	f7f7 febd 	bl	8000adc <__aeabi_dcmplt>
 8008d62:	2800      	cmp	r0, #0
 8008d64:	f43f aef5 	beq.w	8008b52 <_dtoa_r+0x43a>
 8008d68:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8008d6a:	1e73      	subs	r3, r6, #1
 8008d6c:	9315      	str	r3, [sp, #84]	@ 0x54
 8008d6e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8008d72:	2b30      	cmp	r3, #48	@ 0x30
 8008d74:	d0f8      	beq.n	8008d68 <_dtoa_r+0x650>
 8008d76:	9f04      	ldr	r7, [sp, #16]
 8008d78:	e73e      	b.n	8008bf8 <_dtoa_r+0x4e0>
 8008d7a:	4b9b      	ldr	r3, [pc, #620]	@ (8008fe8 <_dtoa_r+0x8d0>)
 8008d7c:	f7f7 fc3c 	bl	80005f8 <__aeabi_dmul>
 8008d80:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008d84:	e7bc      	b.n	8008d00 <_dtoa_r+0x5e8>
 8008d86:	d10c      	bne.n	8008da2 <_dtoa_r+0x68a>
 8008d88:	4b98      	ldr	r3, [pc, #608]	@ (8008fec <_dtoa_r+0x8d4>)
 8008d8a:	2200      	movs	r2, #0
 8008d8c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008d90:	f7f7 fc32 	bl	80005f8 <__aeabi_dmul>
 8008d94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008d98:	f7f7 feb4 	bl	8000b04 <__aeabi_dcmpge>
 8008d9c:	2800      	cmp	r0, #0
 8008d9e:	f000 8157 	beq.w	8009050 <_dtoa_r+0x938>
 8008da2:	2400      	movs	r4, #0
 8008da4:	4625      	mov	r5, r4
 8008da6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008da8:	43db      	mvns	r3, r3
 8008daa:	9304      	str	r3, [sp, #16]
 8008dac:	4656      	mov	r6, sl
 8008dae:	2700      	movs	r7, #0
 8008db0:	4621      	mov	r1, r4
 8008db2:	4658      	mov	r0, fp
 8008db4:	f000 fbb4 	bl	8009520 <_Bfree>
 8008db8:	2d00      	cmp	r5, #0
 8008dba:	d0dc      	beq.n	8008d76 <_dtoa_r+0x65e>
 8008dbc:	b12f      	cbz	r7, 8008dca <_dtoa_r+0x6b2>
 8008dbe:	42af      	cmp	r7, r5
 8008dc0:	d003      	beq.n	8008dca <_dtoa_r+0x6b2>
 8008dc2:	4639      	mov	r1, r7
 8008dc4:	4658      	mov	r0, fp
 8008dc6:	f000 fbab 	bl	8009520 <_Bfree>
 8008dca:	4629      	mov	r1, r5
 8008dcc:	4658      	mov	r0, fp
 8008dce:	f000 fba7 	bl	8009520 <_Bfree>
 8008dd2:	e7d0      	b.n	8008d76 <_dtoa_r+0x65e>
 8008dd4:	9704      	str	r7, [sp, #16]
 8008dd6:	4633      	mov	r3, r6
 8008dd8:	461e      	mov	r6, r3
 8008dda:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008dde:	2a39      	cmp	r2, #57	@ 0x39
 8008de0:	d107      	bne.n	8008df2 <_dtoa_r+0x6da>
 8008de2:	459a      	cmp	sl, r3
 8008de4:	d1f8      	bne.n	8008dd8 <_dtoa_r+0x6c0>
 8008de6:	9a04      	ldr	r2, [sp, #16]
 8008de8:	3201      	adds	r2, #1
 8008dea:	9204      	str	r2, [sp, #16]
 8008dec:	2230      	movs	r2, #48	@ 0x30
 8008dee:	f88a 2000 	strb.w	r2, [sl]
 8008df2:	781a      	ldrb	r2, [r3, #0]
 8008df4:	3201      	adds	r2, #1
 8008df6:	701a      	strb	r2, [r3, #0]
 8008df8:	e7bd      	b.n	8008d76 <_dtoa_r+0x65e>
 8008dfa:	4b7b      	ldr	r3, [pc, #492]	@ (8008fe8 <_dtoa_r+0x8d0>)
 8008dfc:	2200      	movs	r2, #0
 8008dfe:	f7f7 fbfb 	bl	80005f8 <__aeabi_dmul>
 8008e02:	2200      	movs	r2, #0
 8008e04:	2300      	movs	r3, #0
 8008e06:	4604      	mov	r4, r0
 8008e08:	460d      	mov	r5, r1
 8008e0a:	f7f7 fe5d 	bl	8000ac8 <__aeabi_dcmpeq>
 8008e0e:	2800      	cmp	r0, #0
 8008e10:	f43f aebb 	beq.w	8008b8a <_dtoa_r+0x472>
 8008e14:	e6f0      	b.n	8008bf8 <_dtoa_r+0x4e0>
 8008e16:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8008e18:	2a00      	cmp	r2, #0
 8008e1a:	f000 80db 	beq.w	8008fd4 <_dtoa_r+0x8bc>
 8008e1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008e20:	2a01      	cmp	r2, #1
 8008e22:	f300 80bf 	bgt.w	8008fa4 <_dtoa_r+0x88c>
 8008e26:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8008e28:	2a00      	cmp	r2, #0
 8008e2a:	f000 80b7 	beq.w	8008f9c <_dtoa_r+0x884>
 8008e2e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8008e32:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8008e34:	4646      	mov	r6, r8
 8008e36:	9a08      	ldr	r2, [sp, #32]
 8008e38:	2101      	movs	r1, #1
 8008e3a:	441a      	add	r2, r3
 8008e3c:	4658      	mov	r0, fp
 8008e3e:	4498      	add	r8, r3
 8008e40:	9208      	str	r2, [sp, #32]
 8008e42:	f000 fc21 	bl	8009688 <__i2b>
 8008e46:	4605      	mov	r5, r0
 8008e48:	b15e      	cbz	r6, 8008e62 <_dtoa_r+0x74a>
 8008e4a:	9b08      	ldr	r3, [sp, #32]
 8008e4c:	2b00      	cmp	r3, #0
 8008e4e:	dd08      	ble.n	8008e62 <_dtoa_r+0x74a>
 8008e50:	42b3      	cmp	r3, r6
 8008e52:	9a08      	ldr	r2, [sp, #32]
 8008e54:	bfa8      	it	ge
 8008e56:	4633      	movge	r3, r6
 8008e58:	eba8 0803 	sub.w	r8, r8, r3
 8008e5c:	1af6      	subs	r6, r6, r3
 8008e5e:	1ad3      	subs	r3, r2, r3
 8008e60:	9308      	str	r3, [sp, #32]
 8008e62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008e64:	b1f3      	cbz	r3, 8008ea4 <_dtoa_r+0x78c>
 8008e66:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008e68:	2b00      	cmp	r3, #0
 8008e6a:	f000 80b7 	beq.w	8008fdc <_dtoa_r+0x8c4>
 8008e6e:	b18c      	cbz	r4, 8008e94 <_dtoa_r+0x77c>
 8008e70:	4629      	mov	r1, r5
 8008e72:	4622      	mov	r2, r4
 8008e74:	4658      	mov	r0, fp
 8008e76:	f000 fcc7 	bl	8009808 <__pow5mult>
 8008e7a:	464a      	mov	r2, r9
 8008e7c:	4601      	mov	r1, r0
 8008e7e:	4605      	mov	r5, r0
 8008e80:	4658      	mov	r0, fp
 8008e82:	f000 fc17 	bl	80096b4 <__multiply>
 8008e86:	4649      	mov	r1, r9
 8008e88:	9004      	str	r0, [sp, #16]
 8008e8a:	4658      	mov	r0, fp
 8008e8c:	f000 fb48 	bl	8009520 <_Bfree>
 8008e90:	9b04      	ldr	r3, [sp, #16]
 8008e92:	4699      	mov	r9, r3
 8008e94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008e96:	1b1a      	subs	r2, r3, r4
 8008e98:	d004      	beq.n	8008ea4 <_dtoa_r+0x78c>
 8008e9a:	4649      	mov	r1, r9
 8008e9c:	4658      	mov	r0, fp
 8008e9e:	f000 fcb3 	bl	8009808 <__pow5mult>
 8008ea2:	4681      	mov	r9, r0
 8008ea4:	2101      	movs	r1, #1
 8008ea6:	4658      	mov	r0, fp
 8008ea8:	f000 fbee 	bl	8009688 <__i2b>
 8008eac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8008eae:	4604      	mov	r4, r0
 8008eb0:	2b00      	cmp	r3, #0
 8008eb2:	f000 81cf 	beq.w	8009254 <_dtoa_r+0xb3c>
 8008eb6:	461a      	mov	r2, r3
 8008eb8:	4601      	mov	r1, r0
 8008eba:	4658      	mov	r0, fp
 8008ebc:	f000 fca4 	bl	8009808 <__pow5mult>
 8008ec0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008ec2:	2b01      	cmp	r3, #1
 8008ec4:	4604      	mov	r4, r0
 8008ec6:	f300 8095 	bgt.w	8008ff4 <_dtoa_r+0x8dc>
 8008eca:	9b02      	ldr	r3, [sp, #8]
 8008ecc:	2b00      	cmp	r3, #0
 8008ece:	f040 8087 	bne.w	8008fe0 <_dtoa_r+0x8c8>
 8008ed2:	9b03      	ldr	r3, [sp, #12]
 8008ed4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008ed8:	2b00      	cmp	r3, #0
 8008eda:	f040 8089 	bne.w	8008ff0 <_dtoa_r+0x8d8>
 8008ede:	9b03      	ldr	r3, [sp, #12]
 8008ee0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8008ee4:	0d1b      	lsrs	r3, r3, #20
 8008ee6:	051b      	lsls	r3, r3, #20
 8008ee8:	b12b      	cbz	r3, 8008ef6 <_dtoa_r+0x7de>
 8008eea:	9b08      	ldr	r3, [sp, #32]
 8008eec:	3301      	adds	r3, #1
 8008eee:	9308      	str	r3, [sp, #32]
 8008ef0:	f108 0801 	add.w	r8, r8, #1
 8008ef4:	2301      	movs	r3, #1
 8008ef6:	930a      	str	r3, [sp, #40]	@ 0x28
 8008ef8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8008efa:	2b00      	cmp	r3, #0
 8008efc:	f000 81b0 	beq.w	8009260 <_dtoa_r+0xb48>
 8008f00:	6923      	ldr	r3, [r4, #16]
 8008f02:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8008f06:	6918      	ldr	r0, [r3, #16]
 8008f08:	f000 fb72 	bl	80095f0 <__hi0bits>
 8008f0c:	f1c0 0020 	rsb	r0, r0, #32
 8008f10:	9b08      	ldr	r3, [sp, #32]
 8008f12:	4418      	add	r0, r3
 8008f14:	f010 001f 	ands.w	r0, r0, #31
 8008f18:	d077      	beq.n	800900a <_dtoa_r+0x8f2>
 8008f1a:	f1c0 0320 	rsb	r3, r0, #32
 8008f1e:	2b04      	cmp	r3, #4
 8008f20:	dd6b      	ble.n	8008ffa <_dtoa_r+0x8e2>
 8008f22:	9b08      	ldr	r3, [sp, #32]
 8008f24:	f1c0 001c 	rsb	r0, r0, #28
 8008f28:	4403      	add	r3, r0
 8008f2a:	4480      	add	r8, r0
 8008f2c:	4406      	add	r6, r0
 8008f2e:	9308      	str	r3, [sp, #32]
 8008f30:	f1b8 0f00 	cmp.w	r8, #0
 8008f34:	dd05      	ble.n	8008f42 <_dtoa_r+0x82a>
 8008f36:	4649      	mov	r1, r9
 8008f38:	4642      	mov	r2, r8
 8008f3a:	4658      	mov	r0, fp
 8008f3c:	f000 fcbe 	bl	80098bc <__lshift>
 8008f40:	4681      	mov	r9, r0
 8008f42:	9b08      	ldr	r3, [sp, #32]
 8008f44:	2b00      	cmp	r3, #0
 8008f46:	dd05      	ble.n	8008f54 <_dtoa_r+0x83c>
 8008f48:	4621      	mov	r1, r4
 8008f4a:	461a      	mov	r2, r3
 8008f4c:	4658      	mov	r0, fp
 8008f4e:	f000 fcb5 	bl	80098bc <__lshift>
 8008f52:	4604      	mov	r4, r0
 8008f54:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8008f56:	2b00      	cmp	r3, #0
 8008f58:	d059      	beq.n	800900e <_dtoa_r+0x8f6>
 8008f5a:	4621      	mov	r1, r4
 8008f5c:	4648      	mov	r0, r9
 8008f5e:	f000 fd19 	bl	8009994 <__mcmp>
 8008f62:	2800      	cmp	r0, #0
 8008f64:	da53      	bge.n	800900e <_dtoa_r+0x8f6>
 8008f66:	1e7b      	subs	r3, r7, #1
 8008f68:	9304      	str	r3, [sp, #16]
 8008f6a:	4649      	mov	r1, r9
 8008f6c:	2300      	movs	r3, #0
 8008f6e:	220a      	movs	r2, #10
 8008f70:	4658      	mov	r0, fp
 8008f72:	f000 faf7 	bl	8009564 <__multadd>
 8008f76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008f78:	4681      	mov	r9, r0
 8008f7a:	2b00      	cmp	r3, #0
 8008f7c:	f000 8172 	beq.w	8009264 <_dtoa_r+0xb4c>
 8008f80:	2300      	movs	r3, #0
 8008f82:	4629      	mov	r1, r5
 8008f84:	220a      	movs	r2, #10
 8008f86:	4658      	mov	r0, fp
 8008f88:	f000 faec 	bl	8009564 <__multadd>
 8008f8c:	9b00      	ldr	r3, [sp, #0]
 8008f8e:	2b00      	cmp	r3, #0
 8008f90:	4605      	mov	r5, r0
 8008f92:	dc67      	bgt.n	8009064 <_dtoa_r+0x94c>
 8008f94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f96:	2b02      	cmp	r3, #2
 8008f98:	dc41      	bgt.n	800901e <_dtoa_r+0x906>
 8008f9a:	e063      	b.n	8009064 <_dtoa_r+0x94c>
 8008f9c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8008f9e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8008fa2:	e746      	b.n	8008e32 <_dtoa_r+0x71a>
 8008fa4:	9b07      	ldr	r3, [sp, #28]
 8008fa6:	1e5c      	subs	r4, r3, #1
 8008fa8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008faa:	42a3      	cmp	r3, r4
 8008fac:	bfbf      	itttt	lt
 8008fae:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8008fb0:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8008fb2:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8008fb4:	1ae3      	sublt	r3, r4, r3
 8008fb6:	bfb4      	ite	lt
 8008fb8:	18d2      	addlt	r2, r2, r3
 8008fba:	1b1c      	subge	r4, r3, r4
 8008fbc:	9b07      	ldr	r3, [sp, #28]
 8008fbe:	bfbc      	itt	lt
 8008fc0:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8008fc2:	2400      	movlt	r4, #0
 8008fc4:	2b00      	cmp	r3, #0
 8008fc6:	bfb5      	itete	lt
 8008fc8:	eba8 0603 	sublt.w	r6, r8, r3
 8008fcc:	9b07      	ldrge	r3, [sp, #28]
 8008fce:	2300      	movlt	r3, #0
 8008fd0:	4646      	movge	r6, r8
 8008fd2:	e730      	b.n	8008e36 <_dtoa_r+0x71e>
 8008fd4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8008fd6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8008fd8:	4646      	mov	r6, r8
 8008fda:	e735      	b.n	8008e48 <_dtoa_r+0x730>
 8008fdc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008fde:	e75c      	b.n	8008e9a <_dtoa_r+0x782>
 8008fe0:	2300      	movs	r3, #0
 8008fe2:	e788      	b.n	8008ef6 <_dtoa_r+0x7de>
 8008fe4:	3fe00000 	.word	0x3fe00000
 8008fe8:	40240000 	.word	0x40240000
 8008fec:	40140000 	.word	0x40140000
 8008ff0:	9b02      	ldr	r3, [sp, #8]
 8008ff2:	e780      	b.n	8008ef6 <_dtoa_r+0x7de>
 8008ff4:	2300      	movs	r3, #0
 8008ff6:	930a      	str	r3, [sp, #40]	@ 0x28
 8008ff8:	e782      	b.n	8008f00 <_dtoa_r+0x7e8>
 8008ffa:	d099      	beq.n	8008f30 <_dtoa_r+0x818>
 8008ffc:	9a08      	ldr	r2, [sp, #32]
 8008ffe:	331c      	adds	r3, #28
 8009000:	441a      	add	r2, r3
 8009002:	4498      	add	r8, r3
 8009004:	441e      	add	r6, r3
 8009006:	9208      	str	r2, [sp, #32]
 8009008:	e792      	b.n	8008f30 <_dtoa_r+0x818>
 800900a:	4603      	mov	r3, r0
 800900c:	e7f6      	b.n	8008ffc <_dtoa_r+0x8e4>
 800900e:	9b07      	ldr	r3, [sp, #28]
 8009010:	9704      	str	r7, [sp, #16]
 8009012:	2b00      	cmp	r3, #0
 8009014:	dc20      	bgt.n	8009058 <_dtoa_r+0x940>
 8009016:	9300      	str	r3, [sp, #0]
 8009018:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800901a:	2b02      	cmp	r3, #2
 800901c:	dd1e      	ble.n	800905c <_dtoa_r+0x944>
 800901e:	9b00      	ldr	r3, [sp, #0]
 8009020:	2b00      	cmp	r3, #0
 8009022:	f47f aec0 	bne.w	8008da6 <_dtoa_r+0x68e>
 8009026:	4621      	mov	r1, r4
 8009028:	2205      	movs	r2, #5
 800902a:	4658      	mov	r0, fp
 800902c:	f000 fa9a 	bl	8009564 <__multadd>
 8009030:	4601      	mov	r1, r0
 8009032:	4604      	mov	r4, r0
 8009034:	4648      	mov	r0, r9
 8009036:	f000 fcad 	bl	8009994 <__mcmp>
 800903a:	2800      	cmp	r0, #0
 800903c:	f77f aeb3 	ble.w	8008da6 <_dtoa_r+0x68e>
 8009040:	4656      	mov	r6, sl
 8009042:	2331      	movs	r3, #49	@ 0x31
 8009044:	f806 3b01 	strb.w	r3, [r6], #1
 8009048:	9b04      	ldr	r3, [sp, #16]
 800904a:	3301      	adds	r3, #1
 800904c:	9304      	str	r3, [sp, #16]
 800904e:	e6ae      	b.n	8008dae <_dtoa_r+0x696>
 8009050:	9c07      	ldr	r4, [sp, #28]
 8009052:	9704      	str	r7, [sp, #16]
 8009054:	4625      	mov	r5, r4
 8009056:	e7f3      	b.n	8009040 <_dtoa_r+0x928>
 8009058:	9b07      	ldr	r3, [sp, #28]
 800905a:	9300      	str	r3, [sp, #0]
 800905c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800905e:	2b00      	cmp	r3, #0
 8009060:	f000 8104 	beq.w	800926c <_dtoa_r+0xb54>
 8009064:	2e00      	cmp	r6, #0
 8009066:	dd05      	ble.n	8009074 <_dtoa_r+0x95c>
 8009068:	4629      	mov	r1, r5
 800906a:	4632      	mov	r2, r6
 800906c:	4658      	mov	r0, fp
 800906e:	f000 fc25 	bl	80098bc <__lshift>
 8009072:	4605      	mov	r5, r0
 8009074:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009076:	2b00      	cmp	r3, #0
 8009078:	d05a      	beq.n	8009130 <_dtoa_r+0xa18>
 800907a:	6869      	ldr	r1, [r5, #4]
 800907c:	4658      	mov	r0, fp
 800907e:	f000 fa0f 	bl	80094a0 <_Balloc>
 8009082:	4606      	mov	r6, r0
 8009084:	b928      	cbnz	r0, 8009092 <_dtoa_r+0x97a>
 8009086:	4b84      	ldr	r3, [pc, #528]	@ (8009298 <_dtoa_r+0xb80>)
 8009088:	4602      	mov	r2, r0
 800908a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800908e:	f7ff bb5a 	b.w	8008746 <_dtoa_r+0x2e>
 8009092:	692a      	ldr	r2, [r5, #16]
 8009094:	3202      	adds	r2, #2
 8009096:	0092      	lsls	r2, r2, #2
 8009098:	f105 010c 	add.w	r1, r5, #12
 800909c:	300c      	adds	r0, #12
 800909e:	f000 ffaf 	bl	800a000 <memcpy>
 80090a2:	2201      	movs	r2, #1
 80090a4:	4631      	mov	r1, r6
 80090a6:	4658      	mov	r0, fp
 80090a8:	f000 fc08 	bl	80098bc <__lshift>
 80090ac:	f10a 0301 	add.w	r3, sl, #1
 80090b0:	9307      	str	r3, [sp, #28]
 80090b2:	9b00      	ldr	r3, [sp, #0]
 80090b4:	4453      	add	r3, sl
 80090b6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80090b8:	9b02      	ldr	r3, [sp, #8]
 80090ba:	f003 0301 	and.w	r3, r3, #1
 80090be:	462f      	mov	r7, r5
 80090c0:	930a      	str	r3, [sp, #40]	@ 0x28
 80090c2:	4605      	mov	r5, r0
 80090c4:	9b07      	ldr	r3, [sp, #28]
 80090c6:	4621      	mov	r1, r4
 80090c8:	3b01      	subs	r3, #1
 80090ca:	4648      	mov	r0, r9
 80090cc:	9300      	str	r3, [sp, #0]
 80090ce:	f7ff fa98 	bl	8008602 <quorem>
 80090d2:	4639      	mov	r1, r7
 80090d4:	9002      	str	r0, [sp, #8]
 80090d6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80090da:	4648      	mov	r0, r9
 80090dc:	f000 fc5a 	bl	8009994 <__mcmp>
 80090e0:	462a      	mov	r2, r5
 80090e2:	9008      	str	r0, [sp, #32]
 80090e4:	4621      	mov	r1, r4
 80090e6:	4658      	mov	r0, fp
 80090e8:	f000 fc70 	bl	80099cc <__mdiff>
 80090ec:	68c2      	ldr	r2, [r0, #12]
 80090ee:	4606      	mov	r6, r0
 80090f0:	bb02      	cbnz	r2, 8009134 <_dtoa_r+0xa1c>
 80090f2:	4601      	mov	r1, r0
 80090f4:	4648      	mov	r0, r9
 80090f6:	f000 fc4d 	bl	8009994 <__mcmp>
 80090fa:	4602      	mov	r2, r0
 80090fc:	4631      	mov	r1, r6
 80090fe:	4658      	mov	r0, fp
 8009100:	920e      	str	r2, [sp, #56]	@ 0x38
 8009102:	f000 fa0d 	bl	8009520 <_Bfree>
 8009106:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009108:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800910a:	9e07      	ldr	r6, [sp, #28]
 800910c:	ea43 0102 	orr.w	r1, r3, r2
 8009110:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009112:	4319      	orrs	r1, r3
 8009114:	d110      	bne.n	8009138 <_dtoa_r+0xa20>
 8009116:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800911a:	d029      	beq.n	8009170 <_dtoa_r+0xa58>
 800911c:	9b08      	ldr	r3, [sp, #32]
 800911e:	2b00      	cmp	r3, #0
 8009120:	dd02      	ble.n	8009128 <_dtoa_r+0xa10>
 8009122:	9b02      	ldr	r3, [sp, #8]
 8009124:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8009128:	9b00      	ldr	r3, [sp, #0]
 800912a:	f883 8000 	strb.w	r8, [r3]
 800912e:	e63f      	b.n	8008db0 <_dtoa_r+0x698>
 8009130:	4628      	mov	r0, r5
 8009132:	e7bb      	b.n	80090ac <_dtoa_r+0x994>
 8009134:	2201      	movs	r2, #1
 8009136:	e7e1      	b.n	80090fc <_dtoa_r+0x9e4>
 8009138:	9b08      	ldr	r3, [sp, #32]
 800913a:	2b00      	cmp	r3, #0
 800913c:	db04      	blt.n	8009148 <_dtoa_r+0xa30>
 800913e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009140:	430b      	orrs	r3, r1
 8009142:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8009144:	430b      	orrs	r3, r1
 8009146:	d120      	bne.n	800918a <_dtoa_r+0xa72>
 8009148:	2a00      	cmp	r2, #0
 800914a:	dded      	ble.n	8009128 <_dtoa_r+0xa10>
 800914c:	4649      	mov	r1, r9
 800914e:	2201      	movs	r2, #1
 8009150:	4658      	mov	r0, fp
 8009152:	f000 fbb3 	bl	80098bc <__lshift>
 8009156:	4621      	mov	r1, r4
 8009158:	4681      	mov	r9, r0
 800915a:	f000 fc1b 	bl	8009994 <__mcmp>
 800915e:	2800      	cmp	r0, #0
 8009160:	dc03      	bgt.n	800916a <_dtoa_r+0xa52>
 8009162:	d1e1      	bne.n	8009128 <_dtoa_r+0xa10>
 8009164:	f018 0f01 	tst.w	r8, #1
 8009168:	d0de      	beq.n	8009128 <_dtoa_r+0xa10>
 800916a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800916e:	d1d8      	bne.n	8009122 <_dtoa_r+0xa0a>
 8009170:	9a00      	ldr	r2, [sp, #0]
 8009172:	2339      	movs	r3, #57	@ 0x39
 8009174:	7013      	strb	r3, [r2, #0]
 8009176:	4633      	mov	r3, r6
 8009178:	461e      	mov	r6, r3
 800917a:	3b01      	subs	r3, #1
 800917c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8009180:	2a39      	cmp	r2, #57	@ 0x39
 8009182:	d052      	beq.n	800922a <_dtoa_r+0xb12>
 8009184:	3201      	adds	r2, #1
 8009186:	701a      	strb	r2, [r3, #0]
 8009188:	e612      	b.n	8008db0 <_dtoa_r+0x698>
 800918a:	2a00      	cmp	r2, #0
 800918c:	dd07      	ble.n	800919e <_dtoa_r+0xa86>
 800918e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8009192:	d0ed      	beq.n	8009170 <_dtoa_r+0xa58>
 8009194:	9a00      	ldr	r2, [sp, #0]
 8009196:	f108 0301 	add.w	r3, r8, #1
 800919a:	7013      	strb	r3, [r2, #0]
 800919c:	e608      	b.n	8008db0 <_dtoa_r+0x698>
 800919e:	9b07      	ldr	r3, [sp, #28]
 80091a0:	9a07      	ldr	r2, [sp, #28]
 80091a2:	f803 8c01 	strb.w	r8, [r3, #-1]
 80091a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80091a8:	4293      	cmp	r3, r2
 80091aa:	d028      	beq.n	80091fe <_dtoa_r+0xae6>
 80091ac:	4649      	mov	r1, r9
 80091ae:	2300      	movs	r3, #0
 80091b0:	220a      	movs	r2, #10
 80091b2:	4658      	mov	r0, fp
 80091b4:	f000 f9d6 	bl	8009564 <__multadd>
 80091b8:	42af      	cmp	r7, r5
 80091ba:	4681      	mov	r9, r0
 80091bc:	f04f 0300 	mov.w	r3, #0
 80091c0:	f04f 020a 	mov.w	r2, #10
 80091c4:	4639      	mov	r1, r7
 80091c6:	4658      	mov	r0, fp
 80091c8:	d107      	bne.n	80091da <_dtoa_r+0xac2>
 80091ca:	f000 f9cb 	bl	8009564 <__multadd>
 80091ce:	4607      	mov	r7, r0
 80091d0:	4605      	mov	r5, r0
 80091d2:	9b07      	ldr	r3, [sp, #28]
 80091d4:	3301      	adds	r3, #1
 80091d6:	9307      	str	r3, [sp, #28]
 80091d8:	e774      	b.n	80090c4 <_dtoa_r+0x9ac>
 80091da:	f000 f9c3 	bl	8009564 <__multadd>
 80091de:	4629      	mov	r1, r5
 80091e0:	4607      	mov	r7, r0
 80091e2:	2300      	movs	r3, #0
 80091e4:	220a      	movs	r2, #10
 80091e6:	4658      	mov	r0, fp
 80091e8:	f000 f9bc 	bl	8009564 <__multadd>
 80091ec:	4605      	mov	r5, r0
 80091ee:	e7f0      	b.n	80091d2 <_dtoa_r+0xaba>
 80091f0:	9b00      	ldr	r3, [sp, #0]
 80091f2:	2b00      	cmp	r3, #0
 80091f4:	bfcc      	ite	gt
 80091f6:	461e      	movgt	r6, r3
 80091f8:	2601      	movle	r6, #1
 80091fa:	4456      	add	r6, sl
 80091fc:	2700      	movs	r7, #0
 80091fe:	4649      	mov	r1, r9
 8009200:	2201      	movs	r2, #1
 8009202:	4658      	mov	r0, fp
 8009204:	f000 fb5a 	bl	80098bc <__lshift>
 8009208:	4621      	mov	r1, r4
 800920a:	4681      	mov	r9, r0
 800920c:	f000 fbc2 	bl	8009994 <__mcmp>
 8009210:	2800      	cmp	r0, #0
 8009212:	dcb0      	bgt.n	8009176 <_dtoa_r+0xa5e>
 8009214:	d102      	bne.n	800921c <_dtoa_r+0xb04>
 8009216:	f018 0f01 	tst.w	r8, #1
 800921a:	d1ac      	bne.n	8009176 <_dtoa_r+0xa5e>
 800921c:	4633      	mov	r3, r6
 800921e:	461e      	mov	r6, r3
 8009220:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009224:	2a30      	cmp	r2, #48	@ 0x30
 8009226:	d0fa      	beq.n	800921e <_dtoa_r+0xb06>
 8009228:	e5c2      	b.n	8008db0 <_dtoa_r+0x698>
 800922a:	459a      	cmp	sl, r3
 800922c:	d1a4      	bne.n	8009178 <_dtoa_r+0xa60>
 800922e:	9b04      	ldr	r3, [sp, #16]
 8009230:	3301      	adds	r3, #1
 8009232:	9304      	str	r3, [sp, #16]
 8009234:	2331      	movs	r3, #49	@ 0x31
 8009236:	f88a 3000 	strb.w	r3, [sl]
 800923a:	e5b9      	b.n	8008db0 <_dtoa_r+0x698>
 800923c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800923e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800929c <_dtoa_r+0xb84>
 8009242:	b11b      	cbz	r3, 800924c <_dtoa_r+0xb34>
 8009244:	f10a 0308 	add.w	r3, sl, #8
 8009248:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800924a:	6013      	str	r3, [r2, #0]
 800924c:	4650      	mov	r0, sl
 800924e:	b019      	add	sp, #100	@ 0x64
 8009250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009254:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009256:	2b01      	cmp	r3, #1
 8009258:	f77f ae37 	ble.w	8008eca <_dtoa_r+0x7b2>
 800925c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800925e:	930a      	str	r3, [sp, #40]	@ 0x28
 8009260:	2001      	movs	r0, #1
 8009262:	e655      	b.n	8008f10 <_dtoa_r+0x7f8>
 8009264:	9b00      	ldr	r3, [sp, #0]
 8009266:	2b00      	cmp	r3, #0
 8009268:	f77f aed6 	ble.w	8009018 <_dtoa_r+0x900>
 800926c:	4656      	mov	r6, sl
 800926e:	4621      	mov	r1, r4
 8009270:	4648      	mov	r0, r9
 8009272:	f7ff f9c6 	bl	8008602 <quorem>
 8009276:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800927a:	f806 8b01 	strb.w	r8, [r6], #1
 800927e:	9b00      	ldr	r3, [sp, #0]
 8009280:	eba6 020a 	sub.w	r2, r6, sl
 8009284:	4293      	cmp	r3, r2
 8009286:	ddb3      	ble.n	80091f0 <_dtoa_r+0xad8>
 8009288:	4649      	mov	r1, r9
 800928a:	2300      	movs	r3, #0
 800928c:	220a      	movs	r2, #10
 800928e:	4658      	mov	r0, fp
 8009290:	f000 f968 	bl	8009564 <__multadd>
 8009294:	4681      	mov	r9, r0
 8009296:	e7ea      	b.n	800926e <_dtoa_r+0xb56>
 8009298:	0800d704 	.word	0x0800d704
 800929c:	0800d688 	.word	0x0800d688

080092a0 <_free_r>:
 80092a0:	b538      	push	{r3, r4, r5, lr}
 80092a2:	4605      	mov	r5, r0
 80092a4:	2900      	cmp	r1, #0
 80092a6:	d041      	beq.n	800932c <_free_r+0x8c>
 80092a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80092ac:	1f0c      	subs	r4, r1, #4
 80092ae:	2b00      	cmp	r3, #0
 80092b0:	bfb8      	it	lt
 80092b2:	18e4      	addlt	r4, r4, r3
 80092b4:	f000 f8e8 	bl	8009488 <__malloc_lock>
 80092b8:	4a1d      	ldr	r2, [pc, #116]	@ (8009330 <_free_r+0x90>)
 80092ba:	6813      	ldr	r3, [r2, #0]
 80092bc:	b933      	cbnz	r3, 80092cc <_free_r+0x2c>
 80092be:	6063      	str	r3, [r4, #4]
 80092c0:	6014      	str	r4, [r2, #0]
 80092c2:	4628      	mov	r0, r5
 80092c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80092c8:	f000 b8e4 	b.w	8009494 <__malloc_unlock>
 80092cc:	42a3      	cmp	r3, r4
 80092ce:	d908      	bls.n	80092e2 <_free_r+0x42>
 80092d0:	6820      	ldr	r0, [r4, #0]
 80092d2:	1821      	adds	r1, r4, r0
 80092d4:	428b      	cmp	r3, r1
 80092d6:	bf01      	itttt	eq
 80092d8:	6819      	ldreq	r1, [r3, #0]
 80092da:	685b      	ldreq	r3, [r3, #4]
 80092dc:	1809      	addeq	r1, r1, r0
 80092de:	6021      	streq	r1, [r4, #0]
 80092e0:	e7ed      	b.n	80092be <_free_r+0x1e>
 80092e2:	461a      	mov	r2, r3
 80092e4:	685b      	ldr	r3, [r3, #4]
 80092e6:	b10b      	cbz	r3, 80092ec <_free_r+0x4c>
 80092e8:	42a3      	cmp	r3, r4
 80092ea:	d9fa      	bls.n	80092e2 <_free_r+0x42>
 80092ec:	6811      	ldr	r1, [r2, #0]
 80092ee:	1850      	adds	r0, r2, r1
 80092f0:	42a0      	cmp	r0, r4
 80092f2:	d10b      	bne.n	800930c <_free_r+0x6c>
 80092f4:	6820      	ldr	r0, [r4, #0]
 80092f6:	4401      	add	r1, r0
 80092f8:	1850      	adds	r0, r2, r1
 80092fa:	4283      	cmp	r3, r0
 80092fc:	6011      	str	r1, [r2, #0]
 80092fe:	d1e0      	bne.n	80092c2 <_free_r+0x22>
 8009300:	6818      	ldr	r0, [r3, #0]
 8009302:	685b      	ldr	r3, [r3, #4]
 8009304:	6053      	str	r3, [r2, #4]
 8009306:	4408      	add	r0, r1
 8009308:	6010      	str	r0, [r2, #0]
 800930a:	e7da      	b.n	80092c2 <_free_r+0x22>
 800930c:	d902      	bls.n	8009314 <_free_r+0x74>
 800930e:	230c      	movs	r3, #12
 8009310:	602b      	str	r3, [r5, #0]
 8009312:	e7d6      	b.n	80092c2 <_free_r+0x22>
 8009314:	6820      	ldr	r0, [r4, #0]
 8009316:	1821      	adds	r1, r4, r0
 8009318:	428b      	cmp	r3, r1
 800931a:	bf04      	itt	eq
 800931c:	6819      	ldreq	r1, [r3, #0]
 800931e:	685b      	ldreq	r3, [r3, #4]
 8009320:	6063      	str	r3, [r4, #4]
 8009322:	bf04      	itt	eq
 8009324:	1809      	addeq	r1, r1, r0
 8009326:	6021      	streq	r1, [r4, #0]
 8009328:	6054      	str	r4, [r2, #4]
 800932a:	e7ca      	b.n	80092c2 <_free_r+0x22>
 800932c:	bd38      	pop	{r3, r4, r5, pc}
 800932e:	bf00      	nop
 8009330:	20000790 	.word	0x20000790

08009334 <malloc>:
 8009334:	4b02      	ldr	r3, [pc, #8]	@ (8009340 <malloc+0xc>)
 8009336:	4601      	mov	r1, r0
 8009338:	6818      	ldr	r0, [r3, #0]
 800933a:	f000 b825 	b.w	8009388 <_malloc_r>
 800933e:	bf00      	nop
 8009340:	2000002c 	.word	0x2000002c

08009344 <sbrk_aligned>:
 8009344:	b570      	push	{r4, r5, r6, lr}
 8009346:	4e0f      	ldr	r6, [pc, #60]	@ (8009384 <sbrk_aligned+0x40>)
 8009348:	460c      	mov	r4, r1
 800934a:	6831      	ldr	r1, [r6, #0]
 800934c:	4605      	mov	r5, r0
 800934e:	b911      	cbnz	r1, 8009356 <sbrk_aligned+0x12>
 8009350:	f000 fe46 	bl	8009fe0 <_sbrk_r>
 8009354:	6030      	str	r0, [r6, #0]
 8009356:	4621      	mov	r1, r4
 8009358:	4628      	mov	r0, r5
 800935a:	f000 fe41 	bl	8009fe0 <_sbrk_r>
 800935e:	1c43      	adds	r3, r0, #1
 8009360:	d103      	bne.n	800936a <sbrk_aligned+0x26>
 8009362:	f04f 34ff 	mov.w	r4, #4294967295
 8009366:	4620      	mov	r0, r4
 8009368:	bd70      	pop	{r4, r5, r6, pc}
 800936a:	1cc4      	adds	r4, r0, #3
 800936c:	f024 0403 	bic.w	r4, r4, #3
 8009370:	42a0      	cmp	r0, r4
 8009372:	d0f8      	beq.n	8009366 <sbrk_aligned+0x22>
 8009374:	1a21      	subs	r1, r4, r0
 8009376:	4628      	mov	r0, r5
 8009378:	f000 fe32 	bl	8009fe0 <_sbrk_r>
 800937c:	3001      	adds	r0, #1
 800937e:	d1f2      	bne.n	8009366 <sbrk_aligned+0x22>
 8009380:	e7ef      	b.n	8009362 <sbrk_aligned+0x1e>
 8009382:	bf00      	nop
 8009384:	2000078c 	.word	0x2000078c

08009388 <_malloc_r>:
 8009388:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800938c:	1ccd      	adds	r5, r1, #3
 800938e:	f025 0503 	bic.w	r5, r5, #3
 8009392:	3508      	adds	r5, #8
 8009394:	2d0c      	cmp	r5, #12
 8009396:	bf38      	it	cc
 8009398:	250c      	movcc	r5, #12
 800939a:	2d00      	cmp	r5, #0
 800939c:	4606      	mov	r6, r0
 800939e:	db01      	blt.n	80093a4 <_malloc_r+0x1c>
 80093a0:	42a9      	cmp	r1, r5
 80093a2:	d904      	bls.n	80093ae <_malloc_r+0x26>
 80093a4:	230c      	movs	r3, #12
 80093a6:	6033      	str	r3, [r6, #0]
 80093a8:	2000      	movs	r0, #0
 80093aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80093ae:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8009484 <_malloc_r+0xfc>
 80093b2:	f000 f869 	bl	8009488 <__malloc_lock>
 80093b6:	f8d8 3000 	ldr.w	r3, [r8]
 80093ba:	461c      	mov	r4, r3
 80093bc:	bb44      	cbnz	r4, 8009410 <_malloc_r+0x88>
 80093be:	4629      	mov	r1, r5
 80093c0:	4630      	mov	r0, r6
 80093c2:	f7ff ffbf 	bl	8009344 <sbrk_aligned>
 80093c6:	1c43      	adds	r3, r0, #1
 80093c8:	4604      	mov	r4, r0
 80093ca:	d158      	bne.n	800947e <_malloc_r+0xf6>
 80093cc:	f8d8 4000 	ldr.w	r4, [r8]
 80093d0:	4627      	mov	r7, r4
 80093d2:	2f00      	cmp	r7, #0
 80093d4:	d143      	bne.n	800945e <_malloc_r+0xd6>
 80093d6:	2c00      	cmp	r4, #0
 80093d8:	d04b      	beq.n	8009472 <_malloc_r+0xea>
 80093da:	6823      	ldr	r3, [r4, #0]
 80093dc:	4639      	mov	r1, r7
 80093de:	4630      	mov	r0, r6
 80093e0:	eb04 0903 	add.w	r9, r4, r3
 80093e4:	f000 fdfc 	bl	8009fe0 <_sbrk_r>
 80093e8:	4581      	cmp	r9, r0
 80093ea:	d142      	bne.n	8009472 <_malloc_r+0xea>
 80093ec:	6821      	ldr	r1, [r4, #0]
 80093ee:	1a6d      	subs	r5, r5, r1
 80093f0:	4629      	mov	r1, r5
 80093f2:	4630      	mov	r0, r6
 80093f4:	f7ff ffa6 	bl	8009344 <sbrk_aligned>
 80093f8:	3001      	adds	r0, #1
 80093fa:	d03a      	beq.n	8009472 <_malloc_r+0xea>
 80093fc:	6823      	ldr	r3, [r4, #0]
 80093fe:	442b      	add	r3, r5
 8009400:	6023      	str	r3, [r4, #0]
 8009402:	f8d8 3000 	ldr.w	r3, [r8]
 8009406:	685a      	ldr	r2, [r3, #4]
 8009408:	bb62      	cbnz	r2, 8009464 <_malloc_r+0xdc>
 800940a:	f8c8 7000 	str.w	r7, [r8]
 800940e:	e00f      	b.n	8009430 <_malloc_r+0xa8>
 8009410:	6822      	ldr	r2, [r4, #0]
 8009412:	1b52      	subs	r2, r2, r5
 8009414:	d420      	bmi.n	8009458 <_malloc_r+0xd0>
 8009416:	2a0b      	cmp	r2, #11
 8009418:	d917      	bls.n	800944a <_malloc_r+0xc2>
 800941a:	1961      	adds	r1, r4, r5
 800941c:	42a3      	cmp	r3, r4
 800941e:	6025      	str	r5, [r4, #0]
 8009420:	bf18      	it	ne
 8009422:	6059      	strne	r1, [r3, #4]
 8009424:	6863      	ldr	r3, [r4, #4]
 8009426:	bf08      	it	eq
 8009428:	f8c8 1000 	streq.w	r1, [r8]
 800942c:	5162      	str	r2, [r4, r5]
 800942e:	604b      	str	r3, [r1, #4]
 8009430:	4630      	mov	r0, r6
 8009432:	f000 f82f 	bl	8009494 <__malloc_unlock>
 8009436:	f104 000b 	add.w	r0, r4, #11
 800943a:	1d23      	adds	r3, r4, #4
 800943c:	f020 0007 	bic.w	r0, r0, #7
 8009440:	1ac2      	subs	r2, r0, r3
 8009442:	bf1c      	itt	ne
 8009444:	1a1b      	subne	r3, r3, r0
 8009446:	50a3      	strne	r3, [r4, r2]
 8009448:	e7af      	b.n	80093aa <_malloc_r+0x22>
 800944a:	6862      	ldr	r2, [r4, #4]
 800944c:	42a3      	cmp	r3, r4
 800944e:	bf0c      	ite	eq
 8009450:	f8c8 2000 	streq.w	r2, [r8]
 8009454:	605a      	strne	r2, [r3, #4]
 8009456:	e7eb      	b.n	8009430 <_malloc_r+0xa8>
 8009458:	4623      	mov	r3, r4
 800945a:	6864      	ldr	r4, [r4, #4]
 800945c:	e7ae      	b.n	80093bc <_malloc_r+0x34>
 800945e:	463c      	mov	r4, r7
 8009460:	687f      	ldr	r7, [r7, #4]
 8009462:	e7b6      	b.n	80093d2 <_malloc_r+0x4a>
 8009464:	461a      	mov	r2, r3
 8009466:	685b      	ldr	r3, [r3, #4]
 8009468:	42a3      	cmp	r3, r4
 800946a:	d1fb      	bne.n	8009464 <_malloc_r+0xdc>
 800946c:	2300      	movs	r3, #0
 800946e:	6053      	str	r3, [r2, #4]
 8009470:	e7de      	b.n	8009430 <_malloc_r+0xa8>
 8009472:	230c      	movs	r3, #12
 8009474:	6033      	str	r3, [r6, #0]
 8009476:	4630      	mov	r0, r6
 8009478:	f000 f80c 	bl	8009494 <__malloc_unlock>
 800947c:	e794      	b.n	80093a8 <_malloc_r+0x20>
 800947e:	6005      	str	r5, [r0, #0]
 8009480:	e7d6      	b.n	8009430 <_malloc_r+0xa8>
 8009482:	bf00      	nop
 8009484:	20000790 	.word	0x20000790

08009488 <__malloc_lock>:
 8009488:	4801      	ldr	r0, [pc, #4]	@ (8009490 <__malloc_lock+0x8>)
 800948a:	f7ff b8b8 	b.w	80085fe <__retarget_lock_acquire_recursive>
 800948e:	bf00      	nop
 8009490:	20000788 	.word	0x20000788

08009494 <__malloc_unlock>:
 8009494:	4801      	ldr	r0, [pc, #4]	@ (800949c <__malloc_unlock+0x8>)
 8009496:	f7ff b8b3 	b.w	8008600 <__retarget_lock_release_recursive>
 800949a:	bf00      	nop
 800949c:	20000788 	.word	0x20000788

080094a0 <_Balloc>:
 80094a0:	b570      	push	{r4, r5, r6, lr}
 80094a2:	69c6      	ldr	r6, [r0, #28]
 80094a4:	4604      	mov	r4, r0
 80094a6:	460d      	mov	r5, r1
 80094a8:	b976      	cbnz	r6, 80094c8 <_Balloc+0x28>
 80094aa:	2010      	movs	r0, #16
 80094ac:	f7ff ff42 	bl	8009334 <malloc>
 80094b0:	4602      	mov	r2, r0
 80094b2:	61e0      	str	r0, [r4, #28]
 80094b4:	b920      	cbnz	r0, 80094c0 <_Balloc+0x20>
 80094b6:	4b18      	ldr	r3, [pc, #96]	@ (8009518 <_Balloc+0x78>)
 80094b8:	4818      	ldr	r0, [pc, #96]	@ (800951c <_Balloc+0x7c>)
 80094ba:	216b      	movs	r1, #107	@ 0x6b
 80094bc:	f000 fdae 	bl	800a01c <__assert_func>
 80094c0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80094c4:	6006      	str	r6, [r0, #0]
 80094c6:	60c6      	str	r6, [r0, #12]
 80094c8:	69e6      	ldr	r6, [r4, #28]
 80094ca:	68f3      	ldr	r3, [r6, #12]
 80094cc:	b183      	cbz	r3, 80094f0 <_Balloc+0x50>
 80094ce:	69e3      	ldr	r3, [r4, #28]
 80094d0:	68db      	ldr	r3, [r3, #12]
 80094d2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80094d6:	b9b8      	cbnz	r0, 8009508 <_Balloc+0x68>
 80094d8:	2101      	movs	r1, #1
 80094da:	fa01 f605 	lsl.w	r6, r1, r5
 80094de:	1d72      	adds	r2, r6, #5
 80094e0:	0092      	lsls	r2, r2, #2
 80094e2:	4620      	mov	r0, r4
 80094e4:	f000 fdb8 	bl	800a058 <_calloc_r>
 80094e8:	b160      	cbz	r0, 8009504 <_Balloc+0x64>
 80094ea:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80094ee:	e00e      	b.n	800950e <_Balloc+0x6e>
 80094f0:	2221      	movs	r2, #33	@ 0x21
 80094f2:	2104      	movs	r1, #4
 80094f4:	4620      	mov	r0, r4
 80094f6:	f000 fdaf 	bl	800a058 <_calloc_r>
 80094fa:	69e3      	ldr	r3, [r4, #28]
 80094fc:	60f0      	str	r0, [r6, #12]
 80094fe:	68db      	ldr	r3, [r3, #12]
 8009500:	2b00      	cmp	r3, #0
 8009502:	d1e4      	bne.n	80094ce <_Balloc+0x2e>
 8009504:	2000      	movs	r0, #0
 8009506:	bd70      	pop	{r4, r5, r6, pc}
 8009508:	6802      	ldr	r2, [r0, #0]
 800950a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800950e:	2300      	movs	r3, #0
 8009510:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009514:	e7f7      	b.n	8009506 <_Balloc+0x66>
 8009516:	bf00      	nop
 8009518:	0800d695 	.word	0x0800d695
 800951c:	0800d715 	.word	0x0800d715

08009520 <_Bfree>:
 8009520:	b570      	push	{r4, r5, r6, lr}
 8009522:	69c6      	ldr	r6, [r0, #28]
 8009524:	4605      	mov	r5, r0
 8009526:	460c      	mov	r4, r1
 8009528:	b976      	cbnz	r6, 8009548 <_Bfree+0x28>
 800952a:	2010      	movs	r0, #16
 800952c:	f7ff ff02 	bl	8009334 <malloc>
 8009530:	4602      	mov	r2, r0
 8009532:	61e8      	str	r0, [r5, #28]
 8009534:	b920      	cbnz	r0, 8009540 <_Bfree+0x20>
 8009536:	4b09      	ldr	r3, [pc, #36]	@ (800955c <_Bfree+0x3c>)
 8009538:	4809      	ldr	r0, [pc, #36]	@ (8009560 <_Bfree+0x40>)
 800953a:	218f      	movs	r1, #143	@ 0x8f
 800953c:	f000 fd6e 	bl	800a01c <__assert_func>
 8009540:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009544:	6006      	str	r6, [r0, #0]
 8009546:	60c6      	str	r6, [r0, #12]
 8009548:	b13c      	cbz	r4, 800955a <_Bfree+0x3a>
 800954a:	69eb      	ldr	r3, [r5, #28]
 800954c:	6862      	ldr	r2, [r4, #4]
 800954e:	68db      	ldr	r3, [r3, #12]
 8009550:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8009554:	6021      	str	r1, [r4, #0]
 8009556:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800955a:	bd70      	pop	{r4, r5, r6, pc}
 800955c:	0800d695 	.word	0x0800d695
 8009560:	0800d715 	.word	0x0800d715

08009564 <__multadd>:
 8009564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009568:	690d      	ldr	r5, [r1, #16]
 800956a:	4607      	mov	r7, r0
 800956c:	460c      	mov	r4, r1
 800956e:	461e      	mov	r6, r3
 8009570:	f101 0c14 	add.w	ip, r1, #20
 8009574:	2000      	movs	r0, #0
 8009576:	f8dc 3000 	ldr.w	r3, [ip]
 800957a:	b299      	uxth	r1, r3
 800957c:	fb02 6101 	mla	r1, r2, r1, r6
 8009580:	0c1e      	lsrs	r6, r3, #16
 8009582:	0c0b      	lsrs	r3, r1, #16
 8009584:	fb02 3306 	mla	r3, r2, r6, r3
 8009588:	b289      	uxth	r1, r1
 800958a:	3001      	adds	r0, #1
 800958c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8009590:	4285      	cmp	r5, r0
 8009592:	f84c 1b04 	str.w	r1, [ip], #4
 8009596:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800959a:	dcec      	bgt.n	8009576 <__multadd+0x12>
 800959c:	b30e      	cbz	r6, 80095e2 <__multadd+0x7e>
 800959e:	68a3      	ldr	r3, [r4, #8]
 80095a0:	42ab      	cmp	r3, r5
 80095a2:	dc19      	bgt.n	80095d8 <__multadd+0x74>
 80095a4:	6861      	ldr	r1, [r4, #4]
 80095a6:	4638      	mov	r0, r7
 80095a8:	3101      	adds	r1, #1
 80095aa:	f7ff ff79 	bl	80094a0 <_Balloc>
 80095ae:	4680      	mov	r8, r0
 80095b0:	b928      	cbnz	r0, 80095be <__multadd+0x5a>
 80095b2:	4602      	mov	r2, r0
 80095b4:	4b0c      	ldr	r3, [pc, #48]	@ (80095e8 <__multadd+0x84>)
 80095b6:	480d      	ldr	r0, [pc, #52]	@ (80095ec <__multadd+0x88>)
 80095b8:	21ba      	movs	r1, #186	@ 0xba
 80095ba:	f000 fd2f 	bl	800a01c <__assert_func>
 80095be:	6922      	ldr	r2, [r4, #16]
 80095c0:	3202      	adds	r2, #2
 80095c2:	f104 010c 	add.w	r1, r4, #12
 80095c6:	0092      	lsls	r2, r2, #2
 80095c8:	300c      	adds	r0, #12
 80095ca:	f000 fd19 	bl	800a000 <memcpy>
 80095ce:	4621      	mov	r1, r4
 80095d0:	4638      	mov	r0, r7
 80095d2:	f7ff ffa5 	bl	8009520 <_Bfree>
 80095d6:	4644      	mov	r4, r8
 80095d8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80095dc:	3501      	adds	r5, #1
 80095de:	615e      	str	r6, [r3, #20]
 80095e0:	6125      	str	r5, [r4, #16]
 80095e2:	4620      	mov	r0, r4
 80095e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80095e8:	0800d704 	.word	0x0800d704
 80095ec:	0800d715 	.word	0x0800d715

080095f0 <__hi0bits>:
 80095f0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80095f4:	4603      	mov	r3, r0
 80095f6:	bf36      	itet	cc
 80095f8:	0403      	lslcc	r3, r0, #16
 80095fa:	2000      	movcs	r0, #0
 80095fc:	2010      	movcc	r0, #16
 80095fe:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009602:	bf3c      	itt	cc
 8009604:	021b      	lslcc	r3, r3, #8
 8009606:	3008      	addcc	r0, #8
 8009608:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800960c:	bf3c      	itt	cc
 800960e:	011b      	lslcc	r3, r3, #4
 8009610:	3004      	addcc	r0, #4
 8009612:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009616:	bf3c      	itt	cc
 8009618:	009b      	lslcc	r3, r3, #2
 800961a:	3002      	addcc	r0, #2
 800961c:	2b00      	cmp	r3, #0
 800961e:	db05      	blt.n	800962c <__hi0bits+0x3c>
 8009620:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8009624:	f100 0001 	add.w	r0, r0, #1
 8009628:	bf08      	it	eq
 800962a:	2020      	moveq	r0, #32
 800962c:	4770      	bx	lr

0800962e <__lo0bits>:
 800962e:	6803      	ldr	r3, [r0, #0]
 8009630:	4602      	mov	r2, r0
 8009632:	f013 0007 	ands.w	r0, r3, #7
 8009636:	d00b      	beq.n	8009650 <__lo0bits+0x22>
 8009638:	07d9      	lsls	r1, r3, #31
 800963a:	d421      	bmi.n	8009680 <__lo0bits+0x52>
 800963c:	0798      	lsls	r0, r3, #30
 800963e:	bf49      	itett	mi
 8009640:	085b      	lsrmi	r3, r3, #1
 8009642:	089b      	lsrpl	r3, r3, #2
 8009644:	2001      	movmi	r0, #1
 8009646:	6013      	strmi	r3, [r2, #0]
 8009648:	bf5c      	itt	pl
 800964a:	6013      	strpl	r3, [r2, #0]
 800964c:	2002      	movpl	r0, #2
 800964e:	4770      	bx	lr
 8009650:	b299      	uxth	r1, r3
 8009652:	b909      	cbnz	r1, 8009658 <__lo0bits+0x2a>
 8009654:	0c1b      	lsrs	r3, r3, #16
 8009656:	2010      	movs	r0, #16
 8009658:	b2d9      	uxtb	r1, r3
 800965a:	b909      	cbnz	r1, 8009660 <__lo0bits+0x32>
 800965c:	3008      	adds	r0, #8
 800965e:	0a1b      	lsrs	r3, r3, #8
 8009660:	0719      	lsls	r1, r3, #28
 8009662:	bf04      	itt	eq
 8009664:	091b      	lsreq	r3, r3, #4
 8009666:	3004      	addeq	r0, #4
 8009668:	0799      	lsls	r1, r3, #30
 800966a:	bf04      	itt	eq
 800966c:	089b      	lsreq	r3, r3, #2
 800966e:	3002      	addeq	r0, #2
 8009670:	07d9      	lsls	r1, r3, #31
 8009672:	d403      	bmi.n	800967c <__lo0bits+0x4e>
 8009674:	085b      	lsrs	r3, r3, #1
 8009676:	f100 0001 	add.w	r0, r0, #1
 800967a:	d003      	beq.n	8009684 <__lo0bits+0x56>
 800967c:	6013      	str	r3, [r2, #0]
 800967e:	4770      	bx	lr
 8009680:	2000      	movs	r0, #0
 8009682:	4770      	bx	lr
 8009684:	2020      	movs	r0, #32
 8009686:	4770      	bx	lr

08009688 <__i2b>:
 8009688:	b510      	push	{r4, lr}
 800968a:	460c      	mov	r4, r1
 800968c:	2101      	movs	r1, #1
 800968e:	f7ff ff07 	bl	80094a0 <_Balloc>
 8009692:	4602      	mov	r2, r0
 8009694:	b928      	cbnz	r0, 80096a2 <__i2b+0x1a>
 8009696:	4b05      	ldr	r3, [pc, #20]	@ (80096ac <__i2b+0x24>)
 8009698:	4805      	ldr	r0, [pc, #20]	@ (80096b0 <__i2b+0x28>)
 800969a:	f240 1145 	movw	r1, #325	@ 0x145
 800969e:	f000 fcbd 	bl	800a01c <__assert_func>
 80096a2:	2301      	movs	r3, #1
 80096a4:	6144      	str	r4, [r0, #20]
 80096a6:	6103      	str	r3, [r0, #16]
 80096a8:	bd10      	pop	{r4, pc}
 80096aa:	bf00      	nop
 80096ac:	0800d704 	.word	0x0800d704
 80096b0:	0800d715 	.word	0x0800d715

080096b4 <__multiply>:
 80096b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096b8:	4614      	mov	r4, r2
 80096ba:	690a      	ldr	r2, [r1, #16]
 80096bc:	6923      	ldr	r3, [r4, #16]
 80096be:	429a      	cmp	r2, r3
 80096c0:	bfa8      	it	ge
 80096c2:	4623      	movge	r3, r4
 80096c4:	460f      	mov	r7, r1
 80096c6:	bfa4      	itt	ge
 80096c8:	460c      	movge	r4, r1
 80096ca:	461f      	movge	r7, r3
 80096cc:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80096d0:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80096d4:	68a3      	ldr	r3, [r4, #8]
 80096d6:	6861      	ldr	r1, [r4, #4]
 80096d8:	eb0a 0609 	add.w	r6, sl, r9
 80096dc:	42b3      	cmp	r3, r6
 80096de:	b085      	sub	sp, #20
 80096e0:	bfb8      	it	lt
 80096e2:	3101      	addlt	r1, #1
 80096e4:	f7ff fedc 	bl	80094a0 <_Balloc>
 80096e8:	b930      	cbnz	r0, 80096f8 <__multiply+0x44>
 80096ea:	4602      	mov	r2, r0
 80096ec:	4b44      	ldr	r3, [pc, #272]	@ (8009800 <__multiply+0x14c>)
 80096ee:	4845      	ldr	r0, [pc, #276]	@ (8009804 <__multiply+0x150>)
 80096f0:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80096f4:	f000 fc92 	bl	800a01c <__assert_func>
 80096f8:	f100 0514 	add.w	r5, r0, #20
 80096fc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8009700:	462b      	mov	r3, r5
 8009702:	2200      	movs	r2, #0
 8009704:	4543      	cmp	r3, r8
 8009706:	d321      	bcc.n	800974c <__multiply+0x98>
 8009708:	f107 0114 	add.w	r1, r7, #20
 800970c:	f104 0214 	add.w	r2, r4, #20
 8009710:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8009714:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8009718:	9302      	str	r3, [sp, #8]
 800971a:	1b13      	subs	r3, r2, r4
 800971c:	3b15      	subs	r3, #21
 800971e:	f023 0303 	bic.w	r3, r3, #3
 8009722:	3304      	adds	r3, #4
 8009724:	f104 0715 	add.w	r7, r4, #21
 8009728:	42ba      	cmp	r2, r7
 800972a:	bf38      	it	cc
 800972c:	2304      	movcc	r3, #4
 800972e:	9301      	str	r3, [sp, #4]
 8009730:	9b02      	ldr	r3, [sp, #8]
 8009732:	9103      	str	r1, [sp, #12]
 8009734:	428b      	cmp	r3, r1
 8009736:	d80c      	bhi.n	8009752 <__multiply+0x9e>
 8009738:	2e00      	cmp	r6, #0
 800973a:	dd03      	ble.n	8009744 <__multiply+0x90>
 800973c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8009740:	2b00      	cmp	r3, #0
 8009742:	d05b      	beq.n	80097fc <__multiply+0x148>
 8009744:	6106      	str	r6, [r0, #16]
 8009746:	b005      	add	sp, #20
 8009748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800974c:	f843 2b04 	str.w	r2, [r3], #4
 8009750:	e7d8      	b.n	8009704 <__multiply+0x50>
 8009752:	f8b1 a000 	ldrh.w	sl, [r1]
 8009756:	f1ba 0f00 	cmp.w	sl, #0
 800975a:	d024      	beq.n	80097a6 <__multiply+0xf2>
 800975c:	f104 0e14 	add.w	lr, r4, #20
 8009760:	46a9      	mov	r9, r5
 8009762:	f04f 0c00 	mov.w	ip, #0
 8009766:	f85e 7b04 	ldr.w	r7, [lr], #4
 800976a:	f8d9 3000 	ldr.w	r3, [r9]
 800976e:	fa1f fb87 	uxth.w	fp, r7
 8009772:	b29b      	uxth	r3, r3
 8009774:	fb0a 330b 	mla	r3, sl, fp, r3
 8009778:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 800977c:	f8d9 7000 	ldr.w	r7, [r9]
 8009780:	4463      	add	r3, ip
 8009782:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8009786:	fb0a c70b 	mla	r7, sl, fp, ip
 800978a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800978e:	b29b      	uxth	r3, r3
 8009790:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8009794:	4572      	cmp	r2, lr
 8009796:	f849 3b04 	str.w	r3, [r9], #4
 800979a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800979e:	d8e2      	bhi.n	8009766 <__multiply+0xb2>
 80097a0:	9b01      	ldr	r3, [sp, #4]
 80097a2:	f845 c003 	str.w	ip, [r5, r3]
 80097a6:	9b03      	ldr	r3, [sp, #12]
 80097a8:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80097ac:	3104      	adds	r1, #4
 80097ae:	f1b9 0f00 	cmp.w	r9, #0
 80097b2:	d021      	beq.n	80097f8 <__multiply+0x144>
 80097b4:	682b      	ldr	r3, [r5, #0]
 80097b6:	f104 0c14 	add.w	ip, r4, #20
 80097ba:	46ae      	mov	lr, r5
 80097bc:	f04f 0a00 	mov.w	sl, #0
 80097c0:	f8bc b000 	ldrh.w	fp, [ip]
 80097c4:	f8be 7002 	ldrh.w	r7, [lr, #2]
 80097c8:	fb09 770b 	mla	r7, r9, fp, r7
 80097cc:	4457      	add	r7, sl
 80097ce:	b29b      	uxth	r3, r3
 80097d0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80097d4:	f84e 3b04 	str.w	r3, [lr], #4
 80097d8:	f85c 3b04 	ldr.w	r3, [ip], #4
 80097dc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80097e0:	f8be 3000 	ldrh.w	r3, [lr]
 80097e4:	fb09 330a 	mla	r3, r9, sl, r3
 80097e8:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80097ec:	4562      	cmp	r2, ip
 80097ee:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80097f2:	d8e5      	bhi.n	80097c0 <__multiply+0x10c>
 80097f4:	9f01      	ldr	r7, [sp, #4]
 80097f6:	51eb      	str	r3, [r5, r7]
 80097f8:	3504      	adds	r5, #4
 80097fa:	e799      	b.n	8009730 <__multiply+0x7c>
 80097fc:	3e01      	subs	r6, #1
 80097fe:	e79b      	b.n	8009738 <__multiply+0x84>
 8009800:	0800d704 	.word	0x0800d704
 8009804:	0800d715 	.word	0x0800d715

08009808 <__pow5mult>:
 8009808:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800980c:	4615      	mov	r5, r2
 800980e:	f012 0203 	ands.w	r2, r2, #3
 8009812:	4607      	mov	r7, r0
 8009814:	460e      	mov	r6, r1
 8009816:	d007      	beq.n	8009828 <__pow5mult+0x20>
 8009818:	4c25      	ldr	r4, [pc, #148]	@ (80098b0 <__pow5mult+0xa8>)
 800981a:	3a01      	subs	r2, #1
 800981c:	2300      	movs	r3, #0
 800981e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8009822:	f7ff fe9f 	bl	8009564 <__multadd>
 8009826:	4606      	mov	r6, r0
 8009828:	10ad      	asrs	r5, r5, #2
 800982a:	d03d      	beq.n	80098a8 <__pow5mult+0xa0>
 800982c:	69fc      	ldr	r4, [r7, #28]
 800982e:	b97c      	cbnz	r4, 8009850 <__pow5mult+0x48>
 8009830:	2010      	movs	r0, #16
 8009832:	f7ff fd7f 	bl	8009334 <malloc>
 8009836:	4602      	mov	r2, r0
 8009838:	61f8      	str	r0, [r7, #28]
 800983a:	b928      	cbnz	r0, 8009848 <__pow5mult+0x40>
 800983c:	4b1d      	ldr	r3, [pc, #116]	@ (80098b4 <__pow5mult+0xac>)
 800983e:	481e      	ldr	r0, [pc, #120]	@ (80098b8 <__pow5mult+0xb0>)
 8009840:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8009844:	f000 fbea 	bl	800a01c <__assert_func>
 8009848:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800984c:	6004      	str	r4, [r0, #0]
 800984e:	60c4      	str	r4, [r0, #12]
 8009850:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8009854:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8009858:	b94c      	cbnz	r4, 800986e <__pow5mult+0x66>
 800985a:	f240 2171 	movw	r1, #625	@ 0x271
 800985e:	4638      	mov	r0, r7
 8009860:	f7ff ff12 	bl	8009688 <__i2b>
 8009864:	2300      	movs	r3, #0
 8009866:	f8c8 0008 	str.w	r0, [r8, #8]
 800986a:	4604      	mov	r4, r0
 800986c:	6003      	str	r3, [r0, #0]
 800986e:	f04f 0900 	mov.w	r9, #0
 8009872:	07eb      	lsls	r3, r5, #31
 8009874:	d50a      	bpl.n	800988c <__pow5mult+0x84>
 8009876:	4631      	mov	r1, r6
 8009878:	4622      	mov	r2, r4
 800987a:	4638      	mov	r0, r7
 800987c:	f7ff ff1a 	bl	80096b4 <__multiply>
 8009880:	4631      	mov	r1, r6
 8009882:	4680      	mov	r8, r0
 8009884:	4638      	mov	r0, r7
 8009886:	f7ff fe4b 	bl	8009520 <_Bfree>
 800988a:	4646      	mov	r6, r8
 800988c:	106d      	asrs	r5, r5, #1
 800988e:	d00b      	beq.n	80098a8 <__pow5mult+0xa0>
 8009890:	6820      	ldr	r0, [r4, #0]
 8009892:	b938      	cbnz	r0, 80098a4 <__pow5mult+0x9c>
 8009894:	4622      	mov	r2, r4
 8009896:	4621      	mov	r1, r4
 8009898:	4638      	mov	r0, r7
 800989a:	f7ff ff0b 	bl	80096b4 <__multiply>
 800989e:	6020      	str	r0, [r4, #0]
 80098a0:	f8c0 9000 	str.w	r9, [r0]
 80098a4:	4604      	mov	r4, r0
 80098a6:	e7e4      	b.n	8009872 <__pow5mult+0x6a>
 80098a8:	4630      	mov	r0, r6
 80098aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80098ae:	bf00      	nop
 80098b0:	0800d770 	.word	0x0800d770
 80098b4:	0800d695 	.word	0x0800d695
 80098b8:	0800d715 	.word	0x0800d715

080098bc <__lshift>:
 80098bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098c0:	460c      	mov	r4, r1
 80098c2:	6849      	ldr	r1, [r1, #4]
 80098c4:	6923      	ldr	r3, [r4, #16]
 80098c6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80098ca:	68a3      	ldr	r3, [r4, #8]
 80098cc:	4607      	mov	r7, r0
 80098ce:	4691      	mov	r9, r2
 80098d0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80098d4:	f108 0601 	add.w	r6, r8, #1
 80098d8:	42b3      	cmp	r3, r6
 80098da:	db0b      	blt.n	80098f4 <__lshift+0x38>
 80098dc:	4638      	mov	r0, r7
 80098de:	f7ff fddf 	bl	80094a0 <_Balloc>
 80098e2:	4605      	mov	r5, r0
 80098e4:	b948      	cbnz	r0, 80098fa <__lshift+0x3e>
 80098e6:	4602      	mov	r2, r0
 80098e8:	4b28      	ldr	r3, [pc, #160]	@ (800998c <__lshift+0xd0>)
 80098ea:	4829      	ldr	r0, [pc, #164]	@ (8009990 <__lshift+0xd4>)
 80098ec:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80098f0:	f000 fb94 	bl	800a01c <__assert_func>
 80098f4:	3101      	adds	r1, #1
 80098f6:	005b      	lsls	r3, r3, #1
 80098f8:	e7ee      	b.n	80098d8 <__lshift+0x1c>
 80098fa:	2300      	movs	r3, #0
 80098fc:	f100 0114 	add.w	r1, r0, #20
 8009900:	f100 0210 	add.w	r2, r0, #16
 8009904:	4618      	mov	r0, r3
 8009906:	4553      	cmp	r3, sl
 8009908:	db33      	blt.n	8009972 <__lshift+0xb6>
 800990a:	6920      	ldr	r0, [r4, #16]
 800990c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009910:	f104 0314 	add.w	r3, r4, #20
 8009914:	f019 091f 	ands.w	r9, r9, #31
 8009918:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800991c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009920:	d02b      	beq.n	800997a <__lshift+0xbe>
 8009922:	f1c9 0e20 	rsb	lr, r9, #32
 8009926:	468a      	mov	sl, r1
 8009928:	2200      	movs	r2, #0
 800992a:	6818      	ldr	r0, [r3, #0]
 800992c:	fa00 f009 	lsl.w	r0, r0, r9
 8009930:	4310      	orrs	r0, r2
 8009932:	f84a 0b04 	str.w	r0, [sl], #4
 8009936:	f853 2b04 	ldr.w	r2, [r3], #4
 800993a:	459c      	cmp	ip, r3
 800993c:	fa22 f20e 	lsr.w	r2, r2, lr
 8009940:	d8f3      	bhi.n	800992a <__lshift+0x6e>
 8009942:	ebac 0304 	sub.w	r3, ip, r4
 8009946:	3b15      	subs	r3, #21
 8009948:	f023 0303 	bic.w	r3, r3, #3
 800994c:	3304      	adds	r3, #4
 800994e:	f104 0015 	add.w	r0, r4, #21
 8009952:	4584      	cmp	ip, r0
 8009954:	bf38      	it	cc
 8009956:	2304      	movcc	r3, #4
 8009958:	50ca      	str	r2, [r1, r3]
 800995a:	b10a      	cbz	r2, 8009960 <__lshift+0xa4>
 800995c:	f108 0602 	add.w	r6, r8, #2
 8009960:	3e01      	subs	r6, #1
 8009962:	4638      	mov	r0, r7
 8009964:	612e      	str	r6, [r5, #16]
 8009966:	4621      	mov	r1, r4
 8009968:	f7ff fdda 	bl	8009520 <_Bfree>
 800996c:	4628      	mov	r0, r5
 800996e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009972:	f842 0f04 	str.w	r0, [r2, #4]!
 8009976:	3301      	adds	r3, #1
 8009978:	e7c5      	b.n	8009906 <__lshift+0x4a>
 800997a:	3904      	subs	r1, #4
 800997c:	f853 2b04 	ldr.w	r2, [r3], #4
 8009980:	f841 2f04 	str.w	r2, [r1, #4]!
 8009984:	459c      	cmp	ip, r3
 8009986:	d8f9      	bhi.n	800997c <__lshift+0xc0>
 8009988:	e7ea      	b.n	8009960 <__lshift+0xa4>
 800998a:	bf00      	nop
 800998c:	0800d704 	.word	0x0800d704
 8009990:	0800d715 	.word	0x0800d715

08009994 <__mcmp>:
 8009994:	690a      	ldr	r2, [r1, #16]
 8009996:	4603      	mov	r3, r0
 8009998:	6900      	ldr	r0, [r0, #16]
 800999a:	1a80      	subs	r0, r0, r2
 800999c:	b530      	push	{r4, r5, lr}
 800999e:	d10e      	bne.n	80099be <__mcmp+0x2a>
 80099a0:	3314      	adds	r3, #20
 80099a2:	3114      	adds	r1, #20
 80099a4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80099a8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80099ac:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80099b0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80099b4:	4295      	cmp	r5, r2
 80099b6:	d003      	beq.n	80099c0 <__mcmp+0x2c>
 80099b8:	d205      	bcs.n	80099c6 <__mcmp+0x32>
 80099ba:	f04f 30ff 	mov.w	r0, #4294967295
 80099be:	bd30      	pop	{r4, r5, pc}
 80099c0:	42a3      	cmp	r3, r4
 80099c2:	d3f3      	bcc.n	80099ac <__mcmp+0x18>
 80099c4:	e7fb      	b.n	80099be <__mcmp+0x2a>
 80099c6:	2001      	movs	r0, #1
 80099c8:	e7f9      	b.n	80099be <__mcmp+0x2a>
	...

080099cc <__mdiff>:
 80099cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099d0:	4689      	mov	r9, r1
 80099d2:	4606      	mov	r6, r0
 80099d4:	4611      	mov	r1, r2
 80099d6:	4648      	mov	r0, r9
 80099d8:	4614      	mov	r4, r2
 80099da:	f7ff ffdb 	bl	8009994 <__mcmp>
 80099de:	1e05      	subs	r5, r0, #0
 80099e0:	d112      	bne.n	8009a08 <__mdiff+0x3c>
 80099e2:	4629      	mov	r1, r5
 80099e4:	4630      	mov	r0, r6
 80099e6:	f7ff fd5b 	bl	80094a0 <_Balloc>
 80099ea:	4602      	mov	r2, r0
 80099ec:	b928      	cbnz	r0, 80099fa <__mdiff+0x2e>
 80099ee:	4b3f      	ldr	r3, [pc, #252]	@ (8009aec <__mdiff+0x120>)
 80099f0:	f240 2137 	movw	r1, #567	@ 0x237
 80099f4:	483e      	ldr	r0, [pc, #248]	@ (8009af0 <__mdiff+0x124>)
 80099f6:	f000 fb11 	bl	800a01c <__assert_func>
 80099fa:	2301      	movs	r3, #1
 80099fc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8009a00:	4610      	mov	r0, r2
 8009a02:	b003      	add	sp, #12
 8009a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a08:	bfbc      	itt	lt
 8009a0a:	464b      	movlt	r3, r9
 8009a0c:	46a1      	movlt	r9, r4
 8009a0e:	4630      	mov	r0, r6
 8009a10:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8009a14:	bfba      	itte	lt
 8009a16:	461c      	movlt	r4, r3
 8009a18:	2501      	movlt	r5, #1
 8009a1a:	2500      	movge	r5, #0
 8009a1c:	f7ff fd40 	bl	80094a0 <_Balloc>
 8009a20:	4602      	mov	r2, r0
 8009a22:	b918      	cbnz	r0, 8009a2c <__mdiff+0x60>
 8009a24:	4b31      	ldr	r3, [pc, #196]	@ (8009aec <__mdiff+0x120>)
 8009a26:	f240 2145 	movw	r1, #581	@ 0x245
 8009a2a:	e7e3      	b.n	80099f4 <__mdiff+0x28>
 8009a2c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8009a30:	6926      	ldr	r6, [r4, #16]
 8009a32:	60c5      	str	r5, [r0, #12]
 8009a34:	f109 0310 	add.w	r3, r9, #16
 8009a38:	f109 0514 	add.w	r5, r9, #20
 8009a3c:	f104 0e14 	add.w	lr, r4, #20
 8009a40:	f100 0b14 	add.w	fp, r0, #20
 8009a44:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8009a48:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8009a4c:	9301      	str	r3, [sp, #4]
 8009a4e:	46d9      	mov	r9, fp
 8009a50:	f04f 0c00 	mov.w	ip, #0
 8009a54:	9b01      	ldr	r3, [sp, #4]
 8009a56:	f85e 0b04 	ldr.w	r0, [lr], #4
 8009a5a:	f853 af04 	ldr.w	sl, [r3, #4]!
 8009a5e:	9301      	str	r3, [sp, #4]
 8009a60:	fa1f f38a 	uxth.w	r3, sl
 8009a64:	4619      	mov	r1, r3
 8009a66:	b283      	uxth	r3, r0
 8009a68:	1acb      	subs	r3, r1, r3
 8009a6a:	0c00      	lsrs	r0, r0, #16
 8009a6c:	4463      	add	r3, ip
 8009a6e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8009a72:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8009a76:	b29b      	uxth	r3, r3
 8009a78:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8009a7c:	4576      	cmp	r6, lr
 8009a7e:	f849 3b04 	str.w	r3, [r9], #4
 8009a82:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8009a86:	d8e5      	bhi.n	8009a54 <__mdiff+0x88>
 8009a88:	1b33      	subs	r3, r6, r4
 8009a8a:	3b15      	subs	r3, #21
 8009a8c:	f023 0303 	bic.w	r3, r3, #3
 8009a90:	3415      	adds	r4, #21
 8009a92:	3304      	adds	r3, #4
 8009a94:	42a6      	cmp	r6, r4
 8009a96:	bf38      	it	cc
 8009a98:	2304      	movcc	r3, #4
 8009a9a:	441d      	add	r5, r3
 8009a9c:	445b      	add	r3, fp
 8009a9e:	461e      	mov	r6, r3
 8009aa0:	462c      	mov	r4, r5
 8009aa2:	4544      	cmp	r4, r8
 8009aa4:	d30e      	bcc.n	8009ac4 <__mdiff+0xf8>
 8009aa6:	f108 0103 	add.w	r1, r8, #3
 8009aaa:	1b49      	subs	r1, r1, r5
 8009aac:	f021 0103 	bic.w	r1, r1, #3
 8009ab0:	3d03      	subs	r5, #3
 8009ab2:	45a8      	cmp	r8, r5
 8009ab4:	bf38      	it	cc
 8009ab6:	2100      	movcc	r1, #0
 8009ab8:	440b      	add	r3, r1
 8009aba:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8009abe:	b191      	cbz	r1, 8009ae6 <__mdiff+0x11a>
 8009ac0:	6117      	str	r7, [r2, #16]
 8009ac2:	e79d      	b.n	8009a00 <__mdiff+0x34>
 8009ac4:	f854 1b04 	ldr.w	r1, [r4], #4
 8009ac8:	46e6      	mov	lr, ip
 8009aca:	0c08      	lsrs	r0, r1, #16
 8009acc:	fa1c fc81 	uxtah	ip, ip, r1
 8009ad0:	4471      	add	r1, lr
 8009ad2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8009ad6:	b289      	uxth	r1, r1
 8009ad8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8009adc:	f846 1b04 	str.w	r1, [r6], #4
 8009ae0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8009ae4:	e7dd      	b.n	8009aa2 <__mdiff+0xd6>
 8009ae6:	3f01      	subs	r7, #1
 8009ae8:	e7e7      	b.n	8009aba <__mdiff+0xee>
 8009aea:	bf00      	nop
 8009aec:	0800d704 	.word	0x0800d704
 8009af0:	0800d715 	.word	0x0800d715

08009af4 <__d2b>:
 8009af4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009af8:	460f      	mov	r7, r1
 8009afa:	2101      	movs	r1, #1
 8009afc:	ec59 8b10 	vmov	r8, r9, d0
 8009b00:	4616      	mov	r6, r2
 8009b02:	f7ff fccd 	bl	80094a0 <_Balloc>
 8009b06:	4604      	mov	r4, r0
 8009b08:	b930      	cbnz	r0, 8009b18 <__d2b+0x24>
 8009b0a:	4602      	mov	r2, r0
 8009b0c:	4b23      	ldr	r3, [pc, #140]	@ (8009b9c <__d2b+0xa8>)
 8009b0e:	4824      	ldr	r0, [pc, #144]	@ (8009ba0 <__d2b+0xac>)
 8009b10:	f240 310f 	movw	r1, #783	@ 0x30f
 8009b14:	f000 fa82 	bl	800a01c <__assert_func>
 8009b18:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8009b1c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8009b20:	b10d      	cbz	r5, 8009b26 <__d2b+0x32>
 8009b22:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8009b26:	9301      	str	r3, [sp, #4]
 8009b28:	f1b8 0300 	subs.w	r3, r8, #0
 8009b2c:	d023      	beq.n	8009b76 <__d2b+0x82>
 8009b2e:	4668      	mov	r0, sp
 8009b30:	9300      	str	r3, [sp, #0]
 8009b32:	f7ff fd7c 	bl	800962e <__lo0bits>
 8009b36:	e9dd 1200 	ldrd	r1, r2, [sp]
 8009b3a:	b1d0      	cbz	r0, 8009b72 <__d2b+0x7e>
 8009b3c:	f1c0 0320 	rsb	r3, r0, #32
 8009b40:	fa02 f303 	lsl.w	r3, r2, r3
 8009b44:	430b      	orrs	r3, r1
 8009b46:	40c2      	lsrs	r2, r0
 8009b48:	6163      	str	r3, [r4, #20]
 8009b4a:	9201      	str	r2, [sp, #4]
 8009b4c:	9b01      	ldr	r3, [sp, #4]
 8009b4e:	61a3      	str	r3, [r4, #24]
 8009b50:	2b00      	cmp	r3, #0
 8009b52:	bf0c      	ite	eq
 8009b54:	2201      	moveq	r2, #1
 8009b56:	2202      	movne	r2, #2
 8009b58:	6122      	str	r2, [r4, #16]
 8009b5a:	b1a5      	cbz	r5, 8009b86 <__d2b+0x92>
 8009b5c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8009b60:	4405      	add	r5, r0
 8009b62:	603d      	str	r5, [r7, #0]
 8009b64:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8009b68:	6030      	str	r0, [r6, #0]
 8009b6a:	4620      	mov	r0, r4
 8009b6c:	b003      	add	sp, #12
 8009b6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b72:	6161      	str	r1, [r4, #20]
 8009b74:	e7ea      	b.n	8009b4c <__d2b+0x58>
 8009b76:	a801      	add	r0, sp, #4
 8009b78:	f7ff fd59 	bl	800962e <__lo0bits>
 8009b7c:	9b01      	ldr	r3, [sp, #4]
 8009b7e:	6163      	str	r3, [r4, #20]
 8009b80:	3020      	adds	r0, #32
 8009b82:	2201      	movs	r2, #1
 8009b84:	e7e8      	b.n	8009b58 <__d2b+0x64>
 8009b86:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8009b8a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8009b8e:	6038      	str	r0, [r7, #0]
 8009b90:	6918      	ldr	r0, [r3, #16]
 8009b92:	f7ff fd2d 	bl	80095f0 <__hi0bits>
 8009b96:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8009b9a:	e7e5      	b.n	8009b68 <__d2b+0x74>
 8009b9c:	0800d704 	.word	0x0800d704
 8009ba0:	0800d715 	.word	0x0800d715

08009ba4 <__ssputs_r>:
 8009ba4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ba8:	688e      	ldr	r6, [r1, #8]
 8009baa:	461f      	mov	r7, r3
 8009bac:	42be      	cmp	r6, r7
 8009bae:	680b      	ldr	r3, [r1, #0]
 8009bb0:	4682      	mov	sl, r0
 8009bb2:	460c      	mov	r4, r1
 8009bb4:	4690      	mov	r8, r2
 8009bb6:	d82d      	bhi.n	8009c14 <__ssputs_r+0x70>
 8009bb8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8009bbc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8009bc0:	d026      	beq.n	8009c10 <__ssputs_r+0x6c>
 8009bc2:	6965      	ldr	r5, [r4, #20]
 8009bc4:	6909      	ldr	r1, [r1, #16]
 8009bc6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009bca:	eba3 0901 	sub.w	r9, r3, r1
 8009bce:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8009bd2:	1c7b      	adds	r3, r7, #1
 8009bd4:	444b      	add	r3, r9
 8009bd6:	106d      	asrs	r5, r5, #1
 8009bd8:	429d      	cmp	r5, r3
 8009bda:	bf38      	it	cc
 8009bdc:	461d      	movcc	r5, r3
 8009bde:	0553      	lsls	r3, r2, #21
 8009be0:	d527      	bpl.n	8009c32 <__ssputs_r+0x8e>
 8009be2:	4629      	mov	r1, r5
 8009be4:	f7ff fbd0 	bl	8009388 <_malloc_r>
 8009be8:	4606      	mov	r6, r0
 8009bea:	b360      	cbz	r0, 8009c46 <__ssputs_r+0xa2>
 8009bec:	6921      	ldr	r1, [r4, #16]
 8009bee:	464a      	mov	r2, r9
 8009bf0:	f000 fa06 	bl	800a000 <memcpy>
 8009bf4:	89a3      	ldrh	r3, [r4, #12]
 8009bf6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8009bfa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009bfe:	81a3      	strh	r3, [r4, #12]
 8009c00:	6126      	str	r6, [r4, #16]
 8009c02:	6165      	str	r5, [r4, #20]
 8009c04:	444e      	add	r6, r9
 8009c06:	eba5 0509 	sub.w	r5, r5, r9
 8009c0a:	6026      	str	r6, [r4, #0]
 8009c0c:	60a5      	str	r5, [r4, #8]
 8009c0e:	463e      	mov	r6, r7
 8009c10:	42be      	cmp	r6, r7
 8009c12:	d900      	bls.n	8009c16 <__ssputs_r+0x72>
 8009c14:	463e      	mov	r6, r7
 8009c16:	6820      	ldr	r0, [r4, #0]
 8009c18:	4632      	mov	r2, r6
 8009c1a:	4641      	mov	r1, r8
 8009c1c:	f000 f9c6 	bl	8009fac <memmove>
 8009c20:	68a3      	ldr	r3, [r4, #8]
 8009c22:	1b9b      	subs	r3, r3, r6
 8009c24:	60a3      	str	r3, [r4, #8]
 8009c26:	6823      	ldr	r3, [r4, #0]
 8009c28:	4433      	add	r3, r6
 8009c2a:	6023      	str	r3, [r4, #0]
 8009c2c:	2000      	movs	r0, #0
 8009c2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c32:	462a      	mov	r2, r5
 8009c34:	f000 fa36 	bl	800a0a4 <_realloc_r>
 8009c38:	4606      	mov	r6, r0
 8009c3a:	2800      	cmp	r0, #0
 8009c3c:	d1e0      	bne.n	8009c00 <__ssputs_r+0x5c>
 8009c3e:	6921      	ldr	r1, [r4, #16]
 8009c40:	4650      	mov	r0, sl
 8009c42:	f7ff fb2d 	bl	80092a0 <_free_r>
 8009c46:	230c      	movs	r3, #12
 8009c48:	f8ca 3000 	str.w	r3, [sl]
 8009c4c:	89a3      	ldrh	r3, [r4, #12]
 8009c4e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009c52:	81a3      	strh	r3, [r4, #12]
 8009c54:	f04f 30ff 	mov.w	r0, #4294967295
 8009c58:	e7e9      	b.n	8009c2e <__ssputs_r+0x8a>
	...

08009c5c <_svfiprintf_r>:
 8009c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c60:	4698      	mov	r8, r3
 8009c62:	898b      	ldrh	r3, [r1, #12]
 8009c64:	061b      	lsls	r3, r3, #24
 8009c66:	b09d      	sub	sp, #116	@ 0x74
 8009c68:	4607      	mov	r7, r0
 8009c6a:	460d      	mov	r5, r1
 8009c6c:	4614      	mov	r4, r2
 8009c6e:	d510      	bpl.n	8009c92 <_svfiprintf_r+0x36>
 8009c70:	690b      	ldr	r3, [r1, #16]
 8009c72:	b973      	cbnz	r3, 8009c92 <_svfiprintf_r+0x36>
 8009c74:	2140      	movs	r1, #64	@ 0x40
 8009c76:	f7ff fb87 	bl	8009388 <_malloc_r>
 8009c7a:	6028      	str	r0, [r5, #0]
 8009c7c:	6128      	str	r0, [r5, #16]
 8009c7e:	b930      	cbnz	r0, 8009c8e <_svfiprintf_r+0x32>
 8009c80:	230c      	movs	r3, #12
 8009c82:	603b      	str	r3, [r7, #0]
 8009c84:	f04f 30ff 	mov.w	r0, #4294967295
 8009c88:	b01d      	add	sp, #116	@ 0x74
 8009c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c8e:	2340      	movs	r3, #64	@ 0x40
 8009c90:	616b      	str	r3, [r5, #20]
 8009c92:	2300      	movs	r3, #0
 8009c94:	9309      	str	r3, [sp, #36]	@ 0x24
 8009c96:	2320      	movs	r3, #32
 8009c98:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8009c9c:	f8cd 800c 	str.w	r8, [sp, #12]
 8009ca0:	2330      	movs	r3, #48	@ 0x30
 8009ca2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8009e40 <_svfiprintf_r+0x1e4>
 8009ca6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8009caa:	f04f 0901 	mov.w	r9, #1
 8009cae:	4623      	mov	r3, r4
 8009cb0:	469a      	mov	sl, r3
 8009cb2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009cb6:	b10a      	cbz	r2, 8009cbc <_svfiprintf_r+0x60>
 8009cb8:	2a25      	cmp	r2, #37	@ 0x25
 8009cba:	d1f9      	bne.n	8009cb0 <_svfiprintf_r+0x54>
 8009cbc:	ebba 0b04 	subs.w	fp, sl, r4
 8009cc0:	d00b      	beq.n	8009cda <_svfiprintf_r+0x7e>
 8009cc2:	465b      	mov	r3, fp
 8009cc4:	4622      	mov	r2, r4
 8009cc6:	4629      	mov	r1, r5
 8009cc8:	4638      	mov	r0, r7
 8009cca:	f7ff ff6b 	bl	8009ba4 <__ssputs_r>
 8009cce:	3001      	adds	r0, #1
 8009cd0:	f000 80a7 	beq.w	8009e22 <_svfiprintf_r+0x1c6>
 8009cd4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009cd6:	445a      	add	r2, fp
 8009cd8:	9209      	str	r2, [sp, #36]	@ 0x24
 8009cda:	f89a 3000 	ldrb.w	r3, [sl]
 8009cde:	2b00      	cmp	r3, #0
 8009ce0:	f000 809f 	beq.w	8009e22 <_svfiprintf_r+0x1c6>
 8009ce4:	2300      	movs	r3, #0
 8009ce6:	f04f 32ff 	mov.w	r2, #4294967295
 8009cea:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009cee:	f10a 0a01 	add.w	sl, sl, #1
 8009cf2:	9304      	str	r3, [sp, #16]
 8009cf4:	9307      	str	r3, [sp, #28]
 8009cf6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8009cfa:	931a      	str	r3, [sp, #104]	@ 0x68
 8009cfc:	4654      	mov	r4, sl
 8009cfe:	2205      	movs	r2, #5
 8009d00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009d04:	484e      	ldr	r0, [pc, #312]	@ (8009e40 <_svfiprintf_r+0x1e4>)
 8009d06:	f7f6 fa63 	bl	80001d0 <memchr>
 8009d0a:	9a04      	ldr	r2, [sp, #16]
 8009d0c:	b9d8      	cbnz	r0, 8009d46 <_svfiprintf_r+0xea>
 8009d0e:	06d0      	lsls	r0, r2, #27
 8009d10:	bf44      	itt	mi
 8009d12:	2320      	movmi	r3, #32
 8009d14:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009d18:	0711      	lsls	r1, r2, #28
 8009d1a:	bf44      	itt	mi
 8009d1c:	232b      	movmi	r3, #43	@ 0x2b
 8009d1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009d22:	f89a 3000 	ldrb.w	r3, [sl]
 8009d26:	2b2a      	cmp	r3, #42	@ 0x2a
 8009d28:	d015      	beq.n	8009d56 <_svfiprintf_r+0xfa>
 8009d2a:	9a07      	ldr	r2, [sp, #28]
 8009d2c:	4654      	mov	r4, sl
 8009d2e:	2000      	movs	r0, #0
 8009d30:	f04f 0c0a 	mov.w	ip, #10
 8009d34:	4621      	mov	r1, r4
 8009d36:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009d3a:	3b30      	subs	r3, #48	@ 0x30
 8009d3c:	2b09      	cmp	r3, #9
 8009d3e:	d94b      	bls.n	8009dd8 <_svfiprintf_r+0x17c>
 8009d40:	b1b0      	cbz	r0, 8009d70 <_svfiprintf_r+0x114>
 8009d42:	9207      	str	r2, [sp, #28]
 8009d44:	e014      	b.n	8009d70 <_svfiprintf_r+0x114>
 8009d46:	eba0 0308 	sub.w	r3, r0, r8
 8009d4a:	fa09 f303 	lsl.w	r3, r9, r3
 8009d4e:	4313      	orrs	r3, r2
 8009d50:	9304      	str	r3, [sp, #16]
 8009d52:	46a2      	mov	sl, r4
 8009d54:	e7d2      	b.n	8009cfc <_svfiprintf_r+0xa0>
 8009d56:	9b03      	ldr	r3, [sp, #12]
 8009d58:	1d19      	adds	r1, r3, #4
 8009d5a:	681b      	ldr	r3, [r3, #0]
 8009d5c:	9103      	str	r1, [sp, #12]
 8009d5e:	2b00      	cmp	r3, #0
 8009d60:	bfbb      	ittet	lt
 8009d62:	425b      	neglt	r3, r3
 8009d64:	f042 0202 	orrlt.w	r2, r2, #2
 8009d68:	9307      	strge	r3, [sp, #28]
 8009d6a:	9307      	strlt	r3, [sp, #28]
 8009d6c:	bfb8      	it	lt
 8009d6e:	9204      	strlt	r2, [sp, #16]
 8009d70:	7823      	ldrb	r3, [r4, #0]
 8009d72:	2b2e      	cmp	r3, #46	@ 0x2e
 8009d74:	d10a      	bne.n	8009d8c <_svfiprintf_r+0x130>
 8009d76:	7863      	ldrb	r3, [r4, #1]
 8009d78:	2b2a      	cmp	r3, #42	@ 0x2a
 8009d7a:	d132      	bne.n	8009de2 <_svfiprintf_r+0x186>
 8009d7c:	9b03      	ldr	r3, [sp, #12]
 8009d7e:	1d1a      	adds	r2, r3, #4
 8009d80:	681b      	ldr	r3, [r3, #0]
 8009d82:	9203      	str	r2, [sp, #12]
 8009d84:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8009d88:	3402      	adds	r4, #2
 8009d8a:	9305      	str	r3, [sp, #20]
 8009d8c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8009e50 <_svfiprintf_r+0x1f4>
 8009d90:	7821      	ldrb	r1, [r4, #0]
 8009d92:	2203      	movs	r2, #3
 8009d94:	4650      	mov	r0, sl
 8009d96:	f7f6 fa1b 	bl	80001d0 <memchr>
 8009d9a:	b138      	cbz	r0, 8009dac <_svfiprintf_r+0x150>
 8009d9c:	9b04      	ldr	r3, [sp, #16]
 8009d9e:	eba0 000a 	sub.w	r0, r0, sl
 8009da2:	2240      	movs	r2, #64	@ 0x40
 8009da4:	4082      	lsls	r2, r0
 8009da6:	4313      	orrs	r3, r2
 8009da8:	3401      	adds	r4, #1
 8009daa:	9304      	str	r3, [sp, #16]
 8009dac:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009db0:	4824      	ldr	r0, [pc, #144]	@ (8009e44 <_svfiprintf_r+0x1e8>)
 8009db2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8009db6:	2206      	movs	r2, #6
 8009db8:	f7f6 fa0a 	bl	80001d0 <memchr>
 8009dbc:	2800      	cmp	r0, #0
 8009dbe:	d036      	beq.n	8009e2e <_svfiprintf_r+0x1d2>
 8009dc0:	4b21      	ldr	r3, [pc, #132]	@ (8009e48 <_svfiprintf_r+0x1ec>)
 8009dc2:	bb1b      	cbnz	r3, 8009e0c <_svfiprintf_r+0x1b0>
 8009dc4:	9b03      	ldr	r3, [sp, #12]
 8009dc6:	3307      	adds	r3, #7
 8009dc8:	f023 0307 	bic.w	r3, r3, #7
 8009dcc:	3308      	adds	r3, #8
 8009dce:	9303      	str	r3, [sp, #12]
 8009dd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009dd2:	4433      	add	r3, r6
 8009dd4:	9309      	str	r3, [sp, #36]	@ 0x24
 8009dd6:	e76a      	b.n	8009cae <_svfiprintf_r+0x52>
 8009dd8:	fb0c 3202 	mla	r2, ip, r2, r3
 8009ddc:	460c      	mov	r4, r1
 8009dde:	2001      	movs	r0, #1
 8009de0:	e7a8      	b.n	8009d34 <_svfiprintf_r+0xd8>
 8009de2:	2300      	movs	r3, #0
 8009de4:	3401      	adds	r4, #1
 8009de6:	9305      	str	r3, [sp, #20]
 8009de8:	4619      	mov	r1, r3
 8009dea:	f04f 0c0a 	mov.w	ip, #10
 8009dee:	4620      	mov	r0, r4
 8009df0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8009df4:	3a30      	subs	r2, #48	@ 0x30
 8009df6:	2a09      	cmp	r2, #9
 8009df8:	d903      	bls.n	8009e02 <_svfiprintf_r+0x1a6>
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	d0c6      	beq.n	8009d8c <_svfiprintf_r+0x130>
 8009dfe:	9105      	str	r1, [sp, #20]
 8009e00:	e7c4      	b.n	8009d8c <_svfiprintf_r+0x130>
 8009e02:	fb0c 2101 	mla	r1, ip, r1, r2
 8009e06:	4604      	mov	r4, r0
 8009e08:	2301      	movs	r3, #1
 8009e0a:	e7f0      	b.n	8009dee <_svfiprintf_r+0x192>
 8009e0c:	ab03      	add	r3, sp, #12
 8009e0e:	9300      	str	r3, [sp, #0]
 8009e10:	462a      	mov	r2, r5
 8009e12:	4b0e      	ldr	r3, [pc, #56]	@ (8009e4c <_svfiprintf_r+0x1f0>)
 8009e14:	a904      	add	r1, sp, #16
 8009e16:	4638      	mov	r0, r7
 8009e18:	f7fd fe96 	bl	8007b48 <_printf_float>
 8009e1c:	1c42      	adds	r2, r0, #1
 8009e1e:	4606      	mov	r6, r0
 8009e20:	d1d6      	bne.n	8009dd0 <_svfiprintf_r+0x174>
 8009e22:	89ab      	ldrh	r3, [r5, #12]
 8009e24:	065b      	lsls	r3, r3, #25
 8009e26:	f53f af2d 	bmi.w	8009c84 <_svfiprintf_r+0x28>
 8009e2a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009e2c:	e72c      	b.n	8009c88 <_svfiprintf_r+0x2c>
 8009e2e:	ab03      	add	r3, sp, #12
 8009e30:	9300      	str	r3, [sp, #0]
 8009e32:	462a      	mov	r2, r5
 8009e34:	4b05      	ldr	r3, [pc, #20]	@ (8009e4c <_svfiprintf_r+0x1f0>)
 8009e36:	a904      	add	r1, sp, #16
 8009e38:	4638      	mov	r0, r7
 8009e3a:	f7fe f91d 	bl	8008078 <_printf_i>
 8009e3e:	e7ed      	b.n	8009e1c <_svfiprintf_r+0x1c0>
 8009e40:	0800d870 	.word	0x0800d870
 8009e44:	0800d87a 	.word	0x0800d87a
 8009e48:	08007b49 	.word	0x08007b49
 8009e4c:	08009ba5 	.word	0x08009ba5
 8009e50:	0800d876 	.word	0x0800d876

08009e54 <__sflush_r>:
 8009e54:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8009e58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e5c:	0716      	lsls	r6, r2, #28
 8009e5e:	4605      	mov	r5, r0
 8009e60:	460c      	mov	r4, r1
 8009e62:	d454      	bmi.n	8009f0e <__sflush_r+0xba>
 8009e64:	684b      	ldr	r3, [r1, #4]
 8009e66:	2b00      	cmp	r3, #0
 8009e68:	dc02      	bgt.n	8009e70 <__sflush_r+0x1c>
 8009e6a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8009e6c:	2b00      	cmp	r3, #0
 8009e6e:	dd48      	ble.n	8009f02 <__sflush_r+0xae>
 8009e70:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8009e72:	2e00      	cmp	r6, #0
 8009e74:	d045      	beq.n	8009f02 <__sflush_r+0xae>
 8009e76:	2300      	movs	r3, #0
 8009e78:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8009e7c:	682f      	ldr	r7, [r5, #0]
 8009e7e:	6a21      	ldr	r1, [r4, #32]
 8009e80:	602b      	str	r3, [r5, #0]
 8009e82:	d030      	beq.n	8009ee6 <__sflush_r+0x92>
 8009e84:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8009e86:	89a3      	ldrh	r3, [r4, #12]
 8009e88:	0759      	lsls	r1, r3, #29
 8009e8a:	d505      	bpl.n	8009e98 <__sflush_r+0x44>
 8009e8c:	6863      	ldr	r3, [r4, #4]
 8009e8e:	1ad2      	subs	r2, r2, r3
 8009e90:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8009e92:	b10b      	cbz	r3, 8009e98 <__sflush_r+0x44>
 8009e94:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009e96:	1ad2      	subs	r2, r2, r3
 8009e98:	2300      	movs	r3, #0
 8009e9a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8009e9c:	6a21      	ldr	r1, [r4, #32]
 8009e9e:	4628      	mov	r0, r5
 8009ea0:	47b0      	blx	r6
 8009ea2:	1c43      	adds	r3, r0, #1
 8009ea4:	89a3      	ldrh	r3, [r4, #12]
 8009ea6:	d106      	bne.n	8009eb6 <__sflush_r+0x62>
 8009ea8:	6829      	ldr	r1, [r5, #0]
 8009eaa:	291d      	cmp	r1, #29
 8009eac:	d82b      	bhi.n	8009f06 <__sflush_r+0xb2>
 8009eae:	4a2a      	ldr	r2, [pc, #168]	@ (8009f58 <__sflush_r+0x104>)
 8009eb0:	410a      	asrs	r2, r1
 8009eb2:	07d6      	lsls	r6, r2, #31
 8009eb4:	d427      	bmi.n	8009f06 <__sflush_r+0xb2>
 8009eb6:	2200      	movs	r2, #0
 8009eb8:	6062      	str	r2, [r4, #4]
 8009eba:	04d9      	lsls	r1, r3, #19
 8009ebc:	6922      	ldr	r2, [r4, #16]
 8009ebe:	6022      	str	r2, [r4, #0]
 8009ec0:	d504      	bpl.n	8009ecc <__sflush_r+0x78>
 8009ec2:	1c42      	adds	r2, r0, #1
 8009ec4:	d101      	bne.n	8009eca <__sflush_r+0x76>
 8009ec6:	682b      	ldr	r3, [r5, #0]
 8009ec8:	b903      	cbnz	r3, 8009ecc <__sflush_r+0x78>
 8009eca:	6560      	str	r0, [r4, #84]	@ 0x54
 8009ecc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009ece:	602f      	str	r7, [r5, #0]
 8009ed0:	b1b9      	cbz	r1, 8009f02 <__sflush_r+0xae>
 8009ed2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8009ed6:	4299      	cmp	r1, r3
 8009ed8:	d002      	beq.n	8009ee0 <__sflush_r+0x8c>
 8009eda:	4628      	mov	r0, r5
 8009edc:	f7ff f9e0 	bl	80092a0 <_free_r>
 8009ee0:	2300      	movs	r3, #0
 8009ee2:	6363      	str	r3, [r4, #52]	@ 0x34
 8009ee4:	e00d      	b.n	8009f02 <__sflush_r+0xae>
 8009ee6:	2301      	movs	r3, #1
 8009ee8:	4628      	mov	r0, r5
 8009eea:	47b0      	blx	r6
 8009eec:	4602      	mov	r2, r0
 8009eee:	1c50      	adds	r0, r2, #1
 8009ef0:	d1c9      	bne.n	8009e86 <__sflush_r+0x32>
 8009ef2:	682b      	ldr	r3, [r5, #0]
 8009ef4:	2b00      	cmp	r3, #0
 8009ef6:	d0c6      	beq.n	8009e86 <__sflush_r+0x32>
 8009ef8:	2b1d      	cmp	r3, #29
 8009efa:	d001      	beq.n	8009f00 <__sflush_r+0xac>
 8009efc:	2b16      	cmp	r3, #22
 8009efe:	d11e      	bne.n	8009f3e <__sflush_r+0xea>
 8009f00:	602f      	str	r7, [r5, #0]
 8009f02:	2000      	movs	r0, #0
 8009f04:	e022      	b.n	8009f4c <__sflush_r+0xf8>
 8009f06:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009f0a:	b21b      	sxth	r3, r3
 8009f0c:	e01b      	b.n	8009f46 <__sflush_r+0xf2>
 8009f0e:	690f      	ldr	r7, [r1, #16]
 8009f10:	2f00      	cmp	r7, #0
 8009f12:	d0f6      	beq.n	8009f02 <__sflush_r+0xae>
 8009f14:	0793      	lsls	r3, r2, #30
 8009f16:	680e      	ldr	r6, [r1, #0]
 8009f18:	bf08      	it	eq
 8009f1a:	694b      	ldreq	r3, [r1, #20]
 8009f1c:	600f      	str	r7, [r1, #0]
 8009f1e:	bf18      	it	ne
 8009f20:	2300      	movne	r3, #0
 8009f22:	eba6 0807 	sub.w	r8, r6, r7
 8009f26:	608b      	str	r3, [r1, #8]
 8009f28:	f1b8 0f00 	cmp.w	r8, #0
 8009f2c:	dde9      	ble.n	8009f02 <__sflush_r+0xae>
 8009f2e:	6a21      	ldr	r1, [r4, #32]
 8009f30:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8009f32:	4643      	mov	r3, r8
 8009f34:	463a      	mov	r2, r7
 8009f36:	4628      	mov	r0, r5
 8009f38:	47b0      	blx	r6
 8009f3a:	2800      	cmp	r0, #0
 8009f3c:	dc08      	bgt.n	8009f50 <__sflush_r+0xfc>
 8009f3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009f42:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009f46:	81a3      	strh	r3, [r4, #12]
 8009f48:	f04f 30ff 	mov.w	r0, #4294967295
 8009f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f50:	4407      	add	r7, r0
 8009f52:	eba8 0800 	sub.w	r8, r8, r0
 8009f56:	e7e7      	b.n	8009f28 <__sflush_r+0xd4>
 8009f58:	dfbffffe 	.word	0xdfbffffe

08009f5c <_fflush_r>:
 8009f5c:	b538      	push	{r3, r4, r5, lr}
 8009f5e:	690b      	ldr	r3, [r1, #16]
 8009f60:	4605      	mov	r5, r0
 8009f62:	460c      	mov	r4, r1
 8009f64:	b913      	cbnz	r3, 8009f6c <_fflush_r+0x10>
 8009f66:	2500      	movs	r5, #0
 8009f68:	4628      	mov	r0, r5
 8009f6a:	bd38      	pop	{r3, r4, r5, pc}
 8009f6c:	b118      	cbz	r0, 8009f76 <_fflush_r+0x1a>
 8009f6e:	6a03      	ldr	r3, [r0, #32]
 8009f70:	b90b      	cbnz	r3, 8009f76 <_fflush_r+0x1a>
 8009f72:	f7fe fa2d 	bl	80083d0 <__sinit>
 8009f76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009f7a:	2b00      	cmp	r3, #0
 8009f7c:	d0f3      	beq.n	8009f66 <_fflush_r+0xa>
 8009f7e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8009f80:	07d0      	lsls	r0, r2, #31
 8009f82:	d404      	bmi.n	8009f8e <_fflush_r+0x32>
 8009f84:	0599      	lsls	r1, r3, #22
 8009f86:	d402      	bmi.n	8009f8e <_fflush_r+0x32>
 8009f88:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009f8a:	f7fe fb38 	bl	80085fe <__retarget_lock_acquire_recursive>
 8009f8e:	4628      	mov	r0, r5
 8009f90:	4621      	mov	r1, r4
 8009f92:	f7ff ff5f 	bl	8009e54 <__sflush_r>
 8009f96:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8009f98:	07da      	lsls	r2, r3, #31
 8009f9a:	4605      	mov	r5, r0
 8009f9c:	d4e4      	bmi.n	8009f68 <_fflush_r+0xc>
 8009f9e:	89a3      	ldrh	r3, [r4, #12]
 8009fa0:	059b      	lsls	r3, r3, #22
 8009fa2:	d4e1      	bmi.n	8009f68 <_fflush_r+0xc>
 8009fa4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009fa6:	f7fe fb2b 	bl	8008600 <__retarget_lock_release_recursive>
 8009faa:	e7dd      	b.n	8009f68 <_fflush_r+0xc>

08009fac <memmove>:
 8009fac:	4288      	cmp	r0, r1
 8009fae:	b510      	push	{r4, lr}
 8009fb0:	eb01 0402 	add.w	r4, r1, r2
 8009fb4:	d902      	bls.n	8009fbc <memmove+0x10>
 8009fb6:	4284      	cmp	r4, r0
 8009fb8:	4623      	mov	r3, r4
 8009fba:	d807      	bhi.n	8009fcc <memmove+0x20>
 8009fbc:	1e43      	subs	r3, r0, #1
 8009fbe:	42a1      	cmp	r1, r4
 8009fc0:	d008      	beq.n	8009fd4 <memmove+0x28>
 8009fc2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009fc6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8009fca:	e7f8      	b.n	8009fbe <memmove+0x12>
 8009fcc:	4402      	add	r2, r0
 8009fce:	4601      	mov	r1, r0
 8009fd0:	428a      	cmp	r2, r1
 8009fd2:	d100      	bne.n	8009fd6 <memmove+0x2a>
 8009fd4:	bd10      	pop	{r4, pc}
 8009fd6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8009fda:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8009fde:	e7f7      	b.n	8009fd0 <memmove+0x24>

08009fe0 <_sbrk_r>:
 8009fe0:	b538      	push	{r3, r4, r5, lr}
 8009fe2:	4d06      	ldr	r5, [pc, #24]	@ (8009ffc <_sbrk_r+0x1c>)
 8009fe4:	2300      	movs	r3, #0
 8009fe6:	4604      	mov	r4, r0
 8009fe8:	4608      	mov	r0, r1
 8009fea:	602b      	str	r3, [r5, #0]
 8009fec:	f7f8 fd48 	bl	8002a80 <_sbrk>
 8009ff0:	1c43      	adds	r3, r0, #1
 8009ff2:	d102      	bne.n	8009ffa <_sbrk_r+0x1a>
 8009ff4:	682b      	ldr	r3, [r5, #0]
 8009ff6:	b103      	cbz	r3, 8009ffa <_sbrk_r+0x1a>
 8009ff8:	6023      	str	r3, [r4, #0]
 8009ffa:	bd38      	pop	{r3, r4, r5, pc}
 8009ffc:	20000784 	.word	0x20000784

0800a000 <memcpy>:
 800a000:	440a      	add	r2, r1
 800a002:	4291      	cmp	r1, r2
 800a004:	f100 33ff 	add.w	r3, r0, #4294967295
 800a008:	d100      	bne.n	800a00c <memcpy+0xc>
 800a00a:	4770      	bx	lr
 800a00c:	b510      	push	{r4, lr}
 800a00e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a012:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a016:	4291      	cmp	r1, r2
 800a018:	d1f9      	bne.n	800a00e <memcpy+0xe>
 800a01a:	bd10      	pop	{r4, pc}

0800a01c <__assert_func>:
 800a01c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a01e:	4614      	mov	r4, r2
 800a020:	461a      	mov	r2, r3
 800a022:	4b09      	ldr	r3, [pc, #36]	@ (800a048 <__assert_func+0x2c>)
 800a024:	681b      	ldr	r3, [r3, #0]
 800a026:	4605      	mov	r5, r0
 800a028:	68d8      	ldr	r0, [r3, #12]
 800a02a:	b954      	cbnz	r4, 800a042 <__assert_func+0x26>
 800a02c:	4b07      	ldr	r3, [pc, #28]	@ (800a04c <__assert_func+0x30>)
 800a02e:	461c      	mov	r4, r3
 800a030:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a034:	9100      	str	r1, [sp, #0]
 800a036:	462b      	mov	r3, r5
 800a038:	4905      	ldr	r1, [pc, #20]	@ (800a050 <__assert_func+0x34>)
 800a03a:	f000 f86f 	bl	800a11c <fiprintf>
 800a03e:	f000 f87f 	bl	800a140 <abort>
 800a042:	4b04      	ldr	r3, [pc, #16]	@ (800a054 <__assert_func+0x38>)
 800a044:	e7f4      	b.n	800a030 <__assert_func+0x14>
 800a046:	bf00      	nop
 800a048:	2000002c 	.word	0x2000002c
 800a04c:	0800d8c6 	.word	0x0800d8c6
 800a050:	0800d898 	.word	0x0800d898
 800a054:	0800d88b 	.word	0x0800d88b

0800a058 <_calloc_r>:
 800a058:	b570      	push	{r4, r5, r6, lr}
 800a05a:	fba1 5402 	umull	r5, r4, r1, r2
 800a05e:	b93c      	cbnz	r4, 800a070 <_calloc_r+0x18>
 800a060:	4629      	mov	r1, r5
 800a062:	f7ff f991 	bl	8009388 <_malloc_r>
 800a066:	4606      	mov	r6, r0
 800a068:	b928      	cbnz	r0, 800a076 <_calloc_r+0x1e>
 800a06a:	2600      	movs	r6, #0
 800a06c:	4630      	mov	r0, r6
 800a06e:	bd70      	pop	{r4, r5, r6, pc}
 800a070:	220c      	movs	r2, #12
 800a072:	6002      	str	r2, [r0, #0]
 800a074:	e7f9      	b.n	800a06a <_calloc_r+0x12>
 800a076:	462a      	mov	r2, r5
 800a078:	4621      	mov	r1, r4
 800a07a:	f7fe fa42 	bl	8008502 <memset>
 800a07e:	e7f5      	b.n	800a06c <_calloc_r+0x14>

0800a080 <__ascii_mbtowc>:
 800a080:	b082      	sub	sp, #8
 800a082:	b901      	cbnz	r1, 800a086 <__ascii_mbtowc+0x6>
 800a084:	a901      	add	r1, sp, #4
 800a086:	b142      	cbz	r2, 800a09a <__ascii_mbtowc+0x1a>
 800a088:	b14b      	cbz	r3, 800a09e <__ascii_mbtowc+0x1e>
 800a08a:	7813      	ldrb	r3, [r2, #0]
 800a08c:	600b      	str	r3, [r1, #0]
 800a08e:	7812      	ldrb	r2, [r2, #0]
 800a090:	1e10      	subs	r0, r2, #0
 800a092:	bf18      	it	ne
 800a094:	2001      	movne	r0, #1
 800a096:	b002      	add	sp, #8
 800a098:	4770      	bx	lr
 800a09a:	4610      	mov	r0, r2
 800a09c:	e7fb      	b.n	800a096 <__ascii_mbtowc+0x16>
 800a09e:	f06f 0001 	mvn.w	r0, #1
 800a0a2:	e7f8      	b.n	800a096 <__ascii_mbtowc+0x16>

0800a0a4 <_realloc_r>:
 800a0a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0a8:	4680      	mov	r8, r0
 800a0aa:	4615      	mov	r5, r2
 800a0ac:	460c      	mov	r4, r1
 800a0ae:	b921      	cbnz	r1, 800a0ba <_realloc_r+0x16>
 800a0b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a0b4:	4611      	mov	r1, r2
 800a0b6:	f7ff b967 	b.w	8009388 <_malloc_r>
 800a0ba:	b92a      	cbnz	r2, 800a0c8 <_realloc_r+0x24>
 800a0bc:	f7ff f8f0 	bl	80092a0 <_free_r>
 800a0c0:	2400      	movs	r4, #0
 800a0c2:	4620      	mov	r0, r4
 800a0c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a0c8:	f000 f841 	bl	800a14e <_malloc_usable_size_r>
 800a0cc:	4285      	cmp	r5, r0
 800a0ce:	4606      	mov	r6, r0
 800a0d0:	d802      	bhi.n	800a0d8 <_realloc_r+0x34>
 800a0d2:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800a0d6:	d8f4      	bhi.n	800a0c2 <_realloc_r+0x1e>
 800a0d8:	4629      	mov	r1, r5
 800a0da:	4640      	mov	r0, r8
 800a0dc:	f7ff f954 	bl	8009388 <_malloc_r>
 800a0e0:	4607      	mov	r7, r0
 800a0e2:	2800      	cmp	r0, #0
 800a0e4:	d0ec      	beq.n	800a0c0 <_realloc_r+0x1c>
 800a0e6:	42b5      	cmp	r5, r6
 800a0e8:	462a      	mov	r2, r5
 800a0ea:	4621      	mov	r1, r4
 800a0ec:	bf28      	it	cs
 800a0ee:	4632      	movcs	r2, r6
 800a0f0:	f7ff ff86 	bl	800a000 <memcpy>
 800a0f4:	4621      	mov	r1, r4
 800a0f6:	4640      	mov	r0, r8
 800a0f8:	f7ff f8d2 	bl	80092a0 <_free_r>
 800a0fc:	463c      	mov	r4, r7
 800a0fe:	e7e0      	b.n	800a0c2 <_realloc_r+0x1e>

0800a100 <__ascii_wctomb>:
 800a100:	4603      	mov	r3, r0
 800a102:	4608      	mov	r0, r1
 800a104:	b141      	cbz	r1, 800a118 <__ascii_wctomb+0x18>
 800a106:	2aff      	cmp	r2, #255	@ 0xff
 800a108:	d904      	bls.n	800a114 <__ascii_wctomb+0x14>
 800a10a:	228a      	movs	r2, #138	@ 0x8a
 800a10c:	601a      	str	r2, [r3, #0]
 800a10e:	f04f 30ff 	mov.w	r0, #4294967295
 800a112:	4770      	bx	lr
 800a114:	700a      	strb	r2, [r1, #0]
 800a116:	2001      	movs	r0, #1
 800a118:	4770      	bx	lr
	...

0800a11c <fiprintf>:
 800a11c:	b40e      	push	{r1, r2, r3}
 800a11e:	b503      	push	{r0, r1, lr}
 800a120:	4601      	mov	r1, r0
 800a122:	ab03      	add	r3, sp, #12
 800a124:	4805      	ldr	r0, [pc, #20]	@ (800a13c <fiprintf+0x20>)
 800a126:	f853 2b04 	ldr.w	r2, [r3], #4
 800a12a:	6800      	ldr	r0, [r0, #0]
 800a12c:	9301      	str	r3, [sp, #4]
 800a12e:	f000 f83f 	bl	800a1b0 <_vfiprintf_r>
 800a132:	b002      	add	sp, #8
 800a134:	f85d eb04 	ldr.w	lr, [sp], #4
 800a138:	b003      	add	sp, #12
 800a13a:	4770      	bx	lr
 800a13c:	2000002c 	.word	0x2000002c

0800a140 <abort>:
 800a140:	b508      	push	{r3, lr}
 800a142:	2006      	movs	r0, #6
 800a144:	f000 fa08 	bl	800a558 <raise>
 800a148:	2001      	movs	r0, #1
 800a14a:	f7f8 fc21 	bl	8002990 <_exit>

0800a14e <_malloc_usable_size_r>:
 800a14e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800a152:	1f18      	subs	r0, r3, #4
 800a154:	2b00      	cmp	r3, #0
 800a156:	bfbc      	itt	lt
 800a158:	580b      	ldrlt	r3, [r1, r0]
 800a15a:	18c0      	addlt	r0, r0, r3
 800a15c:	4770      	bx	lr

0800a15e <__sfputc_r>:
 800a15e:	6893      	ldr	r3, [r2, #8]
 800a160:	3b01      	subs	r3, #1
 800a162:	2b00      	cmp	r3, #0
 800a164:	b410      	push	{r4}
 800a166:	6093      	str	r3, [r2, #8]
 800a168:	da08      	bge.n	800a17c <__sfputc_r+0x1e>
 800a16a:	6994      	ldr	r4, [r2, #24]
 800a16c:	42a3      	cmp	r3, r4
 800a16e:	db01      	blt.n	800a174 <__sfputc_r+0x16>
 800a170:	290a      	cmp	r1, #10
 800a172:	d103      	bne.n	800a17c <__sfputc_r+0x1e>
 800a174:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a178:	f000 b932 	b.w	800a3e0 <__swbuf_r>
 800a17c:	6813      	ldr	r3, [r2, #0]
 800a17e:	1c58      	adds	r0, r3, #1
 800a180:	6010      	str	r0, [r2, #0]
 800a182:	7019      	strb	r1, [r3, #0]
 800a184:	4608      	mov	r0, r1
 800a186:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a18a:	4770      	bx	lr

0800a18c <__sfputs_r>:
 800a18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a18e:	4606      	mov	r6, r0
 800a190:	460f      	mov	r7, r1
 800a192:	4614      	mov	r4, r2
 800a194:	18d5      	adds	r5, r2, r3
 800a196:	42ac      	cmp	r4, r5
 800a198:	d101      	bne.n	800a19e <__sfputs_r+0x12>
 800a19a:	2000      	movs	r0, #0
 800a19c:	e007      	b.n	800a1ae <__sfputs_r+0x22>
 800a19e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a1a2:	463a      	mov	r2, r7
 800a1a4:	4630      	mov	r0, r6
 800a1a6:	f7ff ffda 	bl	800a15e <__sfputc_r>
 800a1aa:	1c43      	adds	r3, r0, #1
 800a1ac:	d1f3      	bne.n	800a196 <__sfputs_r+0xa>
 800a1ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a1b0 <_vfiprintf_r>:
 800a1b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1b4:	460d      	mov	r5, r1
 800a1b6:	b09d      	sub	sp, #116	@ 0x74
 800a1b8:	4614      	mov	r4, r2
 800a1ba:	4698      	mov	r8, r3
 800a1bc:	4606      	mov	r6, r0
 800a1be:	b118      	cbz	r0, 800a1c8 <_vfiprintf_r+0x18>
 800a1c0:	6a03      	ldr	r3, [r0, #32]
 800a1c2:	b90b      	cbnz	r3, 800a1c8 <_vfiprintf_r+0x18>
 800a1c4:	f7fe f904 	bl	80083d0 <__sinit>
 800a1c8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a1ca:	07d9      	lsls	r1, r3, #31
 800a1cc:	d405      	bmi.n	800a1da <_vfiprintf_r+0x2a>
 800a1ce:	89ab      	ldrh	r3, [r5, #12]
 800a1d0:	059a      	lsls	r2, r3, #22
 800a1d2:	d402      	bmi.n	800a1da <_vfiprintf_r+0x2a>
 800a1d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a1d6:	f7fe fa12 	bl	80085fe <__retarget_lock_acquire_recursive>
 800a1da:	89ab      	ldrh	r3, [r5, #12]
 800a1dc:	071b      	lsls	r3, r3, #28
 800a1de:	d501      	bpl.n	800a1e4 <_vfiprintf_r+0x34>
 800a1e0:	692b      	ldr	r3, [r5, #16]
 800a1e2:	b99b      	cbnz	r3, 800a20c <_vfiprintf_r+0x5c>
 800a1e4:	4629      	mov	r1, r5
 800a1e6:	4630      	mov	r0, r6
 800a1e8:	f000 f938 	bl	800a45c <__swsetup_r>
 800a1ec:	b170      	cbz	r0, 800a20c <_vfiprintf_r+0x5c>
 800a1ee:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a1f0:	07dc      	lsls	r4, r3, #31
 800a1f2:	d504      	bpl.n	800a1fe <_vfiprintf_r+0x4e>
 800a1f4:	f04f 30ff 	mov.w	r0, #4294967295
 800a1f8:	b01d      	add	sp, #116	@ 0x74
 800a1fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1fe:	89ab      	ldrh	r3, [r5, #12]
 800a200:	0598      	lsls	r0, r3, #22
 800a202:	d4f7      	bmi.n	800a1f4 <_vfiprintf_r+0x44>
 800a204:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a206:	f7fe f9fb 	bl	8008600 <__retarget_lock_release_recursive>
 800a20a:	e7f3      	b.n	800a1f4 <_vfiprintf_r+0x44>
 800a20c:	2300      	movs	r3, #0
 800a20e:	9309      	str	r3, [sp, #36]	@ 0x24
 800a210:	2320      	movs	r3, #32
 800a212:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800a216:	f8cd 800c 	str.w	r8, [sp, #12]
 800a21a:	2330      	movs	r3, #48	@ 0x30
 800a21c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800a3cc <_vfiprintf_r+0x21c>
 800a220:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800a224:	f04f 0901 	mov.w	r9, #1
 800a228:	4623      	mov	r3, r4
 800a22a:	469a      	mov	sl, r3
 800a22c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a230:	b10a      	cbz	r2, 800a236 <_vfiprintf_r+0x86>
 800a232:	2a25      	cmp	r2, #37	@ 0x25
 800a234:	d1f9      	bne.n	800a22a <_vfiprintf_r+0x7a>
 800a236:	ebba 0b04 	subs.w	fp, sl, r4
 800a23a:	d00b      	beq.n	800a254 <_vfiprintf_r+0xa4>
 800a23c:	465b      	mov	r3, fp
 800a23e:	4622      	mov	r2, r4
 800a240:	4629      	mov	r1, r5
 800a242:	4630      	mov	r0, r6
 800a244:	f7ff ffa2 	bl	800a18c <__sfputs_r>
 800a248:	3001      	adds	r0, #1
 800a24a:	f000 80a7 	beq.w	800a39c <_vfiprintf_r+0x1ec>
 800a24e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a250:	445a      	add	r2, fp
 800a252:	9209      	str	r2, [sp, #36]	@ 0x24
 800a254:	f89a 3000 	ldrb.w	r3, [sl]
 800a258:	2b00      	cmp	r3, #0
 800a25a:	f000 809f 	beq.w	800a39c <_vfiprintf_r+0x1ec>
 800a25e:	2300      	movs	r3, #0
 800a260:	f04f 32ff 	mov.w	r2, #4294967295
 800a264:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800a268:	f10a 0a01 	add.w	sl, sl, #1
 800a26c:	9304      	str	r3, [sp, #16]
 800a26e:	9307      	str	r3, [sp, #28]
 800a270:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800a274:	931a      	str	r3, [sp, #104]	@ 0x68
 800a276:	4654      	mov	r4, sl
 800a278:	2205      	movs	r2, #5
 800a27a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a27e:	4853      	ldr	r0, [pc, #332]	@ (800a3cc <_vfiprintf_r+0x21c>)
 800a280:	f7f5 ffa6 	bl	80001d0 <memchr>
 800a284:	9a04      	ldr	r2, [sp, #16]
 800a286:	b9d8      	cbnz	r0, 800a2c0 <_vfiprintf_r+0x110>
 800a288:	06d1      	lsls	r1, r2, #27
 800a28a:	bf44      	itt	mi
 800a28c:	2320      	movmi	r3, #32
 800a28e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a292:	0713      	lsls	r3, r2, #28
 800a294:	bf44      	itt	mi
 800a296:	232b      	movmi	r3, #43	@ 0x2b
 800a298:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800a29c:	f89a 3000 	ldrb.w	r3, [sl]
 800a2a0:	2b2a      	cmp	r3, #42	@ 0x2a
 800a2a2:	d015      	beq.n	800a2d0 <_vfiprintf_r+0x120>
 800a2a4:	9a07      	ldr	r2, [sp, #28]
 800a2a6:	4654      	mov	r4, sl
 800a2a8:	2000      	movs	r0, #0
 800a2aa:	f04f 0c0a 	mov.w	ip, #10
 800a2ae:	4621      	mov	r1, r4
 800a2b0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a2b4:	3b30      	subs	r3, #48	@ 0x30
 800a2b6:	2b09      	cmp	r3, #9
 800a2b8:	d94b      	bls.n	800a352 <_vfiprintf_r+0x1a2>
 800a2ba:	b1b0      	cbz	r0, 800a2ea <_vfiprintf_r+0x13a>
 800a2bc:	9207      	str	r2, [sp, #28]
 800a2be:	e014      	b.n	800a2ea <_vfiprintf_r+0x13a>
 800a2c0:	eba0 0308 	sub.w	r3, r0, r8
 800a2c4:	fa09 f303 	lsl.w	r3, r9, r3
 800a2c8:	4313      	orrs	r3, r2
 800a2ca:	9304      	str	r3, [sp, #16]
 800a2cc:	46a2      	mov	sl, r4
 800a2ce:	e7d2      	b.n	800a276 <_vfiprintf_r+0xc6>
 800a2d0:	9b03      	ldr	r3, [sp, #12]
 800a2d2:	1d19      	adds	r1, r3, #4
 800a2d4:	681b      	ldr	r3, [r3, #0]
 800a2d6:	9103      	str	r1, [sp, #12]
 800a2d8:	2b00      	cmp	r3, #0
 800a2da:	bfbb      	ittet	lt
 800a2dc:	425b      	neglt	r3, r3
 800a2de:	f042 0202 	orrlt.w	r2, r2, #2
 800a2e2:	9307      	strge	r3, [sp, #28]
 800a2e4:	9307      	strlt	r3, [sp, #28]
 800a2e6:	bfb8      	it	lt
 800a2e8:	9204      	strlt	r2, [sp, #16]
 800a2ea:	7823      	ldrb	r3, [r4, #0]
 800a2ec:	2b2e      	cmp	r3, #46	@ 0x2e
 800a2ee:	d10a      	bne.n	800a306 <_vfiprintf_r+0x156>
 800a2f0:	7863      	ldrb	r3, [r4, #1]
 800a2f2:	2b2a      	cmp	r3, #42	@ 0x2a
 800a2f4:	d132      	bne.n	800a35c <_vfiprintf_r+0x1ac>
 800a2f6:	9b03      	ldr	r3, [sp, #12]
 800a2f8:	1d1a      	adds	r2, r3, #4
 800a2fa:	681b      	ldr	r3, [r3, #0]
 800a2fc:	9203      	str	r2, [sp, #12]
 800a2fe:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800a302:	3402      	adds	r4, #2
 800a304:	9305      	str	r3, [sp, #20]
 800a306:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800a3dc <_vfiprintf_r+0x22c>
 800a30a:	7821      	ldrb	r1, [r4, #0]
 800a30c:	2203      	movs	r2, #3
 800a30e:	4650      	mov	r0, sl
 800a310:	f7f5 ff5e 	bl	80001d0 <memchr>
 800a314:	b138      	cbz	r0, 800a326 <_vfiprintf_r+0x176>
 800a316:	9b04      	ldr	r3, [sp, #16]
 800a318:	eba0 000a 	sub.w	r0, r0, sl
 800a31c:	2240      	movs	r2, #64	@ 0x40
 800a31e:	4082      	lsls	r2, r0
 800a320:	4313      	orrs	r3, r2
 800a322:	3401      	adds	r4, #1
 800a324:	9304      	str	r3, [sp, #16]
 800a326:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a32a:	4829      	ldr	r0, [pc, #164]	@ (800a3d0 <_vfiprintf_r+0x220>)
 800a32c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800a330:	2206      	movs	r2, #6
 800a332:	f7f5 ff4d 	bl	80001d0 <memchr>
 800a336:	2800      	cmp	r0, #0
 800a338:	d03f      	beq.n	800a3ba <_vfiprintf_r+0x20a>
 800a33a:	4b26      	ldr	r3, [pc, #152]	@ (800a3d4 <_vfiprintf_r+0x224>)
 800a33c:	bb1b      	cbnz	r3, 800a386 <_vfiprintf_r+0x1d6>
 800a33e:	9b03      	ldr	r3, [sp, #12]
 800a340:	3307      	adds	r3, #7
 800a342:	f023 0307 	bic.w	r3, r3, #7
 800a346:	3308      	adds	r3, #8
 800a348:	9303      	str	r3, [sp, #12]
 800a34a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a34c:	443b      	add	r3, r7
 800a34e:	9309      	str	r3, [sp, #36]	@ 0x24
 800a350:	e76a      	b.n	800a228 <_vfiprintf_r+0x78>
 800a352:	fb0c 3202 	mla	r2, ip, r2, r3
 800a356:	460c      	mov	r4, r1
 800a358:	2001      	movs	r0, #1
 800a35a:	e7a8      	b.n	800a2ae <_vfiprintf_r+0xfe>
 800a35c:	2300      	movs	r3, #0
 800a35e:	3401      	adds	r4, #1
 800a360:	9305      	str	r3, [sp, #20]
 800a362:	4619      	mov	r1, r3
 800a364:	f04f 0c0a 	mov.w	ip, #10
 800a368:	4620      	mov	r0, r4
 800a36a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a36e:	3a30      	subs	r2, #48	@ 0x30
 800a370:	2a09      	cmp	r2, #9
 800a372:	d903      	bls.n	800a37c <_vfiprintf_r+0x1cc>
 800a374:	2b00      	cmp	r3, #0
 800a376:	d0c6      	beq.n	800a306 <_vfiprintf_r+0x156>
 800a378:	9105      	str	r1, [sp, #20]
 800a37a:	e7c4      	b.n	800a306 <_vfiprintf_r+0x156>
 800a37c:	fb0c 2101 	mla	r1, ip, r1, r2
 800a380:	4604      	mov	r4, r0
 800a382:	2301      	movs	r3, #1
 800a384:	e7f0      	b.n	800a368 <_vfiprintf_r+0x1b8>
 800a386:	ab03      	add	r3, sp, #12
 800a388:	9300      	str	r3, [sp, #0]
 800a38a:	462a      	mov	r2, r5
 800a38c:	4b12      	ldr	r3, [pc, #72]	@ (800a3d8 <_vfiprintf_r+0x228>)
 800a38e:	a904      	add	r1, sp, #16
 800a390:	4630      	mov	r0, r6
 800a392:	f7fd fbd9 	bl	8007b48 <_printf_float>
 800a396:	4607      	mov	r7, r0
 800a398:	1c78      	adds	r0, r7, #1
 800a39a:	d1d6      	bne.n	800a34a <_vfiprintf_r+0x19a>
 800a39c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800a39e:	07d9      	lsls	r1, r3, #31
 800a3a0:	d405      	bmi.n	800a3ae <_vfiprintf_r+0x1fe>
 800a3a2:	89ab      	ldrh	r3, [r5, #12]
 800a3a4:	059a      	lsls	r2, r3, #22
 800a3a6:	d402      	bmi.n	800a3ae <_vfiprintf_r+0x1fe>
 800a3a8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800a3aa:	f7fe f929 	bl	8008600 <__retarget_lock_release_recursive>
 800a3ae:	89ab      	ldrh	r3, [r5, #12]
 800a3b0:	065b      	lsls	r3, r3, #25
 800a3b2:	f53f af1f 	bmi.w	800a1f4 <_vfiprintf_r+0x44>
 800a3b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800a3b8:	e71e      	b.n	800a1f8 <_vfiprintf_r+0x48>
 800a3ba:	ab03      	add	r3, sp, #12
 800a3bc:	9300      	str	r3, [sp, #0]
 800a3be:	462a      	mov	r2, r5
 800a3c0:	4b05      	ldr	r3, [pc, #20]	@ (800a3d8 <_vfiprintf_r+0x228>)
 800a3c2:	a904      	add	r1, sp, #16
 800a3c4:	4630      	mov	r0, r6
 800a3c6:	f7fd fe57 	bl	8008078 <_printf_i>
 800a3ca:	e7e4      	b.n	800a396 <_vfiprintf_r+0x1e6>
 800a3cc:	0800d870 	.word	0x0800d870
 800a3d0:	0800d87a 	.word	0x0800d87a
 800a3d4:	08007b49 	.word	0x08007b49
 800a3d8:	0800a18d 	.word	0x0800a18d
 800a3dc:	0800d876 	.word	0x0800d876

0800a3e0 <__swbuf_r>:
 800a3e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3e2:	460e      	mov	r6, r1
 800a3e4:	4614      	mov	r4, r2
 800a3e6:	4605      	mov	r5, r0
 800a3e8:	b118      	cbz	r0, 800a3f2 <__swbuf_r+0x12>
 800a3ea:	6a03      	ldr	r3, [r0, #32]
 800a3ec:	b90b      	cbnz	r3, 800a3f2 <__swbuf_r+0x12>
 800a3ee:	f7fd ffef 	bl	80083d0 <__sinit>
 800a3f2:	69a3      	ldr	r3, [r4, #24]
 800a3f4:	60a3      	str	r3, [r4, #8]
 800a3f6:	89a3      	ldrh	r3, [r4, #12]
 800a3f8:	071a      	lsls	r2, r3, #28
 800a3fa:	d501      	bpl.n	800a400 <__swbuf_r+0x20>
 800a3fc:	6923      	ldr	r3, [r4, #16]
 800a3fe:	b943      	cbnz	r3, 800a412 <__swbuf_r+0x32>
 800a400:	4621      	mov	r1, r4
 800a402:	4628      	mov	r0, r5
 800a404:	f000 f82a 	bl	800a45c <__swsetup_r>
 800a408:	b118      	cbz	r0, 800a412 <__swbuf_r+0x32>
 800a40a:	f04f 37ff 	mov.w	r7, #4294967295
 800a40e:	4638      	mov	r0, r7
 800a410:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a412:	6823      	ldr	r3, [r4, #0]
 800a414:	6922      	ldr	r2, [r4, #16]
 800a416:	1a98      	subs	r0, r3, r2
 800a418:	6963      	ldr	r3, [r4, #20]
 800a41a:	b2f6      	uxtb	r6, r6
 800a41c:	4283      	cmp	r3, r0
 800a41e:	4637      	mov	r7, r6
 800a420:	dc05      	bgt.n	800a42e <__swbuf_r+0x4e>
 800a422:	4621      	mov	r1, r4
 800a424:	4628      	mov	r0, r5
 800a426:	f7ff fd99 	bl	8009f5c <_fflush_r>
 800a42a:	2800      	cmp	r0, #0
 800a42c:	d1ed      	bne.n	800a40a <__swbuf_r+0x2a>
 800a42e:	68a3      	ldr	r3, [r4, #8]
 800a430:	3b01      	subs	r3, #1
 800a432:	60a3      	str	r3, [r4, #8]
 800a434:	6823      	ldr	r3, [r4, #0]
 800a436:	1c5a      	adds	r2, r3, #1
 800a438:	6022      	str	r2, [r4, #0]
 800a43a:	701e      	strb	r6, [r3, #0]
 800a43c:	6962      	ldr	r2, [r4, #20]
 800a43e:	1c43      	adds	r3, r0, #1
 800a440:	429a      	cmp	r2, r3
 800a442:	d004      	beq.n	800a44e <__swbuf_r+0x6e>
 800a444:	89a3      	ldrh	r3, [r4, #12]
 800a446:	07db      	lsls	r3, r3, #31
 800a448:	d5e1      	bpl.n	800a40e <__swbuf_r+0x2e>
 800a44a:	2e0a      	cmp	r6, #10
 800a44c:	d1df      	bne.n	800a40e <__swbuf_r+0x2e>
 800a44e:	4621      	mov	r1, r4
 800a450:	4628      	mov	r0, r5
 800a452:	f7ff fd83 	bl	8009f5c <_fflush_r>
 800a456:	2800      	cmp	r0, #0
 800a458:	d0d9      	beq.n	800a40e <__swbuf_r+0x2e>
 800a45a:	e7d6      	b.n	800a40a <__swbuf_r+0x2a>

0800a45c <__swsetup_r>:
 800a45c:	b538      	push	{r3, r4, r5, lr}
 800a45e:	4b29      	ldr	r3, [pc, #164]	@ (800a504 <__swsetup_r+0xa8>)
 800a460:	4605      	mov	r5, r0
 800a462:	6818      	ldr	r0, [r3, #0]
 800a464:	460c      	mov	r4, r1
 800a466:	b118      	cbz	r0, 800a470 <__swsetup_r+0x14>
 800a468:	6a03      	ldr	r3, [r0, #32]
 800a46a:	b90b      	cbnz	r3, 800a470 <__swsetup_r+0x14>
 800a46c:	f7fd ffb0 	bl	80083d0 <__sinit>
 800a470:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a474:	0719      	lsls	r1, r3, #28
 800a476:	d422      	bmi.n	800a4be <__swsetup_r+0x62>
 800a478:	06da      	lsls	r2, r3, #27
 800a47a:	d407      	bmi.n	800a48c <__swsetup_r+0x30>
 800a47c:	2209      	movs	r2, #9
 800a47e:	602a      	str	r2, [r5, #0]
 800a480:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a484:	81a3      	strh	r3, [r4, #12]
 800a486:	f04f 30ff 	mov.w	r0, #4294967295
 800a48a:	e033      	b.n	800a4f4 <__swsetup_r+0x98>
 800a48c:	0758      	lsls	r0, r3, #29
 800a48e:	d512      	bpl.n	800a4b6 <__swsetup_r+0x5a>
 800a490:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800a492:	b141      	cbz	r1, 800a4a6 <__swsetup_r+0x4a>
 800a494:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800a498:	4299      	cmp	r1, r3
 800a49a:	d002      	beq.n	800a4a2 <__swsetup_r+0x46>
 800a49c:	4628      	mov	r0, r5
 800a49e:	f7fe feff 	bl	80092a0 <_free_r>
 800a4a2:	2300      	movs	r3, #0
 800a4a4:	6363      	str	r3, [r4, #52]	@ 0x34
 800a4a6:	89a3      	ldrh	r3, [r4, #12]
 800a4a8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800a4ac:	81a3      	strh	r3, [r4, #12]
 800a4ae:	2300      	movs	r3, #0
 800a4b0:	6063      	str	r3, [r4, #4]
 800a4b2:	6923      	ldr	r3, [r4, #16]
 800a4b4:	6023      	str	r3, [r4, #0]
 800a4b6:	89a3      	ldrh	r3, [r4, #12]
 800a4b8:	f043 0308 	orr.w	r3, r3, #8
 800a4bc:	81a3      	strh	r3, [r4, #12]
 800a4be:	6923      	ldr	r3, [r4, #16]
 800a4c0:	b94b      	cbnz	r3, 800a4d6 <__swsetup_r+0x7a>
 800a4c2:	89a3      	ldrh	r3, [r4, #12]
 800a4c4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800a4c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a4cc:	d003      	beq.n	800a4d6 <__swsetup_r+0x7a>
 800a4ce:	4621      	mov	r1, r4
 800a4d0:	4628      	mov	r0, r5
 800a4d2:	f000 f883 	bl	800a5dc <__smakebuf_r>
 800a4d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a4da:	f013 0201 	ands.w	r2, r3, #1
 800a4de:	d00a      	beq.n	800a4f6 <__swsetup_r+0x9a>
 800a4e0:	2200      	movs	r2, #0
 800a4e2:	60a2      	str	r2, [r4, #8]
 800a4e4:	6962      	ldr	r2, [r4, #20]
 800a4e6:	4252      	negs	r2, r2
 800a4e8:	61a2      	str	r2, [r4, #24]
 800a4ea:	6922      	ldr	r2, [r4, #16]
 800a4ec:	b942      	cbnz	r2, 800a500 <__swsetup_r+0xa4>
 800a4ee:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800a4f2:	d1c5      	bne.n	800a480 <__swsetup_r+0x24>
 800a4f4:	bd38      	pop	{r3, r4, r5, pc}
 800a4f6:	0799      	lsls	r1, r3, #30
 800a4f8:	bf58      	it	pl
 800a4fa:	6962      	ldrpl	r2, [r4, #20]
 800a4fc:	60a2      	str	r2, [r4, #8]
 800a4fe:	e7f4      	b.n	800a4ea <__swsetup_r+0x8e>
 800a500:	2000      	movs	r0, #0
 800a502:	e7f7      	b.n	800a4f4 <__swsetup_r+0x98>
 800a504:	2000002c 	.word	0x2000002c

0800a508 <_raise_r>:
 800a508:	291f      	cmp	r1, #31
 800a50a:	b538      	push	{r3, r4, r5, lr}
 800a50c:	4605      	mov	r5, r0
 800a50e:	460c      	mov	r4, r1
 800a510:	d904      	bls.n	800a51c <_raise_r+0x14>
 800a512:	2316      	movs	r3, #22
 800a514:	6003      	str	r3, [r0, #0]
 800a516:	f04f 30ff 	mov.w	r0, #4294967295
 800a51a:	bd38      	pop	{r3, r4, r5, pc}
 800a51c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800a51e:	b112      	cbz	r2, 800a526 <_raise_r+0x1e>
 800a520:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a524:	b94b      	cbnz	r3, 800a53a <_raise_r+0x32>
 800a526:	4628      	mov	r0, r5
 800a528:	f000 f830 	bl	800a58c <_getpid_r>
 800a52c:	4622      	mov	r2, r4
 800a52e:	4601      	mov	r1, r0
 800a530:	4628      	mov	r0, r5
 800a532:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a536:	f000 b817 	b.w	800a568 <_kill_r>
 800a53a:	2b01      	cmp	r3, #1
 800a53c:	d00a      	beq.n	800a554 <_raise_r+0x4c>
 800a53e:	1c59      	adds	r1, r3, #1
 800a540:	d103      	bne.n	800a54a <_raise_r+0x42>
 800a542:	2316      	movs	r3, #22
 800a544:	6003      	str	r3, [r0, #0]
 800a546:	2001      	movs	r0, #1
 800a548:	e7e7      	b.n	800a51a <_raise_r+0x12>
 800a54a:	2100      	movs	r1, #0
 800a54c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800a550:	4620      	mov	r0, r4
 800a552:	4798      	blx	r3
 800a554:	2000      	movs	r0, #0
 800a556:	e7e0      	b.n	800a51a <_raise_r+0x12>

0800a558 <raise>:
 800a558:	4b02      	ldr	r3, [pc, #8]	@ (800a564 <raise+0xc>)
 800a55a:	4601      	mov	r1, r0
 800a55c:	6818      	ldr	r0, [r3, #0]
 800a55e:	f7ff bfd3 	b.w	800a508 <_raise_r>
 800a562:	bf00      	nop
 800a564:	2000002c 	.word	0x2000002c

0800a568 <_kill_r>:
 800a568:	b538      	push	{r3, r4, r5, lr}
 800a56a:	4d07      	ldr	r5, [pc, #28]	@ (800a588 <_kill_r+0x20>)
 800a56c:	2300      	movs	r3, #0
 800a56e:	4604      	mov	r4, r0
 800a570:	4608      	mov	r0, r1
 800a572:	4611      	mov	r1, r2
 800a574:	602b      	str	r3, [r5, #0]
 800a576:	f7f8 f9fb 	bl	8002970 <_kill>
 800a57a:	1c43      	adds	r3, r0, #1
 800a57c:	d102      	bne.n	800a584 <_kill_r+0x1c>
 800a57e:	682b      	ldr	r3, [r5, #0]
 800a580:	b103      	cbz	r3, 800a584 <_kill_r+0x1c>
 800a582:	6023      	str	r3, [r4, #0]
 800a584:	bd38      	pop	{r3, r4, r5, pc}
 800a586:	bf00      	nop
 800a588:	20000784 	.word	0x20000784

0800a58c <_getpid_r>:
 800a58c:	f7f8 b9e8 	b.w	8002960 <_getpid>

0800a590 <__swhatbuf_r>:
 800a590:	b570      	push	{r4, r5, r6, lr}
 800a592:	460c      	mov	r4, r1
 800a594:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a598:	2900      	cmp	r1, #0
 800a59a:	b096      	sub	sp, #88	@ 0x58
 800a59c:	4615      	mov	r5, r2
 800a59e:	461e      	mov	r6, r3
 800a5a0:	da0d      	bge.n	800a5be <__swhatbuf_r+0x2e>
 800a5a2:	89a3      	ldrh	r3, [r4, #12]
 800a5a4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800a5a8:	f04f 0100 	mov.w	r1, #0
 800a5ac:	bf14      	ite	ne
 800a5ae:	2340      	movne	r3, #64	@ 0x40
 800a5b0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800a5b4:	2000      	movs	r0, #0
 800a5b6:	6031      	str	r1, [r6, #0]
 800a5b8:	602b      	str	r3, [r5, #0]
 800a5ba:	b016      	add	sp, #88	@ 0x58
 800a5bc:	bd70      	pop	{r4, r5, r6, pc}
 800a5be:	466a      	mov	r2, sp
 800a5c0:	f000 f848 	bl	800a654 <_fstat_r>
 800a5c4:	2800      	cmp	r0, #0
 800a5c6:	dbec      	blt.n	800a5a2 <__swhatbuf_r+0x12>
 800a5c8:	9901      	ldr	r1, [sp, #4]
 800a5ca:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800a5ce:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800a5d2:	4259      	negs	r1, r3
 800a5d4:	4159      	adcs	r1, r3
 800a5d6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a5da:	e7eb      	b.n	800a5b4 <__swhatbuf_r+0x24>

0800a5dc <__smakebuf_r>:
 800a5dc:	898b      	ldrh	r3, [r1, #12]
 800a5de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a5e0:	079d      	lsls	r5, r3, #30
 800a5e2:	4606      	mov	r6, r0
 800a5e4:	460c      	mov	r4, r1
 800a5e6:	d507      	bpl.n	800a5f8 <__smakebuf_r+0x1c>
 800a5e8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800a5ec:	6023      	str	r3, [r4, #0]
 800a5ee:	6123      	str	r3, [r4, #16]
 800a5f0:	2301      	movs	r3, #1
 800a5f2:	6163      	str	r3, [r4, #20]
 800a5f4:	b003      	add	sp, #12
 800a5f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a5f8:	ab01      	add	r3, sp, #4
 800a5fa:	466a      	mov	r2, sp
 800a5fc:	f7ff ffc8 	bl	800a590 <__swhatbuf_r>
 800a600:	9f00      	ldr	r7, [sp, #0]
 800a602:	4605      	mov	r5, r0
 800a604:	4639      	mov	r1, r7
 800a606:	4630      	mov	r0, r6
 800a608:	f7fe febe 	bl	8009388 <_malloc_r>
 800a60c:	b948      	cbnz	r0, 800a622 <__smakebuf_r+0x46>
 800a60e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a612:	059a      	lsls	r2, r3, #22
 800a614:	d4ee      	bmi.n	800a5f4 <__smakebuf_r+0x18>
 800a616:	f023 0303 	bic.w	r3, r3, #3
 800a61a:	f043 0302 	orr.w	r3, r3, #2
 800a61e:	81a3      	strh	r3, [r4, #12]
 800a620:	e7e2      	b.n	800a5e8 <__smakebuf_r+0xc>
 800a622:	89a3      	ldrh	r3, [r4, #12]
 800a624:	6020      	str	r0, [r4, #0]
 800a626:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800a62a:	81a3      	strh	r3, [r4, #12]
 800a62c:	9b01      	ldr	r3, [sp, #4]
 800a62e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800a632:	b15b      	cbz	r3, 800a64c <__smakebuf_r+0x70>
 800a634:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a638:	4630      	mov	r0, r6
 800a63a:	f000 f81d 	bl	800a678 <_isatty_r>
 800a63e:	b128      	cbz	r0, 800a64c <__smakebuf_r+0x70>
 800a640:	89a3      	ldrh	r3, [r4, #12]
 800a642:	f023 0303 	bic.w	r3, r3, #3
 800a646:	f043 0301 	orr.w	r3, r3, #1
 800a64a:	81a3      	strh	r3, [r4, #12]
 800a64c:	89a3      	ldrh	r3, [r4, #12]
 800a64e:	431d      	orrs	r5, r3
 800a650:	81a5      	strh	r5, [r4, #12]
 800a652:	e7cf      	b.n	800a5f4 <__smakebuf_r+0x18>

0800a654 <_fstat_r>:
 800a654:	b538      	push	{r3, r4, r5, lr}
 800a656:	4d07      	ldr	r5, [pc, #28]	@ (800a674 <_fstat_r+0x20>)
 800a658:	2300      	movs	r3, #0
 800a65a:	4604      	mov	r4, r0
 800a65c:	4608      	mov	r0, r1
 800a65e:	4611      	mov	r1, r2
 800a660:	602b      	str	r3, [r5, #0]
 800a662:	f7f8 f9e5 	bl	8002a30 <_fstat>
 800a666:	1c43      	adds	r3, r0, #1
 800a668:	d102      	bne.n	800a670 <_fstat_r+0x1c>
 800a66a:	682b      	ldr	r3, [r5, #0]
 800a66c:	b103      	cbz	r3, 800a670 <_fstat_r+0x1c>
 800a66e:	6023      	str	r3, [r4, #0]
 800a670:	bd38      	pop	{r3, r4, r5, pc}
 800a672:	bf00      	nop
 800a674:	20000784 	.word	0x20000784

0800a678 <_isatty_r>:
 800a678:	b538      	push	{r3, r4, r5, lr}
 800a67a:	4d06      	ldr	r5, [pc, #24]	@ (800a694 <_isatty_r+0x1c>)
 800a67c:	2300      	movs	r3, #0
 800a67e:	4604      	mov	r4, r0
 800a680:	4608      	mov	r0, r1
 800a682:	602b      	str	r3, [r5, #0]
 800a684:	f7f8 f9e4 	bl	8002a50 <_isatty>
 800a688:	1c43      	adds	r3, r0, #1
 800a68a:	d102      	bne.n	800a692 <_isatty_r+0x1a>
 800a68c:	682b      	ldr	r3, [r5, #0]
 800a68e:	b103      	cbz	r3, 800a692 <_isatty_r+0x1a>
 800a690:	6023      	str	r3, [r4, #0]
 800a692:	bd38      	pop	{r3, r4, r5, pc}
 800a694:	20000784 	.word	0x20000784

0800a698 <_init>:
 800a698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a69a:	bf00      	nop
 800a69c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a69e:	bc08      	pop	{r3}
 800a6a0:	469e      	mov	lr, r3
 800a6a2:	4770      	bx	lr

0800a6a4 <_fini>:
 800a6a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a6a6:	bf00      	nop
 800a6a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a6aa:	bc08      	pop	{r3}
 800a6ac:	469e      	mov	lr, r3
 800a6ae:	4770      	bx	lr
